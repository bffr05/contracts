{"allSourcePaths": {"16": "contracts/Market/Reader/Search.sol", "24": "contracts/agnostic/Array.sol", "29": "contracts/agnostic/Keccak/BytesAndKeccakLib.sol", "25": "contracts/agnostic/BytesLib.sol", "3": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol", "9": "contracts/Delivery/Delivery.sol", "23": "contracts/Repository/Repository.sol", "5": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol", "11": "contracts/Market/Market.sol", "10": "contracts/Market/Lib.sol", "14": "contracts/Market/Path.sol", "18": "contracts/Market/Reader/SearchLib.sol", "19": "contracts/Market/Storage.sol", "31": "contracts/agnostic/Mode.sol", "12": "contracts/Market/Order/Lib.sol", "32": "contracts/agnostic/Ownable.sol", "33": "contracts/agnostic/StringLib.sol", "4": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol", "39": "contracts/agnostic/UIntConverter.sol"}, "bytecode": "60a06040523480156200001157600080fd5b5060405162005fcf38038062005fcf8339810160408190526200003491620000b1565b8080620000413362000056565b6001600160a01b031660805250620000e39050565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600060208284031215620000c457600080fd5b81516001600160a01b0381168114620000dc57600080fd5b9392505050565b608051615e59620001766000396000818161043c015281816104ee0152818161058c01528181610749015281816107dc01528181610bfc01528181610dd801528181610e8b015281816111ec0152818161127d0152818161173201528181611a5d0152818161277f015281816129a301528181612b950152818161357d0152818161363001526143e70152615e596000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063854ba99d116100f9578063ccbd163711610097578063e4b1614411610071578063e4b1614414610466578063e9f14ce614610479578063f2fde38b1461048c578063feab44541461049f576101a9565b8063ccbd163714610424578063ccc0795914610437578063d69358581461045e576101a9565b8063af640d0f116100d3578063af640d0f146103c5578063b03fd40d146103eb578063b9b38745146103fe578063bd0ade2b14610411576101a9565b8063854ba99d146103825780638da5cb5b1461038a57806397962076146103b5576101a9565b80632203616d116101665780636b2b091a116101405780636b2b091a14610331578063715018a61461035157806372ea61bf146103595780637af6649a14610361576101a9565b80632203616d146102d65780635f5c5baa146102fe5780636296514114610306576101a9565b806301ffc9a71461022e57806305d6bd9c1461025657806309252f02146102605780630a3550aa146102825780631ef4590d146102a357806321603f43146102b6575b6101b16104c9565b60006101c16024600436846147eb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060208501519495509250503660231981019150601f19016004838037816024600437600080826000875af49250505061022981610693565b505050005b61024161023c366004614815565b6106a9565b60405190151581526020015b60405180910390f35b61025e6106e0565b005b61027361026e366004614a51565b6106f7565b60405161024d93929190614ba6565b610295610290366004614be2565b610860565b60405161024d929190614c9f565b6102416102b1366004614ddc565b610b22565b6102c96102c4366004614dfe565b610bb3565b60405161024d9190614e4f565b6102e96102e4366004614dfe565b610bc6565b60405163ffffffff909116815260200161024d565b61025e610bd7565b610319610314366004614dfe565b610cec565b6040516001600160401b03909116815260200161024d565b61034461033f366004614dfe565b610d1e565b60405161024d9190614f00565b61025e61113a565b61025e61114c565b61037461036f366004614f62565b611166565b60405190815260200161024d565b61024161117f565b6000546201000090046001600160a01b03165b6040516001600160a01b03909116815260200161024d565b600054610100900460ff16610241565b7fdcf6913c74762e0b3c7f94f504bb2be7445bbd8d11abee9960f04ebf85e7a7b2610374565b6103746103f9366004614f8a565b61119d565b61029561040c366004614a51565b6111b7565b61027361041f366004614be2565b6112fe565b610295610432366004614fb3565b6115a8565b61039d7f000000000000000000000000000000000000000000000000000000000000000081565b61025e611883565b610374610474366004615016565b61189f565b610273610487366004614fb3565b6118b6565b61025e61049a36600461503c565b611baf565b6104b26104ad366004614dfe565b611c28565b60405165ffffffffffff909116815260200161024d565b6000546001600160a01b03620100009091041633148061057c57506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166316279055336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190615059565b8061061a57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a9190615059565b6106915760405162461bcd60e51b815260206004820152603960248201527f416c6c6f77616e63653a2063616c6c6572206d757374206265205265706f736960448201527f746f727920436f6e7472616374206f72204f70657261746f720000000000000060648201526084015b60405180910390fd5b565b3d6000803e8080156106a4573d6000f35b3d6000fd5b60006001600160e01b031982166301ffc9a760e01b14806106da57506001600160e01b031982166315d3789560e31b145b92915050565b6106e86104c9565b6106916000805460ff19169055565b6060600061071f60405180606001604052806000815260200160008152602001600081525090565b6040516327bcdbc960e11b81526001600160a01b038a81166004830152602482018a905261084e917f000000000000000000000000000000000000000000000000000000000000000090911690634f79b79290604401602060405180830381865afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190615076565b6040516327bcdbc960e11b81526001600160a01b038a81166004830152602482018a90527f00000000000000000000000000000000000000000000000000000000000000001690634f79b79290604401602060405180830381865afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190615076565b87876118b6565b92509250925096509650969350505050565b61086861461e565b60606000835b6108796008826150a5565b8210156108c257858561088d8460086150bc565b81811061089c5761089c6150d4565b90506020020135600014156108b0576108c2565b816108ba816150ea565b92505061086e565b6000826001600160401b038111156108dc576108dc614854565b604051908082528060200260200182016040528015610905578160200160208202803683370190505b50905060005b838110156109655787876109208360086150bc565b81811061092f5761092f6150d4565b90506020020135828281518110610948576109486150d4565b60209081029190910101528061095d816150ea565b91505061090b565b50610b11896040518060e001604052808b81526020018a8a600081811061098e5761098e6150d4565b9050602002013581526020018a8a60018181106109ad576109ad6150d4565b9050602002013581526020018a8a60028181106109cc576109cc6150d4565b9050602002013560001415151581526020018a8a60038181106109f1576109f16150d4565b9050602002013560001415151581526020018a8a6007818110610a1657610a166150d4565b9050602002013581526020018481525060405180608001604052808b8b6005818110610a4457610a446150d4565b9050602002013581526020018b8b6006818110610a6357610a636150d4565b9050602002013581526020018b8b6004818110610a8257610a826150d4565b60209081029290920135835250016000604051908082528060200260200182016040528015610acb57816020015b610ab8614668565b815260200190600190039081610ab05790505b5090526040805160008082526020820190925290610b0b565b6040805180820190915260008082526020820152815260200190600190039081610ae45790505b50611c39565b945094505050505b94509492505050565b6000828152600160205260408082209051632be5db2360e11b815260048101919091526024810183905273__Array_________________________________906357cbb64690604401602060405180830381865af4158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac9190615059565b9392505050565b610bbb6146a1565b6106da826000612667565b60006106da64e8d4a5100083615105565b6000546001600160a01b036201000090910416331480610c8a57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a9190615059565b6106915760405162461bcd60e51b815260206004820152602d60248201527f416c6c6f77616e63653a2063616c6c6572206d757374206265205265706f736960448201526c3a37b93c9027b832b930ba37b960991b6064820152608401610688565b600080610cfe6402540be40084615105565b905082610d10826402540be400615127565b11156106da576106da615146565b6000818152600160209081526040808320805482518185028101850190935280835260609493830182828015610d7357602002820191906000526020600020905b815481526020019060010190808311610d5f575b5050505050905080516001600160401b03811115610d9357610d93614854565b604051908082528060200260200182016040528015610dc657816020015b6060815260200190600190039081610db15790505b5091506000805b82518110156110e7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338a699a4848381518110610e1757610e176150d4565b60200260200101516040518263ffffffff1660e01b8152600401610e3d91815260200190565b602060405180830381865afa158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e9190615059565b610e87576110d5565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327ee9dc2858481518110610eca57610eca6150d4565b60200260200101516040518263ffffffff1660e01b8152600401610ef091815260200190565b600060405180830381865afa158015610f0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f3591908101906151b7565b90506000815111610f825760405162461bcd60e51b815260206004820152601760248201527605f706174684c69737420706174682e6c656e6774683e3604c1b6044820152606401610688565b60005b60018251610f9391906150a5565b81101561108d5761107273__BytesAndKeccakLib_____________________6376254ff9848481518110610fc957610fc96150d4565b602002602001015185856001610fdf91906150bc565b81518110610fef57610fef6150d4565b60200260200101516040518363ffffffff1660e01b815260040161101d929190918252602082015260400190565b602060405180830381865af415801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190615076565b600090815260066020526040902054151590565b61107b5761108d565b80611085816150ea565b915050610f85565b6001825161109b91906150a5565b8110156110a95750506110d5565b8186856110b5816150ea565b9650815181106110c7576110c76150d4565b602002602001018190525050505b806110df816150ea565b915050610dcd565b50808352600081116111335760405162461bcd60e51b815260206004820152601560248201527405f6c6973745061746846726f6d20636f756e743e3605c1b6044820152606401610688565b5050919050565b611142612dd0565b6106916000612e31565b6111546104c9565b6106916000805460ff19166001179055565b60006106da65ffffffffffff831664174876e800615127565b6000805460ff16806111985750600054610100900460ff165b905090565b60006106da6001600160401b0383166402540be400615127565b6111bf61461e565b6040516327bcdbc960e11b81526001600160a01b038881166004830152602482018890526060916112ef917f00000000000000000000000000000000000000000000000000000000000000001690634f79b79290604401602060405180830381865afa158015611233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112579190615076565b6040516327bcdbc960e11b81526001600160a01b038981166004830152602482018990527f00000000000000000000000000000000000000000000000000000000000000001690634f79b79290604401602060405180830381865afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190615076565b86866115a8565b91509150965096945050505050565b6060600061132660405180606001604052806000815260200160008152602001600081525090565b6000806113346008876150a5565b90505b8082101561138157868661134c8460086150bc565b81811061135b5761135b6150d4565b905060200201356000141561136f57611381565b81611379816150ea565b925050611337565b6000826001600160401b0381111561139b5761139b614854565b6040519080825280602002602001820160405280156113c4578160200160208202803683370190505b50905060005b838110156114245788886113df8360086150bc565b8181106113ee576113ee6150d4565b90506020020135828281518110611407576114076150d4565b60209081029190910101528061141c816150ea565b9150506113ca565b506115948a6040518060e001604052808c81526020018b8b600081811061144d5761144d6150d4565b9050602002013581526020018b8b600181811061146c5761146c6150d4565b9050602002013581526020018b8b600281811061148b5761148b6150d4565b9050602002013560001415151581526020018b8b60038181106114b0576114b06150d4565b9050602002013560001415151581526020018b8b60078181106114d5576114d56150d4565b9050602002013581526020018481525060405180608001604052808c8c6005818110611503576115036150d4565b9050602002013581526020018c8c6006818110611522576115226150d4565b9050602002013581526020018c8c6004818110611541576115416150d4565b6020908102929092013583525001600060405190808252806020026020018201604052801561158a57816020015b611577614668565b81526020019060019003908161156f5790505b5090526000612e8c565b9550955095505050505b9450945094915050565b6115b061461e565b815160609060208111156116065760405162461bcd60e51b815260206004820152601d60248201527f64656c6976657279206172726179206d61782073697a652069732033320000006044820152606401610688565b61160e614730565b8551815260208087015190820152604086015161162c57600061162f565b60015b60ff166040820152606086015161164757600061164a565b60015b60ff1660608201526080868101519082015260a0808701519082015260c0808701519082015260e08087015190820152600860005b838110156116f857868181518110611699576116996150d4565b60200260200101516000146116e6578681815181106116ba576116ba6150d4565b60200260200101518383806116ce906150ea565b9450602881106116e0576116e06150d4565b60200201525b806116f0816150ea565b91505061167f565b505060405163023aa9ab60e61b81527f2e7a327ef83c2af7579c6634f2f5604519800c5f07626f27bd602fd11ed8e6ec60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015611781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a591906151eb565b6001600160a01b03167f0a3550aabeea45f9d515c45ea5dadcd6efbe5a3c73ab07644f630de564c6515a308b8b60606028886040516024016117ec96959493929190615208565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161182a919061526b565b600060405180830381855afa9150503d8060008114611865576040519150601f19603f3d011682016040523d82523d6000602084013e61186a565b606091505b5050905061187781610693565b50505094509492505050565b61188b612dd0565b6106916000805461ff001916610100179055565b60006106da63ffffffff831664e8d4a51000615127565b606060006118de60405180606001604052806000815260200160008152602001600081525090565b835160208111156119315760405162461bcd60e51b815260206004820152601d60248201527f64656c6976657279206172726179206d61782073697a652069732033320000006044820152606401610688565b611939614730565b8651815260208088015190820152604087015161195757600061195a565b60015b60ff1660408201526060870151611972576000611975565b60015b60ff1660608201526080878101519082015260a0808801519082015260c0808801519082015260e08088015190820152600860005b83811015611a23578781815181106119c4576119c46150d4565b6020026020010151600014611a11578781815181106119e5576119e56150d4565b60200260200101518383806119f9906150ea565b945060288110611a0b57611a0b6150d4565b60200201525b80611a1b816150ea565b9150506119aa565b505060405163023aa9ab60e61b81527f2e7a327ef83c2af7579c6634f2f5604519800c5f07626f27bd602fd11ed8e6ec60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015611aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad091906151eb565b6001600160a01b03167fbd0ade2bcae368fca26bb02146561a2830136bf30c4a34c648255fccebbe2254308c8c6060602888604051602401611b1796959493929190615208565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611b55919061526b565b600060405180830381855afa9150503d8060008114611b90576040519150601f19603f3d011682016040523d82523d6000602084013e611b95565b606091505b50509050611ba281610693565b5050509450945094915050565b611bb7612dd0565b6001600160a01b038116611c1c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610688565b611c2581612e31565b50565b60006106da64174876e80083615105565b611c4161461e565b81611c4a61461e565b6000611c5a888860000151613472565b805190915060005b81811015611e0857611c7261474f565b611cfe848381518110611c8757611c876150d4565b60200260200101516002868581518110611ca357611ca36150d4565b602002602001015151611cb691906150a5565b81518110611cc657611cc66150d4565b60200260200101518b60405180608001604052806000815260200160008152602001600081526020018d606001518152506000612e8c565b60408401526020830181905215159050611d185750611df6565b838281518110611d2a57611d2a6150d4565b6020908102919091010151815273__MarketLib_____________________________637513ce1b86836000604051908082528060200260200182016040528015611d8e57816020015b611d7b614668565b815260200190600190039081611d735790505b506040518463ffffffff1660e01b8152600401611dad93929190615465565b600060405180830381865af4158015611dca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611df29190810190615692565b9450505b80611e00816150ea565b915050611c62565b50505060408101515180611e1d575050610b19565b611e256147a7565b87518152602080890151818301526040808a0151818401526060808b01511515818501526080808c015115158186015260a0808d01519086015260c0808d0151908601528251908101835260008082528185018181528285018281528385018581528e518552968e0151909152938c0151909352908a0151909252836001600160401b03811115611eb857611eb8614854565b604051908082528060200260200182016040528015611ef157816020015b611ede61461e565b815260200190600190039081611ed65790505b50905060005b89518352600160a085015260005b85811015611ff657611f3a87604001518281518110611f2657611f266150d4565b60200260200101516000015186868b613866565b838281518110611f4c57611f4c6150d4565b60200260200101819052506001838281518110611f6b57611f6b6150d4565b602002602001015160400151511115611fe45760405162461bcd60e51b815260206004820152603560248201527f504152414e4f4941205f5f73656172636843466f6c6c6f77506174682073686f604482015274756c642072657475726e206d61782031206465736360581b6064820152608401610688565b80611fee816150ea565b915050611f05565b50600019600080805b8881101561215757858181518110612019576120196150d4565b6020026020010151600001516000141561203257612145565b600019841480612062575085818151811061204f5761204f6150d4565b6020026020010151602001516000015183115b156120f75760001984141580156120995750858181518110612086576120866150d4565b6020026020010151602001516040015183105b156120a6578291506120cb565b8581815181106120b8576120b86150d4565b6020026020010151602001516040015191505b8093508581815181106120e0576120e06150d4565b602002602001015160200151600001519250612145565b858181518110612109576121096150d4565b6020026020010151602001516000015182111561214557858181518110612132576121326150d4565b6020026020010151602001516000015191505b8061214f816150ea565b915050611fff565b5060001983141561216a57505050612658565b85525061217561461e565b6121a28860400151838151811061218e5761218e6150d4565b60200260200101516000015187878c613866565b90508060400151516001146122135760405162461bcd60e51b815260206004820152603160248201527f504152414e4f4941205f5f73656172636843466f6c6c6f77506174682073686f604482015270756c642072657475726e2031206465736360781b6064820152608401610688565b80516122595760405162461bcd60e51b81526020600482015260156024820152746966202873656c65637465642e717479203d3d302960581b6044820152606401610688565b604051639fab220f60e01b815273__MarketLib_____________________________90639fab220f90612292908d9085906004016157ac565b600060405180830381865af41580156122af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122d79190810190615692565b9950806060015151836122ea91906150bc565b92508060400151600081518110612303576123036150d4565b602002602001015160a001515160001461239057806040015160008151811061232e5761232e6150d4565b602002602001015160a0015160018260400151600081518110612353576123536150d4565b602002602001015160a001515161236a91906150a5565b8151811061237a5761237a6150d4565b60200260200101518361238d91906150a5565b92505b8873__MarketLib_____________________________637071133e909183604001516000815181106123c4576123c46150d4565b602002602001015184606001516040518463ffffffff1660e01b81526004016123ef939291906157d1565b600060405180830381865af415801561240c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261243491908101906157e4565b6060808701519083015160405163bf07928f60e01b8152929b5073__MarketLib_____________________________9263bf07928f92612478929091600401615899565b600060405180830381865af4158015612495573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124bd91908101906158be565b60608601528b51855260a08d015115612539578c60a0015183106125235760405162461bcd60e51b815260206004820152601f60248201527f696620286d6178636f756e743e3d7461726765745f2e6d6178636f756e7429006044820152606401610688565b828d60a0015161253391906150a5565b60a08701525b60408d0151156125ae5760408d01518151106125975760405162461bcd60e51b815260206004820152601e60248201527f6966202873656c65637465642e7174793e3d7461726765745f2e7174792900006044820152606401610688565b805160408e01516125a891906150a5565b60408701525b60408c015115612651576000670de0b6b3a76400008b60200151602001518c600001516125db9190615127565b6125e59190615105565b90508c60400151811061263a5760405162461bcd60e51b815260206004820152601f60248201527f69662028746f74616c3e3d7365617263686172675f2e6d6178746f74616c29006044820152606401610688565b808d6040015161264a91906150a5565b6040870152505b5050611ef7565b50505050505094509492505050565b61266f6146a1565b60008381526005602081815260408084208151610180810183528154815260018201546001600160a01b0381169482019490945293909291840191600160a01b900460ff16908111156126c4576126c4614e17565b60058111156126d5576126d5614e17565b81526001820154600160a81b900460ff166020820152600282015460408083019190915260038301546001600160401b0380821660608501526801000000000000000080830482166080860152600160801b808404831660a0870152600160c01b909304821660c086015260049586015480831660e087015290810482166101008601529190910416610120909201919091528251905163657c7e0960e01b8152918201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063657c7e09906024016040805180830381865afa1580156127cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f191906158f2565b6040840152602083015260808101516060830152828061288a575060608101516040516336181b6760e11b815260ff909116600482015273__Order_________________________________90636c3036ce90602401602060405180830381865af4158015612864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128889190615059565b155b15612d0d5760208101516001600160a01b0316825260a08101516128ad9061119d565b60808301526060810151604051632b2076e360e11b815260ff909116600482015273__Order_________________________________90635640edc690602401602060405180830381865af415801561290a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061292e9190615059565b1561294257608082015160a0830152612a8e565b6101208101516001600160401b03161561296e5761296481610120015161119d565b60a0830152612a8e565b60405163023aa9ab60e61b81527fcd775f2396f9f13f12bcf8ca32e21df66559a8adc3944d0591127e7731f7ab8560048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa1580156129f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1691906151eb565b6001600160a01b031663a9bf985883602001516040518263ffffffff1660e01b8152600401612a4791815260200190565b602060405180830381865afa158015612a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a889190615076565b60a08301525b612a9b8160c0015161119d565b60c083015260e0810151612aae9061119d565b60e08301526060810151604051635b7d0f6960e11b815260ff909116600482015273__Order_________________________________9063b6fa1ed290602401602060405180830381865af4158015612b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2f9190615059565b15612cf857612b4281610140015161119d565b610120830152610160810151612b579061119d565b61014083015260405163023aa9ab60e61b81527f3cb99135f7a7c088d9085b446345038a22a85f4e8fe072b0e1b66d97243e745860048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015612be4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c0891906151eb565b6001600160a01b0316636464b68a846020015185604001516040518363ffffffff1660e01b8152600401612c46929190918252602082015260400190565b606060405180830381865afa158015612c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c879190615916565b5091505080612ccc5760405162461bcd60e51b8152602060048201526011602482015270145d5bdd194e88139bdd081c5d5bdd1959607a1b6044820152606401610688565b610140830151612cdc9082615105565b836101200151612cec9190615127565b61010084015250612d0d565b612d0681610100015161119d565b6101008301525b604051630212d6cb60e21b815273__Order_________________________________9063084b5b2c90612d44908490600401615944565b602060405180830381865af4158015612d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d859190615076565b61016083015260408101516101808301906005811115612da757612da7614e17565b90816005811115612dba57612dba614e17565b9052506060015160ff166101a082015292915050565b6000546001600160a01b03620100009091041633146106915760405162461bcd60e51b815260206004820152601f60248201527f416c6c6f77616e63653a2063616c6c6572206d757374206265204f776e6572006044820152606401610688565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60606000612eb460405180606001604052806000815260200160008152602001600081525090565b612eca8787600001518860c00151600080614165565b80519093506000816001600160401b03811115612ee957612ee9614854565b604051908082528060200260200182016040528015612f2257816020015b612f0f614668565b815260200190600190039081612f075790505b5090506000805b83811015613274578960000151878281518110612f4857612f486150d4565b60200260200101516020015114612fb35760405162461bcd60e51b815260206004820152602960248201527f5f5f736561726368206f75745f5b695d2e61646472203d3d207461726765745f6044820152682e63757272656e637960b81b6064820152608401610688565b885115801590612fe357508860000151878281518110612fd557612fd56150d4565b602002602001015160800151115b15612fed57613262565b8960200151878281518110613004576130046150d4565b602002602001015160600151101561301b57613262565b886060015173__MarketLib_____________________________635640453d909189848151811061304e5761304e6150d4565b6020026020010151600001516040518363ffffffff1660e01b8152600401613077929190615a33565b602060405180830381865af4158015613094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130b89190615076565b8782815181106130ca576130ca6150d4565b60200260200101516040015110156130e157613262565b8681815181106130f3576130f36150d4565b602002602001015160600151896060015173__MarketLib_____________________________635640453d90918a8581518110613132576131326150d4565b6020026020010151600001516040518363ffffffff1660e01b815260040161315b929190615a33565b602060405180830381865af4158015613178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319c9190615076565b8883815181106131ae576131ae6150d4565b6020026020010151604001516131c491906150a5565b10156131cf57613262565b8960a0015160011480156131e65750602089015115155b801561321257508860200151878281518110613204576132046150d4565b602002602001015160800151115b1561321c57613262565b86818151811061322e5761322e6150d4565b6020026020010151838381518110613248576132486150d4565b6020026020010181905250818061325e906150ea565b9250505b8061326c816150ea565b915050612f29565b508152935073__MarketSearchLib_______________________905063b51b8e828460008989826040519080825280602002602001820160405280156132d457816020015b6132c1614668565b8152602001906001900390816132b95790505b506040518663ffffffff1660e01b81526004016132f5959493929190615a88565b600060405180830381865af4158015613312573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261333a9190810190615b31565b919450925090508361159e57604051637bf5cddb60e11b815273__MarketLib_____________________________9063f7eb9bb69061337d908690600401615b88565b600060405180830381865af415801561339a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133c291908101906158be565b92508560a001516000141580156133dd57508560a001518351115b1561159e5760a086015180845260405163742228d760e01b815273__MarketLib_____________________________9063742228d790613421908790600401615b88565b608060405180830381865af415801561343e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134629190615b9b565b9093509150509450945094915050565b60008281526001602090815260408083208054825181850281018501909352808352606094938301828280156134c757602002820191906000526020600020905b8154815260200190600101908083116134b3575b50505050509050600081511161351f5760405162461bcd60e51b815260206004820152601b60248201527f5f706174684c6973742066726f6d706174682e6c656e6774683e3000000000006044820152606401610688565b80516001600160401b0381111561353857613538614854565b60405190808252806020026020018201604052801561356b57816020015b60608152602001906001900390816135565790505b5091506000805b8251811015613816577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338a699a48483815181106135bc576135bc6150d4565b60200260200101516040518263ffffffff1660e01b81526004016135e291815260200190565b602060405180830381865afa1580156135ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136239190615059565b61362c57613804565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327ee9dc285848151811061366f5761366f6150d4565b60200260200101516040518263ffffffff1660e01b815260040161369591815260200190565b600060405180830381865afa1580156136b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526136da91908101906151b7565b905060008151116137275760405162461bcd60e51b815260206004820152601760248201527605f706174684c69737420706174682e6c656e6774683e3604c1b6044820152606401610688565b85816001835161373791906150a5565b81518110613747576137476150d4565b60200260200101511461375a5750613804565b60005b6001825161376b91906150a5565b8110156137bc576137a173__BytesAndKeccakLib_____________________6376254ff9848481518110610fc957610fc96150d4565b6137aa576137bc565b806137b4816150ea565b91505061375d565b600182516137ca91906150a5565b8110156137d8575050613804565b8186856137e4816150ea565b9650815181106137f6576137f66150d4565b602002602001018190525050505b8061380e816150ea565b915050613572565b508083526000811161385e5760405162461bcd60e51b815260206004820152601160248201527005f706174684c69737420636f756e743e3607c1b6044820152606401610688565b505092915050565b61386e61461e565b6002855110156138cc5760405162461bcd60e51b815260206004820152602360248201527f5f5f73656172636843466f6c6c6f775061746820706174685f2e6c656e6774686044820152621f1e9960e91b6064820152608401610688565b8351855186906138de906001906150a5565b815181106138ee576138ee6150d4565b6020026020010151146139695760405162461bcd60e51b815260206004820152603d60248201527f5f5f73656172636843466f6c6c6f775061746820706174685f5b706174685f2e60448201527f6c656e677468202d20315d3d3d7461726765745f2e63757272656e63790000006064820152608401610688565b606061397361474f565b865160021415613a79576139b0876002895161398f91906150a5565b8151811061399f5761399f6150d4565b602002602001015187876000612e8c565b6040840152602083015280516080830152875190925073__MarketLib_____________________________90632fbf1f939083908a906139f2906002906150a5565b81518110613a0257613a026150d4565b602002602001015189600001516040518463ffffffff1660e01b8152600401613a2d93929190615bc8565b600060405180830381865af4158015613a4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a729190810190615bed565b90506140d8565b604085015160015b60018951613a8f91906150a5565b811015613c4c576000613b848a613aa76001856150a5565b81518110613ab757613ab76150d4565b60200260200101516040518060e001604052808d8681518110613adc57613adc6150d4565b6020026020010151815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160006001600160401b03811115613b2957613b29614854565b604051908082528060200260200182016040528015613b52578160200160208202803683370190505b50815250604051806080016040528060008152602001600081526020018781526020018c606001518152506001612e8c565b5091505080613b9757505050505061415d565b8673__MarketLib_____________________________63e23edbef90918c8581518110613bc657613bc66150d4565b60200260200101516040518363ffffffff1660e01b8152600401613beb929190615c21565b602060405180830381865af4158015613c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c2c9190615076565b613c3690826150bc565b9250508080613c44906150ea565b915050613a81565b50613ca68860028a51613c5f91906150a5565b81518110613c6f57613c6f6150d4565b602002602001015188604051806080016040528060008152602001600081526020018581526020018a606001518152506000612e8c565b604085015260208401819052909350613cc15750505061415d565b82516080830152875173__MarketLib_____________________________90632fbf1f939084908b90613cf6906002906150a5565b81518110613d0657613d066150d4565b60200260200101518a600001516040518463ffffffff1660e01b8152600401613d3193929190615bc8565b600060405180830381865af4158015613d4e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613d769190810190615bed565b9150670de0b6b3a76400008260400151602001518360200151613d999190615127565b613da39190615105565b9050600060028951613db591906150a5565b90505b80156140d5576060613dc861474f565b613dd06147a7565b613dfb6040518060800160405280600081526020016000815260200160008152602001606081525090565b8c8581518110613e0d57613e0d6150d4565b60200260200101518260000181815250508973__MarketLib_____________________________63e23edbef90918f8881518110613e4d57613e4d6150d4565b60200260200101516040518363ffffffff1660e01b8152600401613e72929190615c21565b602060405180830381865af4158015613e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613eb39190615076565b613ebd90876150a5565b6040830152600160608084018290528c81015190830152613f05908e90613ee490886150a5565b81518110613ef457613ef46150d4565b602002602001015183836000612e8c565b60408601526020850181905290945015159150613f2990505750505050505061415d565b670de0b6b3a76400008160400151602001518260200151613f4a9190615127565b613f549190615105565b935073__MarketLib_____________________________6350308ede86888e613f7e6001896150a5565b81518110613f8e57613f8e6150d4565b6020026020010151866040518563ffffffff1660e01b8152600401613fb69493929190615c34565b600060405180830381865af4158015613fd3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613ffb9190810190615c73565b604080840151519083015151919850919650670de0b6b3a76400009161402091615127565b61402a9190615105565b60408087018051929092528281015181015191510151670de0b6b3a76400009161405391615127565b61405d9190615105565b85604001516040018181525050670de0b6b3a7640000856020015182604001516020015183602001516140909190615127565b61409a9190615105565b8660400151602001516140ad9190615127565b6140b79190615105565b604086015160200152508190506140cd81615cd6565b915050613db8565b50505b604051637513ce1b60e01b815273__MarketLib_____________________________90637513ce1b9061411390869085908790600401615465565b600060405180830381865af4158015614130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526141589190810190615692565b925050505b949350505050565b606060008060006006600073__BytesAndKeccakLib_____________________6376254ff98c8c6040518363ffffffff1660e01b81526004016141b2929190918252602082015260400190565b602060405180830381865af41580156141cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141f39190615076565b81526020810191909152604001600020805490915085614211578095505b856001600160401b0381111561422957614229614854565b60405190808252806020026020018201604052801561426257816020015b61424f614668565b8152602001906001900390816142475790505b50945060005b8181101561460f5786841061427c5761460f565b600060056000858481548110614294576142946150d4565b90600052602060002001548152602001908152602001600020905073__Order_________________________________63084b5b2c826040518263ffffffff1660e01b81526004016142e69190615dc8565b602060405180830381865af4158015614303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143279190615076565b15806143ab5750604051630212d6cb60e21b8152429073__Order_________________________________9063084b5b2c90614367908590600401615dc8565b602060405180830381865af4158015614384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143a89190615076565b10155b80156144c8575060405163023aa9ab60e61b81527f33ffbdff3a4282df4353f3593b78d26aaf4c28b5786164f828858505bc5e301c60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015614436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061445a91906151eb565b6001600160a01b0316635aca1641828c6040518363ffffffff1660e01b8152600401614487929190615dd7565b602060405180830381865afa1580156144a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144c89190615059565b156145fb57856144d7816150ea565b9650508886116144e757506145fd565b60006145108584815481106144fe576144fe6150d4565b90600052602060002001546001612667565b90508060a00151816080015110156145295750506145fd565b8060600151888781518110614540576145406150d4565b602002602001015160000181815250508060400151888781518110614567576145676150d4565b602002602001015160200181815250508060a0015188878151811061458e5761458e6150d4565b6020026020010151606001818152505080608001518887815181106145b5576145b56150d4565b602002602001015160400181815250508061010001518887815181106145dd576145dd6150d4565b602090810291909101015160800152856145f6816150ea565b965050505b505b80614607816150ea565b915050614268565b50505082525095945050505050565b60405180608001604052806000815260200161465460405180606001604052806000815260200160008152602001600081525090565b815260200160608152602001606081525090565b6040518060c001604052806000815260200160008019168152602001600081526020016000815260200160008152602001606081525090565b604051806101c0016040528060006001600160a01b0316815260200160008019168152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000600581111561472357614723614e17565b8152600060209091015290565b6040518061050001604052806028906020820280368337509192915050565b6040518060c00160405280606081526020016000815260200161478c60405180606001604052806000815260200160008152602001600081525090565b81526020016000815260200160008152602001606081525090565b6040518060e0016040528060008019168152602001600081526020016000815260200160001515815260200160001515815260200160008152602001606081525090565b600080858511156147fb57600080fd5b8386111561480857600080fd5b5050820193919092039150565b60006020828403121561482757600080fd5b81356001600160e01b031981168114610bac57600080fd5b6001600160a01b0381168114611c2557600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561488c5761488c614854565b60405290565b604051608081016001600160401b038111828210171561488c5761488c614854565b604080519081016001600160401b038111828210171561488c5761488c614854565b604051601f8201601f191681016001600160401b03811182821017156148fe576148fe614854565b604052919050565b8015158114611c2557600080fd5b803561491f81614906565b919050565b600061010080838503121561493857600080fd5b604051908101906001600160401b038211818310171561495a5761495a614854565b6040918252833581526020808501359082015291508201358161497c82614906565b81604082015261498e60608501614914565b60608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152505092915050565b60006001600160401b038211156149dc576149dc614854565b5060051b60200190565b600082601f8301126149f757600080fd5b81356020614a0c614a07836149c3565b6148d6565b82815260059290921b84018101918181019086841115614a2b57600080fd5b8286015b84811015614a465780358352918301918301614a2f565b509695505050505050565b6000806000806000806101a08789031215614a6b57600080fd5b8635614a768161483f565b9550602087013594506040870135614a8d8161483f565b935060608701359250614aa38860808901614924565b91506101808701356001600160401b03811115614abf57600080fd5b614acb89828a016149e6565b9150509295509295509295565b600081518084526020808501945080840160005b83811015614b0857815187529582019590820190600101614aec565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015614b99578284038952815180518552858101518686015260408082015190860152606080820151908601526080808201519086015260a09081015160c091860182905290614b8581870183614ad8565b9a87019a9550505090840190600101614b31565b5091979650505050505050565b60a081526000614bb960a0830186614b13565b905083602083015261415d60408301848051825260208082015190830152604090810151910152565b60008060008060608587031215614bf857600080fd5b843593506020850135925060408501356001600160401b0380821115614c1d57600080fd5b818701915087601f830112614c3157600080fd5b813581811115614c4057600080fd5b8860208260051b8501011115614c5557600080fd5b95989497505060200194505050565b600081518084526020808501945080840160005b83811015614b08578151805188528301518388015260409096019590820190600101614c78565b600060408083526101008084018651838601526020808801516060614cda818901838051825260208082015190830152604090810151910152565b858a015160c0898101819052815195869052610120600587901b8b0181019692860194509091908a019060005b81811015614d9c578b880361011f19018352855180518a8a52614d2c8b8b0182614ad8565b905088820151898b01528b820151614d5a8d8c01828051825260208082015190830152604090810151910152565b508187015160a08b8101919091526080830151878c01529091015189820360e08b015290614d888183614ad8565b995050509486019491860191600101614d07565b50505050890151878403603f190160e08901529450614dbd90508285614b13565b935085840381870152505050614dd38185614c64565b95945050505050565b60008060408385031215614def57600080fd5b50508035926020909101359150565b600060208284031215614e1057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60068110614e4b57634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b031681526101c081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525061016080840151818401525061018080840151614eea82850182614e2d565b50506101a08381015160ff81168483015261385e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614f5557603f19888603018452614f43858351614ad8565b94509285019290850190600101614f27565b5092979650505050505050565b600060208284031215614f7457600080fd5b813565ffffffffffff81168114610bac57600080fd5b600060208284031215614f9c57600080fd5b81356001600160401b0381168114610bac57600080fd5b6000806000806101608587031215614fca57600080fd5b8435935060208501359250614fe28660408701614924565b91506101408501356001600160401b03811115614ffe57600080fd5b61500a878288016149e6565b91505092959194509250565b60006020828403121561502857600080fd5b813563ffffffff81168114610bac57600080fd5b60006020828403121561504e57600080fd5b8135610bac8161483f565b60006020828403121561506b57600080fd5b8151610bac81614906565b60006020828403121561508857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156150b7576150b761508f565b500390565b600082198211156150cf576150cf61508f565b500190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156150fe576150fe61508f565b5060010190565b60008261512257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156151415761514161508f565b500290565b634e487b7160e01b600052600160045260246000fd5b600082601f83011261516d57600080fd5b8151602061517d614a07836149c3565b82815260059290921b8401810191818101908684111561519c57600080fd5b8286015b84811015614a4657805183529183019183016151a0565b6000602082840312156151c957600080fd5b81516001600160401b038111156151df57600080fd5b61415d8482850161515c565b6000602082840312156151fd57600080fd5b8151610bac8161483f565b6001600160a01b038716815260208082018790526040820186905260608201859052608082018490526105a082019060a083018460005b602881101561525c5781518352918301919083019060010161523f565b50505050979650505050505050565b6000825160005b8181101561528c5760208186018101518583015201615272565b8181111561529b576000828501525b509190910192915050565b80516101008084528151908401819052600091610120850191602091820190845b818110156152e3578251855293830193918301916001016152c7565b50505083810151908501526040808401518051828701526020810151606087015290810151608086015250606083015160a0850152608083015160c085015260a083015184820360e0860152614dd38282614ad8565b600081518084526020808501808196508360051b8101915082860160005b85811015614b99578284038952815180518552858101518686015260408082015190860152606080820151908601526080808201519086015260a09081015160c0918601829052906153ab81870183614ad8565b9a87019a9550505090840190600101615357565b600060c08301825184526020808401516153ef828701828051825260208082015190830152604090810151910152565b50604084015160c0608087015282815180855260e08801915060e08160051b8901019450838301925060005b818110156154495760df198987030183526154378685516152a6565b9550928401929184019160010161541b565b5050505050606083015184820360a0860152614dd38282615339565b60608152600061547860608301866153bf565b828103602084015261548a81866152a6565b9050828103604084015261549e8185615339565b9695505050505050565b6000606082840312156154ba57600080fd5b604051606081018181106001600160401b03821117156154dc576154dc614854565b80604052508091508251815260208301516020820152604083015160408201525092915050565b6000610100828403121561551657600080fd5b61551e61486a565b905081516001600160401b038082111561553757600080fd5b6155438583860161515c565b83526020840151602084015261555c85604086016154a8565b604084015260a0840151606084015260c0840151608084015260e084015191508082111561558957600080fd5b506155968482850161515c565b60a08301525092915050565b600082601f8301126155b357600080fd5b815160206155c3614a07836149c3565b82815260059290921b840181019181810190868411156155e257600080fd5b8286015b84811015614a465780516001600160401b03808211156156065760008081fd5b9088019060c0828b03601f19018113156156205760008081fd5b61562861486a565b87840151815260408085015189830152606080860151828401526080915081860151818401525060a080860151828401528386015193508484111561566f57600091508182fd5b61567d8e8b8689010161515c565b908301525086525050509183019183016155e6565b600060208083850312156156a557600080fd5b82516001600160401b03808211156156bc57600080fd5b9084019060c082870312156156d057600080fd5b6156d8614892565b825181526156e8878585016154a8565b848201526080830151828111156156fe57600080fd5b8301601f8101881361570f57600080fd5b805161571d614a07826149c3565b81815260059190911b8201860190868101908a83111561573c57600080fd5b8784015b83811015615774578051878111156157585760008081fd5b6157668d8b83890101615503565b845250918801918801615740565b50604085015250505060a083015193508184111561579157600080fd5b61579d878585016155a2565b60608201529695505050505050565b6040815260006157bf60408301856153bf565b8281036020840152614dd381856153bf565b6060815260006154786060830186614c64565b600060208083850312156157f757600080fd5b82516001600160401b0381111561580d57600080fd5b8301601f8101851361581e57600080fd5b805161582c614a07826149c3565b81815260069190911b8201830190838101908783111561584b57600080fd5b928401925b8284101561588e57604084890312156158695760008081fd5b6158716148b4565b845181528585015186820152825260409093019290840190615850565b979650505050505050565b6040815260006158ac6040830185615339565b8281036020840152614dd38185615339565b6000602082840312156158d057600080fd5b81516001600160401b038111156158e657600080fd5b61415d848285016155a2565b6000806040838503121561590557600080fd5b505080516020909101519092909150565b60008060006060848603121561592b57600080fd5b8351925060208401519150604084015190509250925092565b81518152602080830151610180830191615968908401826001600160a01b03169052565b50604083015161597b6040840182614e2d565b506060830151615990606084018260ff169052565b506080830151608083015260a08301516159b560a08401826001600160401b03169052565b5060c08301516159d060c08401826001600160401b03169052565b5060e08301516159eb60e08401826001600160401b03169052565b50610100838101516001600160401b0390811691840191909152610120808501518216908401526101408085015182169084015261016080850151918216818501529061385e565b604081526000615a466040830185615339565b90508260208301529392505050565b805182526020810151602083015260408101516040830152600060608201516080606085015261415d6080850182615339565b60a081526000615a9b60a0830188615339565b866020840152828103604084015285518152602086015160208201526040860151604082015260608601511515606082015260808601511515608082015260a086015160a082015260c086015160e060c0830152615afc60e0830182614ad8565b9150508281036060840152615b118186615a55565b90508281036080840152615b258185615339565b98975050505050505050565b600080600060a08486031215615b4657600080fd5b83516001600160401b03811115615b5c57600080fd5b615b68868287016155a2565b93505060208401519150615b7f85604086016154a8565b90509250925092565b602081526000610bac6020830184615339565b60008060808385031215615bae57600080fd5b82519150615bbf84602085016154a8565b90509250929050565b606081526000615bdb60608301866152a6565b60208301949094525060400152919050565b600060208284031215615bff57600080fd5b81516001600160401b03811115615c1557600080fd5b61415d84828501615503565b604081526000615a466040830185614c64565b608081526000615c4760808301876152a6565b8281036020840152615c598187615339565b9050846040840152828103606084015261588e8185615339565b60008060408385031215615c8657600080fd5b82516001600160401b0380821115615c9d57600080fd5b615ca986838701615503565b93506020850151915080821115615cbf57600080fd5b50615ccc858286016155a2565b9150509250929050565b600081615ce557615ce561508f565b506000190190565b8054825260018101546001600160a01b0381166020840152615d186040840160ff8360a01c16614e2d565b60a81c60ff1660608301526002810154608083015260038101546001600160401b0380821660a0850152604082901c811660c0850152615d6860e08501828460801c166001600160401b03169052565b60c082901c61010085015260048301546001600160401b03828216166101208601529150615da76101408501828460401c166001600160401b03169052565b615dc26101608501828460801c166001600160401b03169052565b50505050565b61018081016106da8284615ced565b60006101a0808301615de98487615ced565b6101808401919091528351908190526101c083019060209081860160005b82811015614f5557815185529383019390830190600101615e0756fea2646970667358221220320a65d0e2d793a1e6159e748a9aba561dba27d9da6042b2a6d4f4bdd3d90f8764736f6c634300080b0033", "bytecodeSha1": "7b83eca8128a8cb4d8563fd185f907a4a0bbf797", "coverageMap": {"statements": {"16": {"MarketSearch.searchEx": {"8": [7062, 7243]}, "MarketSearch.d_searchC": {"9": [13093, 13098], "10": [13029, 13044], "11": [13231, 13257], "12": [13214, 13217], "13": [13268, 13850]}, "MarketSearch.searchCEx": {"36": [14174, 14356]}, "MarketSearch.d_search": {"37": [6107, 6112], "38": [6043, 6058], "39": [6245, 6271], "40": [6228, 6231], "41": [6282, 6711]}, "MarketSearch.searchC": {"42": [14683, 14734], "43": [14808, 14835], "44": [14845, 14864], "45": [14874, 14906], "46": [14916, 14948], "47": [14958, 14982], "48": [14992, 15016], "49": [15026, 15053], "50": [15063, 15087], "51": [15216, 15245], "52": [15172, 15175], "53": [15639, 15655]}, "MarketSearch.search": {"57": [7581, 7632], "58": [7706, 7733], "59": [7743, 7762], "60": [7772, 7804], "61": [7814, 7846], "62": [7856, 7880], "63": [7890, 7914], "64": [7924, 7951], "65": [7961, 7985], "66": [8114, 8143], "67": [8070, 8073], "68": [8520, 8536]}, "MarketSearch.__searchC": {"72": [20788, 20812], "73": [21077, 21307], "74": [21344, 21352], "75": [21370, 21390], "76": [21408, 21454], "77": [21009, 21012], "78": [21561, 21587], "79": [21692, 21726], "80": [21740, 21786], "81": [21800, 21824], "82": [21838, 21872], "83": [21886, 21920], "84": [21934, 21968], "85": [21983, 22017], "86": [22087, 22127], "87": [22141, 22187], "88": [22201, 22241], "89": [22255, 22287], "90": [22439, 22479], "91": [22493, 22512], "92": [22575, 22767], "93": [22785, 22882], "94": [22552, 22555], "95": [23148, 23156], "96": [23423, 23442], "97": [23501, 23543], "98": [23569, 23582], "99": [23608, 23650], "100": [23769, 23811], "101": [23068, 23071], "102": [23987, 23992], "103": [24029, 24058], "104": [24299, 24491], "105": [24509, 24594], "106": [24674, 24712], "107": [24763, 24788], "108": [24802, 24838], "109": [24908, 24979], "110": [24993, 25065], "111": [25080, 25135], "112": [25149, 25189], "113": [25330, 25378], "114": [25441, 25484], "115": [25631, 25678], "116": [25741, 25778], "117": [26005, 26053], "118": [26116, 26162]}, "MarketSearch.__search": {"140": [10013, 10157], "141": [10441, 10526], "142": [10675, 10683], "143": [10751, 10759], "144": [10925, 10933], "145": [11094, 11102], "146": [11298, 11306], "147": [11325, 11350], "148": [11368, 11375], "149": [10383, 10386], "150": [11890, 12061], "151": [12145, 12164], "152": [12392, 12427]}, "MarketSearch.__searchCFollowPath": {"164": [15967, 16032], "165": [16042, 16157], "166": [16336, 16511], "167": [16525, 16554], "168": [16568, 16685], "169": [16983, 17470], "170": [17506, 17517], "171": [17535, 17575], "172": [16885, 16888], "173": [17735, 17972], "174": [18019, 18030], "175": [18090, 18119], "176": [18137, 18266], "177": [18324, 18371], "178": [19191, 19217], "179": [19243, 19287], "180": [19421, 19443], "181": [19554, 19583], "182": [19652, 19863], "183": [19922, 19933], "184": [19951, 20006], "185": [20026, 20102], "186": [20120, 20194], "187": [20212, 20286], "188": [20304, 20404], "189": [18428, 18431], "190": [20467, 20499]}, "MarketSearch.__fromToListEx": {"191": [4348, 4360], "192": [4370, 4399], "193": [4482, 4487], "194": [4798, 4810], "195": [4854, 4862], "196": [5003, 5011], "197": [5029, 5071], "198": [5089, 5123], "199": [5141, 5191], "200": [5209, 5243], "201": [5261, 5299], "202": [5317, 5327], "203": [4439, 4442]}}, "24": {}, "29": {}, "25": {}, "3": {"Context._msgSender": {"3": [659, 676]}}, "9": {}, "23": {"RepositoryContract.<fallback>": {"0": [5311, 5327]}, "RepositoryContract.checkContractsOrOperators": {"4": [3409, 3634]}, "RepositoryContract.supportsInterface": {"5": [1203, 1306]}, "RepositoryContract.unsetSTOP": {"6": [3827, 3839]}, "RepositoryContract.checkOperators": {"17": [3089, 3238]}, "RepositoryContract.setSTOP": {"31": [3741, 3751]}, "RepositoryContract.setSTOPFOREVER": {"54": [3905, 3922]}, "RepositoryContract.checkOwner": {"137": [2512, 2581]}}, "5": {}, "11": {"Market.order": {"15": [3591, 3620]}, "Market.MarketPathKeccak": {"20": [824, 834]}, "Market.MarketPathIsActiveFromTo": {"23": [957, 997]}, "Market.__order": {"119": [1413, 1508], "120": [1519, 1553], "121": [1651, 1685], "122": [1735, 1778], "123": [1856, 1893], "124": [1957, 2016], "125": [2065, 2136], "126": [2150, 2201], "127": [2237, 2296], "128": [2439, 2502], "129": [2595, 2706], "130": [2839, 2979], "131": [2997, 3039], "132": [3057, 3181], "133": [3202, 3249], "134": [3286, 3328], "135": [3338, 3368], "136": [3412, 3446]}}, "10": {}, "14": {"MarketPathStorage._existPath": {"14": [748, 788]}, "MarketPathReader._listPathFrom": {"19": [1041, 1080], "21": [1230, 1238], "22": [1371, 1422], "24": [1765, 1770], "25": [1487, 1490], "26": [1809, 1817], "27": [1831, 1851], "28": [1150, 1153], "29": [1932, 1975]}, "MarketPathReader._listPath": {"153": [2459, 2518], "154": [2529, 2568], "155": [2718, 2726], "156": [2859, 2910], "157": [2958, 2966], "158": [3309, 3314], "159": [3031, 3034], "160": [3353, 3361], "161": [3375, 3395], "162": [2638, 2641], "163": [3476, 3515]}}, "18": {}, "19": {}, "31": {"ModeStop.STOPFOREVER": {"2": [515, 534]}, "ModeStop._unsetSTOP": {"7": [711, 723]}, "ModeStop._setSTOP": {"32": [652, 663]}, "ModeStop.STOP": {"34": [430, 456]}, "ModeStop._setSTOPFOREVER": {"55": [588, 606]}}, "12": {}, "32": {"Ownable.owner": {"1": [1201, 1214]}, "Ownable.renounceOwnership": {"30": [2130, 2160]}, "Ownable.transferOwnership": {"69": [2396, 2469], "70": [2479, 2507]}, "Ownable._transferOwnership": {"138": [2776, 2793], "139": [2803, 2848]}}, "33": {}, "4": {}, "39": {"UIntConverter.UInt256ToUInt32": {"16": [865, 893]}, "UIntConverter.UInt256ToUInt64": {"18": [363, 387]}, "UIntConverter.UInt48ToUInt256": {"33": [506, 535]}, "UIntConverter.UInt64ToUInt256": {"35": [206, 235]}, "UIntConverter.UInt32ToUInt256": {"56": [745, 774]}, "UIntConverter.UInt256ToUInt48": {"71": [626, 654]}}}, "branches": {"16": {"MarketSearch.d_searchC": {"204": [13062, 13091, false]}, "MarketSearch.d_search": {"205": [6076, 6105, false]}, "MarketSearch.searchC": {"206": [14691, 14700, true], "207": [14884, 14898, true], "208": [14926, 14940, true], "209": [15197, 15214, false]}, "MarketSearch.search": {"210": [7589, 7598, true], "211": [7782, 7796, true], "212": [7824, 7838, true], "213": [8095, 8112, false]}, "MarketSearch.__searchC": {"214": [21329, 21342, false], "215": [21537, 21547, false], "216": [22793, 22825, true], "217": [23099, 23122, false], "218": [23203, 23228, true], "219": [23232, 23272, false], "220": [23324, 23349, false], "221": [23353, 23393, false], "222": [23703, 23743, false], "223": [23851, 23876, false], "224": [24517, 24541, true], "225": [24856, 24890, false], "226": [25209, 25228, false], "227": [25264, 25290, false], "228": [25516, 25530, false], "229": [25566, 25591, false], "230": [25810, 25832, false], "231": [25939, 25965, false]}, "MarketSearch.__search": {"232": [10449, 10481, true], "233": [10705, 10749, false], "234": [10848, 10903, false], "235": [10976, 11075, false], "236": [11145, 11166, false], "237": [11190, 11217, false], "238": [11241, 11279, false], "239": [12076, 12086, false], "240": [12182, 12203, false], "241": [12207, 12237, false]}, "MarketSearch.__searchCFollowPath": {"242": [15975, 15992, true], "243": [16050, 16091, true], "244": [16259, 16274, false], "245": [17492, 17504, false], "246": [19903, 19920, false]}, "MarketSearch.__fromToListEx": {"247": [4335, 4346, false], "248": [4462, 4480, false], "249": [4583, 4610, true], "250": [4634, 4675, false], "251": [4696, 4765, false], "252": [4832, 4852, false], "253": [4964, 5001, false]}}, "24": {}, "29": {}, "25": {}, "3": {}, "9": {}, "23": {"RepositoryContract.checkContractsOrOperators": {"254": [3475, 3503, true], "255": [3523, 3551, true]}, "RepositoryContract.checkOperators": {"256": [3139, 3167, true]}}, "5": {}, "11": {"Market.__order": {"257": [1591, 1598, true], "258": [1810, 1838, false], "259": [1916, 1939, false], "260": [2388, 2419, false], "261": [3005, 3017, true]}}, "10": {}, "14": {"MarketPathReader._listPathFrom": {"262": [1174, 1212, false], "263": [1379, 1394, true], "264": [1534, 1746, false], "265": [1788, 1807, false], "266": [1940, 1949, true]}, "MarketPathReader._listPath": {"267": [2467, 2486, true], "268": [2662, 2700, false], "269": [2867, 2882, true], "270": [2928, 2956, false], "271": [3078, 3290, false], "272": [3332, 3351, false], "273": [3484, 3493, true]}}, "18": {}, "19": {}, "31": {}, "12": {}, "32": {"Ownable.transferOwnership": {"274": [2404, 2426, true]}}, "33": {}, "4": {}, "39": {}}}, "dependencies": ["Array", "BytesAndKeccakLib", "BytesLib", "OpenZeppelin/openzeppelin-contracts@4.3.2/Context", "Delivery", "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165", "IRepositoryContract", "Market", "MarketLib", "MarketPathReader", "MarketPathStorage", "MarketSearchLib", "MarketStorage", "ModeStop", "Order", "Ownable", "Repository", "RepositoryContract", "StringLib", "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings", "UIntConverter"], "offset": [221, 26837], "type": "contract", "abi": [{"inputs": [{"internalType": "contract Repository", "name": "rep_", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"stateMutability": "nonpayable", "type": "fallback"}, {"inputs": [], "name": "STOP", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "STOPFOREVER", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "val_", "type": "uint256"}], "name": "UInt256ToUInt32", "outputs": [{"internalType": "uint32", "name": "", "type": "uint32"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "val_", "type": "uint256"}], "name": "UInt256ToUInt48", "outputs": [{"internalType": "uint48", "name": "", "type": "uint48"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "val_", "type": "uint256"}], "name": "UInt256ToUInt64", "outputs": [{"internalType": "uint64", "name": "", "type": "uint64"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "uint32", "name": "val_", "type": "uint32"}], "name": "UInt32ToUInt256", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "uint48", "name": "val_", "type": "uint48"}], "name": "UInt48ToUInt256", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "uint64", "name": "val_", "type": "uint64"}], "name": "UInt64ToUInt256", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_from", "type": "bytes32"}, {"internalType": "bytes32", "name": "fromto_", "type": "bytes32"}], "name": "_existPath", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "from_", "type": "bytes32"}], "name": "_listPathFrom", "outputs": [{"internalType": "bytes32[][]", "name": "out_", "type": "bytes32[][]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "checkOperators", "outputs": [], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "from_", "type": "bytes32"}, {"internalType": "bytes32", "name": "to_", "type": "bytes32"}, {"internalType": "uint256[]", "name": "args_", "type": "uint256[]"}], "name": "d_search", "outputs": [{"components": [{"internalType": "uint256", "name": "orderid", "type": "uint256"}, {"internalType": "bytes32", "name": "addr", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "quote", "type": "uint256"}, {"internalType": "uint256[]", "name": "delivery", "type": "uint256[]"}], "internalType": "struct Solution[]", "name": "out_", "type": "tuple[]"}, {"internalType": "uint256", "name": "qty_", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "fromcurrency_", "type": "bytes32"}, {"internalType": "bytes32", "name": "tocurrency_", "type": "bytes32"}, {"internalType": "uint256[]", "name": "args_", "type": "uint256[]"}], "name": "d_searchC", "outputs": [{"components": [{"internalType": "uint256", "name": "qty", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "quote", "type": "tuple"}, {"components": [{"internalType": "bytes32[]", "name": "path", "type": "bytes32[]"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "quote", "type": "tuple"}, {"internalType": "uint256", "name": "start", "type": "uint256"}, {"internalType": "uint256", "name": "count", "type": "uint256"}, {"internalType": "uint256[]", "name": "offset", "type": "uint256[]"}], "internalType": "struct SolutionSetDesc[]", "name": "descs", "type": "tuple[]"}, {"components": [{"internalType": "uint256", "name": "orderid", "type": "uint256"}, {"internalType": "bytes32", "name": "addr", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "quote", "type": "uint256"}, {"internalType": "uint256[]", "name": "delivery", "type": "uint256[]"}], "internalType": "struct Solution[]", "name": "solutions", "type": "tuple[]"}], "internalType": "struct SolutionSet", "name": "out_", "type": "tuple"}, {"components": [{"internalType": "bytes32", "name": "currency", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}], "internalType": "struct Remainer[]", "name": "remainerout_", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "id", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "order_", "type": "uint256"}], "name": "order", "outputs": [{"components": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "bytes32", "name": "from", "type": "bytes32"}, {"internalType": "bytes32", "name": "to", "type": "bytes32"}, {"internalType": "uint256", "name": "orderid", "type": "uint256"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "qtydone", "type": "uint256"}, {"internalType": "uint256", "name": "originalqty", "type": "uint256"}, {"internalType": "uint256", "name": "quote", "type": "uint256"}, {"internalType": "uint256", "name": "originalquote", "type": "uint256"}, {"internalType": "uint256", "name": "originalbasedquote", "type": "uint256"}, {"internalType": "uint256", "name": "expire", "type": "uint256"}, {"internalType": "enum Order.State", "name": "state", "type": "uint8"}, {"internalType": "uint8", "name": "options", "type": "uint8"}], "internalType": "struct Order.InfoPublic", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "rep", "outputs": [{"internalType": "contract Repository", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "from_", "type": "bytes32"}, {"internalType": "bytes32", "name": "to_", "type": "bytes32"}, {"components": [{"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "bool", "name": "qtyismin", "type": "bool"}, {"internalType": "bool", "name": "qtyismax", "type": "bool"}, {"internalType": "uint256", "name": "maxtotal", "type": "uint256"}, {"internalType": "uint256", "name": "maxquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxavgquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxcount", "type": "uint256"}], "internalType": "struct MarketSearch.SearchPublicArgs", "name": "args_", "type": "tuple"}, {"internalType": "uint256[]", "name": "delivery_", "type": "uint256[]"}], "name": "search", "outputs": [{"components": [{"internalType": "uint256", "name": "orderid", "type": "uint256"}, {"internalType": "bytes32", "name": "addr", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "quote", "type": "uint256"}, {"internalType": "uint256[]", "name": "delivery", "type": "uint256[]"}], "internalType": "struct Solution[]", "name": "", "type": "tuple[]"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "fromcurrency_", "type": "bytes32"}, {"internalType": "bytes32", "name": "tocurrency_", "type": "bytes32"}, {"components": [{"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "bool", "name": "qtyismin", "type": "bool"}, {"internalType": "bool", "name": "qtyismax", "type": "bool"}, {"internalType": "uint256", "name": "maxtotal", "type": "uint256"}, {"internalType": "uint256", "name": "maxquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxavgquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxcount", "type": "uint256"}], "internalType": "struct MarketSearch.SearchPublicArgs", "name": "args_", "type": "tuple"}, {"internalType": "uint256[]", "name": "delivery_", "type": "uint256[]"}], "name": "searchC", "outputs": [{"components": [{"internalType": "uint256", "name": "qty", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "quote", "type": "tuple"}, {"components": [{"internalType": "bytes32[]", "name": "path", "type": "bytes32[]"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "quote", "type": "tuple"}, {"internalType": "uint256", "name": "start", "type": "uint256"}, {"internalType": "uint256", "name": "count", "type": "uint256"}, {"internalType": "uint256[]", "name": "offset", "type": "uint256[]"}], "internalType": "struct SolutionSetDesc[]", "name": "descs", "type": "tuple[]"}, {"components": [{"internalType": "uint256", "name": "orderid", "type": "uint256"}, {"internalType": "bytes32", "name": "addr", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "quote", "type": "uint256"}, {"internalType": "uint256[]", "name": "delivery", "type": "uint256[]"}], "internalType": "struct Solution[]", "name": "solutions", "type": "tuple[]"}], "internalType": "struct SolutionSet", "name": "", "type": "tuple"}, {"components": [{"internalType": "bytes32", "name": "currency", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}], "internalType": "struct Remainer[]", "name": "", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from_", "type": "address"}, {"internalType": "uint256", "name": "fromid_", "type": "uint256"}, {"internalType": "address", "name": "to_", "type": "address"}, {"internalType": "uint256", "name": "toid_", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "bool", "name": "qtyismin", "type": "bool"}, {"internalType": "bool", "name": "qtyismax", "type": "bool"}, {"internalType": "uint256", "name": "maxtotal", "type": "uint256"}, {"internalType": "uint256", "name": "maxquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxavgquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxcount", "type": "uint256"}], "internalType": "struct MarketSearch.SearchPublicArgs", "name": "args_", "type": "tuple"}, {"internalType": "uint256[]", "name": "delivery_", "type": "uint256[]"}], "name": "searchCEx", "outputs": [{"components": [{"internalType": "uint256", "name": "qty", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "quote", "type": "tuple"}, {"components": [{"internalType": "bytes32[]", "name": "path", "type": "bytes32[]"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "quote", "type": "tuple"}, {"internalType": "uint256", "name": "start", "type": "uint256"}, {"internalType": "uint256", "name": "count", "type": "uint256"}, {"internalType": "uint256[]", "name": "offset", "type": "uint256[]"}], "internalType": "struct SolutionSetDesc[]", "name": "descs", "type": "tuple[]"}, {"components": [{"internalType": "uint256", "name": "orderid", "type": "uint256"}, {"internalType": "bytes32", "name": "addr", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "quote", "type": "uint256"}, {"internalType": "uint256[]", "name": "delivery", "type": "uint256[]"}], "internalType": "struct Solution[]", "name": "solutions", "type": "tuple[]"}], "internalType": "struct SolutionSet", "name": "", "type": "tuple"}, {"components": [{"internalType": "bytes32", "name": "currency", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}], "internalType": "struct Remainer[]", "name": "", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from_", "type": "address"}, {"internalType": "uint256", "name": "fromid_", "type": "uint256"}, {"internalType": "address", "name": "to_", "type": "address"}, {"internalType": "uint256", "name": "toid_", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "bool", "name": "qtyismin", "type": "bool"}, {"internalType": "bool", "name": "qtyismax", "type": "bool"}, {"internalType": "uint256", "name": "maxtotal", "type": "uint256"}, {"internalType": "uint256", "name": "maxquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxavgquote", "type": "uint256"}, {"internalType": "uint256", "name": "maxcount", "type": "uint256"}], "internalType": "struct MarketSearch.SearchPublicArgs", "name": "args_", "type": "tuple"}, {"internalType": "uint256[]", "name": "delivery_", "type": "uint256[]"}], "name": "searchEx", "outputs": [{"components": [{"internalType": "uint256", "name": "orderid", "type": "uint256"}, {"internalType": "bytes32", "name": "addr", "type": "bytes32"}, {"internalType": "uint256", "name": "qty", "type": "uint256"}, {"internalType": "uint256", "name": "granularity", "type": "uint256"}, {"internalType": "uint256", "name": "quote", "type": "uint256"}, {"internalType": "uint256[]", "name": "delivery", "type": "uint256[]"}], "internalType": "struct Solution[]", "name": "", "type": "tuple[]"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "quotemin", "type": "uint256"}, {"internalType": "uint256", "name": "quoteavg", "type": "uint256"}, {"internalType": "uint256", "name": "quotemax", "type": "uint256"}], "internalType": "struct Quote", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "setSTOP", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "setSTOPFOREVER", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "interfaceId", "type": "bytes4"}], "name": "supportsInterface", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unsetSTOP", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "ast": {"absolutePath": "contracts/Market/Reader/Search.sol", "exportedSymbols": {"AggregatorV3Interface": [18151], "Array": [11708], "BANK": [16], "Bank": [2211], "Bankeable": [20043], "BytesAndKeccakLib": [21238], "BytesLib": [19948], "Certifiers": [20398], "Context": [18202], "ContractCertified": [20450], "ContractCertifier": [20835], "ContractForbidder": [18543], "ContractForbidderCertifier": [18617], "Currencer": [19411], "DELIVERY": [2394], "Delivery": [2445], "FuncState": [9124], "IBankeable": [13238], "ICertifiers": [21692], "IContractCertified": [21717], "IContractCertifier": [21708], "IContractWithId": [21679], "IERC165": [10108], "IERC20": [10096], "IPackedToken": [20097], "IPolymorph": [13200], "IRepositoryContract": [9139], "ITokenCertified": [20136], "ITokenCertifier": [20120], "ITokenEquivalent": [20189], "ITokenEquivalentCertifier": [20173], "ITokenWithId": [20195], "ITradeable": [13223], "KeccakInverter": [18900], "MARKET": [2459], "MARKETSEARCH": [4282], "Market": [2761], "MarketLib": [16360], "MarketPathReader": [16686], "MarketPathStorage": [16409], "MarketPathWriter": [17079], "MarketSearch": [6563], "MarketSearchLib": [18105], "MarketStorage": [17113], "ModeStop": [11770], "ModeTest": [11723], "Order": [14051], "Ownable": [13897], "QUOTATOR": [6647], "Quotator": [8574], "Quote": [14060], "QuoteInfo": [18180], "QuoteRef": [18165], "QuoteSource": [18160], "Remainer": [14065], "Repository": [10018], "RepositoryContract": [9412], "SContractWithId": [21676], "SPackedTokenAsset": [20055], "STokenEquivalent": [20149], "Solution": [14079], "SolutionSet": [14109], "SolutionSetDesc": [14095], "StringLib": [12624], "StringModifier": [12664], "Strings": [19615], "Token": [13036], "Tokens": [21668], "Tradeable": [20005], "UIntConverter": [13155]}, "id": 6564, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 4275, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "85:23:16"}, {"absolutePath": "contracts/Market/Market.sol", "file": "../Market.sol", "id": 4276, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 6564, "sourceUnit": 2762, "src": "110:23:16", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/Market/Reader/SearchLib.sol", "file": "./SearchLib.sol", "id": 4277, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 6564, "sourceUnit": 18106, "src": "134:25:16", "symbolAliases": [], "unitAlias": ""}, {"constant": true, "id": 4282, "mutability": "constant", "name": "MARKETSEARCH", "nameLocation": "178:12:16", "nodeType": "VariableDeclaration", "scope": 6564, "src": "161:57:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4278, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "161:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"arguments": [{"hexValue": "4d61726b6574536561726368", "id": 4280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "203:14:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_dcf6913c74762e0b3c7f94f504bb2be7445bbd8d11abee9960f04ebf85e7a7b2", "typeString": "literal_string \"MarketSearch\""}, "value": "MarketSearch"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_dcf6913c74762e0b3c7f94f504bb2be7445bbd8d11abee9960f04ebf85e7a7b2", "typeString": "literal_string \"MarketSearch\""}], "id": 4279, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "193:9:16", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 4281, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "193:25:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 4283, "name": "Market", "nodeType": "IdentifierPath", "referencedDeclaration": 2761, "src": "246:6:16"}, "id": 4284, "nodeType": "InheritanceSpecifier", "src": "246:6:16"}, {"baseName": {"id": 4285, "name": "MarketPathReader", "nodeType": "IdentifierPath", "referencedDeclaration": 16686, "src": "254:16:16"}, "id": 4286, "nodeType": "InheritanceSpecifier", "src": "254:16:16"}], "canonicalName": "MarketSearch", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 6563, "linearizedBaseContracts": [6563, 16686, 2761, 17113, 16409, 13155, 9412, 13897, 18202, 11770, 9139, 10108], "name": "MarketSearch", "nameLocation": "230:12:16", "nodeType": "ContractDefinition", "nodes": [{"id": 4290, "libraryName": {"id": 4287, "name": "Array", "nodeType": "IdentifierPath", "referencedDeclaration": 11708, "src": "283:5:16"}, "nodeType": "UsingForDirective", "src": "277:26:16", "typeName": {"baseType": {"id": 4288, "name": "address", "nodeType": "ElementaryTypeName", "src": "293:7:16", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4289, "nodeType": "ArrayTypeName", "src": "293:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, {"id": 4294, "libraryName": {"id": 4291, "name": "Array", "nodeType": "IdentifierPath", "referencedDeclaration": 11708, "src": "314:5:16"}, "nodeType": "UsingForDirective", "src": "308:25:16", "typeName": {"baseType": {"id": 4292, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "324:6:16", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 4293, "nodeType": "ArrayTypeName", "src": "324:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr", "typeString": "uint64[]"}}}, {"id": 4298, "libraryName": {"id": 4295, "name": "Array", "nodeType": "IdentifierPath", "referencedDeclaration": 11708, "src": "344:5:16"}, "nodeType": "UsingForDirective", "src": "338:26:16", "typeName": {"baseType": {"id": 4296, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "354:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4297, "nodeType": "ArrayTypeName", "src": "354:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, {"id": 4302, "libraryName": {"id": 4299, "name": "Array", "nodeType": "IdentifierPath", "referencedDeclaration": 11708, "src": "375:5:16"}, "nodeType": "UsingForDirective", "src": "369:26:16", "typeName": {"baseType": {"id": 4300, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "385:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 4301, "nodeType": "ArrayTypeName", "src": "385:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}}, {"id": 4306, "libraryName": {"id": 4303, "name": "MarketLib", "nodeType": "IdentifierPath", "referencedDeclaration": 16360, "src": "406:9:16"}, "nodeType": "UsingForDirective", "src": "400:30:16", "typeName": {"baseType": {"id": 4304, "name": "address", "nodeType": "ElementaryTypeName", "src": "420:7:16", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4305, "nodeType": "ArrayTypeName", "src": "420:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, {"id": 4310, "libraryName": {"id": 4307, "name": "MarketLib", "nodeType": "IdentifierPath", "referencedDeclaration": 16360, "src": "441:9:16"}, "nodeType": "UsingForDirective", "src": "435:36:16", "typeName": {"id": 4309, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4308, "name": "SolutionSetDesc", "nodeType": "IdentifierPath", "referencedDeclaration": 14095, "src": "455:15:16"}, "referencedDeclaration": 14095, "src": "455:15:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_storage_ptr", "typeString": "struct SolutionSetDesc"}}}, {"id": 4314, "libraryName": {"id": 4311, "name": "MarketLib", "nodeType": "IdentifierPath", "referencedDeclaration": 16360, "src": "482:9:16"}, "nodeType": "UsingForDirective", "src": "476:32:16", "typeName": {"id": 4313, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4312, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "496:11:16"}, "referencedDeclaration": 14109, "src": "496:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}}, {"id": 4319, "libraryName": {"id": 4315, "name": "MarketLib", "nodeType": "IdentifierPath", "referencedDeclaration": 16360, "src": "519:9:16"}, "nodeType": "UsingForDirective", "src": "513:31:16", "typeName": {"baseType": {"id": 4317, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4316, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "533:8:16"}, "referencedDeclaration": 14065, "src": "533:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 4318, "nodeType": "ArrayTypeName", "src": "533:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}}, {"id": 4324, "libraryName": {"id": 4320, "name": "MarketLib", "nodeType": "IdentifierPath", "referencedDeclaration": 16360, "src": "555:9:16"}, "nodeType": "UsingForDirective", "src": "549:31:16", "typeName": {"baseType": {"id": 4322, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4321, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "569:8:16"}, "referencedDeclaration": 14079, "src": "569:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4323, "nodeType": "ArrayTypeName", "src": "569:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}}, {"baseFunctions": [2487], "body": {"id": 4333, "nodeType": "Block", "src": "656:22:16", "statements": [{"expression": {"id": 4331, "name": "MARKETSEARCH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4282, "src": "664:12:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 4330, "id": 4332, "nodeType": "Return", "src": "657:19:16"}]}, "functionSelector": "af640d0f", "id": 4334, "implemented": true, "kind": "function", "modifiers": [], "name": "id", "nameLocation": "595:2:16", "nodeType": "FunctionDefinition", "overrides": {"id": 4327, "nodeType": "OverrideSpecifier", "overrides": [{"id": 4326, "name": "Market", "nodeType": "IdentifierPath", "referencedDeclaration": 2761, "src": "630:6:16"}], "src": "620:17:16"}, "parameters": {"id": 4325, "nodeType": "ParameterList", "parameters": [], "src": "597:2:16"}, "returnParameters": {"id": 4330, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4329, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4334, "src": "647:7:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4328, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "647:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "646:9:16"}, "scope": 6563, "src": "586:92:16", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 4343, "nodeType": "Block", "src": "726:2:16", "statements": []}, "id": 4344, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 4340, "name": "rep_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4337, "src": "720:4:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}], "id": 4341, "kind": "baseConstructorSpecifier", "modifierName": {"id": 4339, "name": "Market", "nodeType": "IdentifierPath", "referencedDeclaration": 2761, "src": "713:6:16"}, "nodeType": "ModifierInvocation", "src": "713:12:16"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 4338, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4337, "mutability": "mutable", "name": "rep_", "nameLocation": "707:4:16", "nodeType": "VariableDeclaration", "scope": 4344, "src": "696:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}, "typeName": {"id": 4336, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4335, "name": "Repository", "nodeType": "IdentifierPath", "referencedDeclaration": 10018, "src": "696:10:16"}, "referencedDeclaration": 10018, "src": "696:10:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "visibility": "internal"}], "src": "695:17:16"}, "returnParameters": {"id": 4342, "nodeType": "ParameterList", "parameters": [], "src": "726:0:16"}, "scope": 6563, "src": "684:44:16", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"constant": true, "id": 4347, "mutability": "constant", "name": "MAXRECURSECALL", "nameLocation": "751:14:16", "nodeType": "VariableDeclaration", "scope": 6563, "src": "734:36:16", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4345, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "734:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "3230", "id": 4346, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "768:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_20_by_1", "typeString": "int_const 20"}, "value": "20"}, "visibility": "internal"}, {"canonicalName": "MarketSearch.SearchArgTarget", "id": 4363, "members": [{"constant": false, "id": 4349, "mutability": "mutable", "name": "currency", "nameLocation": "818:8:16", "nodeType": "VariableDeclaration", "scope": 4363, "src": "810:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4348, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "810:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4351, "mutability": "mutable", "name": "mingranularity", "nameLocation": "844:14:16", "nodeType": "VariableDeclaration", "scope": 4363, "src": "836:22:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4350, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "836:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4353, "mutability": "mutable", "name": "qty", "nameLocation": "876:3:16", "nodeType": "VariableDeclaration", "scope": 4363, "src": "868:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4352, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "868:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4355, "mutability": "mutable", "name": "qtyismin", "nameLocation": "894:8:16", "nodeType": "VariableDeclaration", "scope": 4363, "src": "889:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4354, "name": "bool", "nodeType": "ElementaryTypeName", "src": "889:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 4357, "mutability": "mutable", "name": "qtyismax", "nameLocation": "917:8:16", "nodeType": "VariableDeclaration", "scope": 4363, "src": "912:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4356, "name": "bool", "nodeType": "ElementaryTypeName", "src": "912:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 4359, "mutability": "mutable", "name": "maxcount", "nameLocation": "943:8:16", "nodeType": "VariableDeclaration", "scope": 4363, "src": "935:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4358, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "935:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4362, "mutability": "mutable", "name": "delivery", "nameLocation": "971:8:16", "nodeType": "VariableDeclaration", "scope": 4363, "src": "961:18:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4360, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "961:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4361, "nodeType": "ArrayTypeName", "src": "961:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "name": "SearchArgTarget", "nameLocation": "784:15:16", "nodeType": "StructDefinition", "scope": 6563, "src": "777:209:16", "visibility": "public"}, {"canonicalName": "MarketSearch.SearchArg", "id": 4374, "members": [{"constant": false, "id": 4365, "mutability": "mutable", "name": "maxquote", "nameLocation": "1026:8:16", "nodeType": "VariableDeclaration", "scope": 4374, "src": "1018:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4364, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1018:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4367, "mutability": "mutable", "name": "maxavgquote", "nameLocation": "1052:11:16", "nodeType": "VariableDeclaration", "scope": 4374, "src": "1044:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4366, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1044:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4369, "mutability": "mutable", "name": "maxtotal", "nameLocation": "1081:8:16", "nodeType": "VariableDeclaration", "scope": 4374, "src": "1073:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4368, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1073:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4373, "mutability": "mutable", "name": "used", "nameLocation": "1110:4:16", "nodeType": "VariableDeclaration", "scope": 4374, "src": "1099:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 4371, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4370, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "1099:8:16"}, "referencedDeclaration": 14079, "src": "1099:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4372, "nodeType": "ArrayTypeName", "src": "1099:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}], "name": "SearchArg", "nameLocation": "998:9:16", "nodeType": "StructDefinition", "scope": 6563, "src": "991:130:16", "visibility": "public"}, {"canonicalName": "MarketSearch.SearchPublicArgs", "id": 4391, "members": [{"constant": false, "id": 4376, "mutability": "mutable", "name": "granularity", "nameLocation": "1168:11:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1160:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4375, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1160:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4378, "mutability": "mutable", "name": "qty", "nameLocation": "1197:3:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1189:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4377, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1189:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4380, "mutability": "mutable", "name": "qtyismin", "nameLocation": "1215:8:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1210:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4379, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1210:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 4382, "mutability": "mutable", "name": "qtyismax", "nameLocation": "1238:8:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1233:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4381, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1233:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 4384, "mutability": "mutable", "name": "maxtotal", "nameLocation": "1264:8:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1256:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4383, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1256:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4386, "mutability": "mutable", "name": "maxquote", "nameLocation": "1290:8:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1282:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4385, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1282:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4388, "mutability": "mutable", "name": "maxavgquote", "nameLocation": "1316:11:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1308:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4387, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1308:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4390, "mutability": "mutable", "name": "maxcount", "nameLocation": "1345:8:16", "nodeType": "VariableDeclaration", "scope": 4391, "src": "1337:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4389, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1337:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "SearchPublicArgs", "nameLocation": "1133:16:16", "nodeType": "StructDefinition", "scope": 6563, "src": "1126:234:16", "visibility": "public"}, {"body": {"id": 4579, "nodeType": "Block", "src": "4120:1302:16", "statements": [{"assignments": [4410], "declarations": [{"constant": false, "id": 4410, "mutability": "mutable", "name": "startcount", "nameLocation": "4138:10:16", "nodeType": "VariableDeclaration", "scope": 4579, "src": "4130:18:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4409, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4130:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4412, "initialValue": {"hexValue": "30", "id": 4411, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4151:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4130:22:16"}, {"assignments": [4414], "declarations": [{"constant": false, "id": 4414, "mutability": "mutable", "name": "outcount", "nameLocation": "4170:8:16", "nodeType": "VariableDeclaration", "scope": 4579, "src": "4162:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4413, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4162:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4416, "initialValue": {"hexValue": "30", "id": 4415, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4181:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4162:20:16"}, {"assignments": [4421], "declarations": [{"constant": false, "id": 4421, "mutability": "mutable", "name": "orderids", "nameLocation": "4210:8:16", "nodeType": "VariableDeclaration", "scope": 4579, "src": "4192:26:16", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4419, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4192:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4420, "nodeType": "ArrayTypeName", "src": "4192:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 4429, "initialValue": {"baseExpression": {"id": 4422, "name": "_fromtoorders", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17097, "src": "4221:13:16", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(bytes32 => uint256[] storage ref)"}}, "id": 4428, "indexExpression": {"arguments": [{"id": 4425, "name": "from_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4393, "src": "4272:5:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 4426, "name": "to_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4395, "src": "4279:3:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4423, "name": "BytesAndKeccakLib", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21238, "src": "4235:17:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BytesAndKeccakLib_$21238_$", "typeString": "type(library BytesAndKeccakLib)"}}, "id": 4424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "pureBytes32Bytes32", "nodeType": "MemberAccess", "referencedDeclaration": 20932, "src": "4235:36:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$", "typeString": "function (bytes32,bytes32) pure returns (bytes32)"}}, "id": 4427, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4235:48:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4221:63:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "4192:92:16"}, {"assignments": [4431], "declarations": [{"constant": false, "id": 4431, "mutability": "mutable", "name": "len", "nameLocation": "4300:3:16", "nodeType": "VariableDeclaration", "scope": 4579, "src": "4295:8:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4430, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4295:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4434, "initialValue": {"expression": {"id": 4432, "name": "orderids", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4421, "src": "4306:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[] storage pointer"}}, "id": 4433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4306:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4295:26:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4437, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4435, "name": "count_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4402, "src": "4335:6:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 4436, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4345:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4335:11:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4442, "nodeType": "IfStatement", "src": "4331:29:16", "trueBody": {"expression": {"id": 4440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4438, "name": "count_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4402, "src": "4348:6:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4439, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4431, "src": "4357:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4348:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4441, "nodeType": "ExpressionStatement", "src": "4348:12:16"}}, {"expression": {"id": 4450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4443, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4407, "src": "4370:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4448, "name": "count_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4402, "src": "4392:6:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4447, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4377:14:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Solution memory[] memory)"}, "typeName": {"baseType": {"id": 4445, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4444, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "4381:8:16"}, "referencedDeclaration": 14079, "src": "4381:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4446, "nodeType": "ArrayTypeName", "src": "4381:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}}, "id": 4449, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4377:22:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "src": "4370:29:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4451, "nodeType": "ExpressionStatement", "src": "4370:29:16"}, {"body": {"id": 4576, "nodeType": "Block", "src": "4444:908:16", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4462, "name": "outcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4414, "src": "4462:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 4463, "name": "count_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4402, "src": "4474:6:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4462:18:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4466, "nodeType": "IfStatement", "src": "4458:29:16", "trueBody": {"id": 4465, "nodeType": "Break", "src": "4482:5:16"}}, {"assignments": [4471], "declarations": [{"constant": false, "id": 4471, "mutability": "mutable", "name": "order", "nameLocation": "4520:5:16", "nodeType": "VariableDeclaration", "scope": 4576, "src": "4501:24:16", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info"}, "typeName": {"id": 4470, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4469, "name": "Order.Info", "nodeType": "IdentifierPath", "referencedDeclaration": 13945, "src": "4501:10:16"}, "referencedDeclaration": 13945, "src": "4501:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info"}}, "visibility": "internal"}], "id": 4477, "initialValue": {"baseExpression": {"id": 4472, "name": "_orders", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "4528:7:16", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Info_$13945_storage_$", "typeString": "mapping(uint256 => struct Order.Info storage ref)"}}, "id": 4476, "indexExpression": {"baseExpression": {"id": 4473, "name": "orderids", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4421, "src": "4536:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[] storage pointer"}}, "id": 4475, "indexExpression": {"id": 4474, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4453, "src": "4545:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4536:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4528:20:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Info_$13945_storage", "typeString": "struct Order.Info storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "4501:47:16"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 4503, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 4491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 4480, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4471, "src": "4599:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info storage pointer"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info storage pointer"}], "expression": {"id": 4478, "name": "Order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14051, "src": "4583:5:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Order_$14051_$", "typeString": "type(library Order)"}}, "id": 4479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isExpired", "nodeType": "MemberAccess", "referencedDeclaration": 13986, "src": "4583:15:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_Info_$13945_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct Order.Info memory) pure returns (uint256)"}}, "id": 4481, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4583:22:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 4482, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4609:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4583:27:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 4486, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4471, "src": "4650:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info storage pointer"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info storage pointer"}], "expression": {"id": 4484, "name": "Order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14051, "src": "4634:5:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Order_$14051_$", "typeString": "type(library Order)"}}, "id": 4485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isExpired", "nodeType": "MemberAccess", "referencedDeclaration": 13986, "src": "4634:15:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_Info_$13945_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct Order.Info memory) pure returns (uint256)"}}, "id": 4487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4634:22:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 4488, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4660:5:16", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 4489, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4660:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4634:41:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4583:92:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 4492, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4582:94:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"arguments": [{"id": 4500, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4471, "src": "4748:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info storage pointer"}}, {"id": 4501, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4398, "src": "4755:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Info_$13945_storage_ptr", "typeString": "struct Order.Info storage pointer"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "expression": {"arguments": [{"arguments": [{"id": 4496, "name": "DELIVERY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2394, "src": "4713:8:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4494, "name": "rep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9150, "src": "4705:3:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "id": 4495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get", "nodeType": "MemberAccess", "referencedDeclaration": 9929, "src": "4705:7:16", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 4497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4705:17:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4493, "name": "Delivery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2445, "src": "4696:8:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Delivery_$2445_$", "typeString": "type(contract Delivery)"}}, "id": 4498, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4696:27:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_Delivery_$2445", "typeString": "contract Delivery"}}, "id": 4499, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "orderDeliveryCompatible", "nodeType": "MemberAccess", "referencedDeclaration": 2430, "src": "4696:51:16", "typeDescriptions": {"typeIdentifier": "t_function_external_pure$_t_struct$_Info_$13945_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$", "typeString": "function (struct Order.Info memory,uint256[] memory) pure external returns (bool)"}}, "id": 4502, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4696:69:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4582:183:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4575, "nodeType": "IfStatement", "src": "4561:781:16", "trueBody": {"id": 4574, "nodeType": "Block", "src": "4780:562:16", "statements": [{"expression": {"id": 4505, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4798:12:16", "subExpression": {"id": 4504, "name": "startcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4410, "src": "4798:10:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4506, "nodeType": "ExpressionStatement", "src": "4798:12:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4507, "name": "startcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4410, "src": "4832:10:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 4508, "name": "start_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4400, "src": "4846:6:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4832:20:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4511, "nodeType": "IfStatement", "src": "4828:34:16", "trueBody": {"id": 4510, "nodeType": "Continue", "src": "4854:8:16"}}, {"assignments": [4516], "declarations": [{"constant": false, "id": 4516, "mutability": "mutable", "name": "_orderpub", "nameLocation": "4904:9:16", "nodeType": "VariableDeclaration", "scope": 4574, "src": "4880:33:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic"}, "typeName": {"id": 4515, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4514, "name": "Order.InfoPublic", "nodeType": "IdentifierPath", "referencedDeclaration": 13975, "src": "4880:16:16"}, "referencedDeclaration": 13975, "src": "4880:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_storage_ptr", "typeString": "struct Order.InfoPublic"}}, "visibility": "internal"}], "id": 4523, "initialValue": {"arguments": [{"baseExpression": {"id": 4518, "name": "orderids", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4421, "src": "4924:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[] storage pointer"}}, "id": 4520, "indexExpression": {"id": 4519, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4453, "src": "4933:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4924:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 4521, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4937:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 4517, "name": "__order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2746, "src": "4916:7:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bool_$returns$_t_struct$_InfoPublic_$13975_memory_ptr_$", "typeString": "function (uint256,bool) view returns (struct Order.InfoPublic memory)"}}, "id": 4522, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4916:26:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4880:62:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4524, "name": "_orderpub", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4516, "src": "4964:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "id": 4525, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 13955, "src": "4964:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 4526, "name": "_orderpub", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4516, "src": "4980:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "id": 4527, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "granularity", "nodeType": "MemberAccess", "referencedDeclaration": 13957, "src": "4980:21:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4964:37:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4530, "nodeType": "IfStatement", "src": "4960:51:16", "trueBody": {"id": 4529, "nodeType": "Continue", "src": "5003:8:16"}}, {"expression": {"id": 4537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4531, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4407, "src": "5029:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4533, "indexExpression": {"id": 4532, "name": "outcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4414, "src": "5034:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5029:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 4534, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "orderid", "nodeType": "MemberAccess", "referencedDeclaration": 14067, "src": "5029:22:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4535, "name": "_orderpub", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4516, "src": "5054:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "id": 4536, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "orderid", "nodeType": "MemberAccess", "referencedDeclaration": 13953, "src": "5054:17:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5029:42:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4538, "nodeType": "ExpressionStatement", "src": "5029:42:16"}, {"expression": {"id": 4545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4539, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4407, "src": "5089:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4541, "indexExpression": {"id": 4540, "name": "outcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4414, "src": "5094:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5089:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 4542, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "addr", "nodeType": "MemberAccess", "referencedDeclaration": 14069, "src": "5089:19:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4543, "name": "_orderpub", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4516, "src": "5111:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "id": 4544, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "to", "nodeType": "MemberAccess", "referencedDeclaration": 13951, "src": "5111:12:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5089:34:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 4546, "nodeType": "ExpressionStatement", "src": "5089:34:16"}, {"expression": {"id": 4553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4547, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4407, "src": "5141:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4549, "indexExpression": {"id": 4548, "name": "outcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4414, "src": "5146:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5141:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 4550, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "granularity", "nodeType": "MemberAccess", "referencedDeclaration": 14073, "src": "5141:26:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4551, "name": "_orderpub", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4516, "src": "5170:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "id": 4552, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "granularity", "nodeType": "MemberAccess", "referencedDeclaration": 13957, "src": "5170:21:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5141:50:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4554, "nodeType": "ExpressionStatement", "src": "5141:50:16"}, {"expression": {"id": 4561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4555, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4407, "src": "5209:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4557, "indexExpression": {"id": 4556, "name": "outcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4414, "src": "5214:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5209:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 4558, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14071, "src": "5209:18:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4559, "name": "_orderpub", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4516, "src": "5230:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "id": 4560, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 13955, "src": "5230:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5209:34:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4562, "nodeType": "ExpressionStatement", "src": "5209:34:16"}, {"expression": {"id": 4569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4563, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4407, "src": "5261:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4565, "indexExpression": {"id": 4564, "name": "outcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4414, "src": "5266:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5261:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 4566, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14075, "src": "5261:20:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4567, "name": "_orderpub", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4516, "src": "5284:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_InfoPublic_$13975_memory_ptr", "typeString": "struct Order.InfoPublic memory"}}, "id": 4568, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 13963, "src": "5284:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5261:38:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4570, "nodeType": "ExpressionStatement", "src": "5261:38:16"}, {"expression": {"id": 4572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5317:10:16", "subExpression": {"id": 4571, "name": "outcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4414, "src": "5317:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4573, "nodeType": "ExpressionStatement", "src": "5317:10:16"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4458, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4456, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4453, "src": "4430:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 4457, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4431, "src": "4434:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4430:7:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4577, "initializationExpression": {"assignments": [4453], "declarations": [{"constant": false, "id": 4453, "mutability": "mutable", "name": "i", "nameLocation": "4423:1:16", "nodeType": "VariableDeclaration", "scope": 4577, "src": "4415:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4415:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4455, "initialValue": {"hexValue": "30", "id": 4454, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4427:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4415:13:16"}, "loopExpression": {"expression": {"id": 4460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4439:3:16", "subExpression": {"id": 4459, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4453, "src": "4439:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4461, "nodeType": "ExpressionStatement", "src": "4439:3:16"}, "nodeType": "ForStatement", "src": "4410:942:16"}, {"AST": {"nodeType": "YulBlock", "src": "5370:46:16", "statements": [{"expression": {"arguments": [{"name": "out_", "nodeType": "YulIdentifier", "src": "5391:4:16"}, {"name": "outcount", "nodeType": "YulIdentifier", "src": "5397:8:16"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "5384:6:16"}, "nodeType": "YulFunctionCall", "src": "5384:22:16"}, "nodeType": "YulExpressionStatement", "src": "5384:22:16"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 4407, "isOffset": false, "isSlot": false, "src": "5391:4:16", "valueSize": 1}, {"declaration": 4414, "isOffset": false, "isSlot": false, "src": "5397:8:16", "valueSize": 1}], "id": 4578, "nodeType": "InlineAssembly", "src": "5361:55:16"}]}, "id": 4580, "implemented": true, "kind": "function", "modifiers": [], "name": "__fromToListEx", "nameLocation": "3925:14:16", "nodeType": "FunctionDefinition", "parameters": {"id": 4403, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4393, "mutability": "mutable", "name": "from_", "nameLocation": "3957:5:16", "nodeType": "VariableDeclaration", "scope": 4580, "src": "3949:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4392, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3949:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4395, "mutability": "mutable", "name": "to_", "nameLocation": "3980:3:16", "nodeType": "VariableDeclaration", "scope": 4580, "src": "3972:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4394, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3972:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4398, "mutability": "mutable", "name": "delivery_", "nameLocation": "4010:9:16", "nodeType": "VariableDeclaration", "scope": 4580, "src": "3993:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4396, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3993:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4397, "nodeType": "ArrayTypeName", "src": "3993:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 4400, "mutability": "mutable", "name": "start_", "nameLocation": "4037:6:16", "nodeType": "VariableDeclaration", "scope": 4580, "src": "4029:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4399, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4029:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4402, "mutability": "mutable", "name": "count_", "nameLocation": "4061:6:16", "nodeType": "VariableDeclaration", "scope": 4580, "src": "4053:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4401, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4053:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3939:134:16"}, "returnParameters": {"id": 4408, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4407, "mutability": "mutable", "name": "out_", "nameLocation": "4114:4:16", "nodeType": "VariableDeclaration", "scope": 4580, "src": "4096:22:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 4405, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4404, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "4096:8:16"}, "referencedDeclaration": 14079, "src": "4096:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4406, "nodeType": "ArrayTypeName", "src": "4096:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}], "src": "4095:24:16"}, "scope": 6563, "src": "3916:1506:16", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 4703, "nodeType": "Block", "src": "5677:1041:16", "statements": [{"assignments": [4600], "declarations": [{"constant": false, "id": 4600, "mutability": "mutable", "name": "deliverycount", "nameLocation": "5953:13:16", "nodeType": "VariableDeclaration", "scope": 4703, "src": "5945:21:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4599, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5945:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4602, "initialValue": {"hexValue": "30", "id": 4601, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5969:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5945:25:16"}, {"assignments": [4604], "declarations": [{"constant": false, "id": 4604, "mutability": "mutable", "name": "len", "nameLocation": "5985:3:16", "nodeType": "VariableDeclaration", "scope": 4703, "src": "5980:8:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4603, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5980:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4609, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4605, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "5991:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5991:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "38", "id": 4607, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6004:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "5991:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5980:25:16"}, {"body": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4622, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 4616, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6076:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4620, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "38", "id": 4617, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6082:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 4618, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4600, "src": "6086:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6082:17:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6076:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 4621, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6104:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6076:29:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4624, "nodeType": "IfStatement", "src": "6072:40:16", "trueBody": {"id": 4623, "nodeType": "Break", "src": "6107:5:16"}}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4610, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4600, "src": "6022:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 4611, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4604, "src": "6038:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6022:19:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4625, "loopExpression": {"expression": {"id": 4614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6043:15:16", "subExpression": {"id": 4613, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4600, "src": "6043:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4615, "nodeType": "ExpressionStatement", "src": "6043:15:16"}, "nodeType": "ForStatement", "src": "6015:97:16"}, {"assignments": [4630], "declarations": [{"constant": false, "id": 4630, "mutability": "mutable", "name": "delivery", "nameLocation": "6140:8:16", "nodeType": "VariableDeclaration", "scope": 4703, "src": "6123:25:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4628, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6123:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4629, "nodeType": "ArrayTypeName", "src": "6123:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 4636, "initialValue": {"arguments": [{"id": 4634, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4600, "src": "6165:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4633, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "6151:13:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 4631, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6155:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4632, "nodeType": "ArrayTypeName", "src": "6155:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 4635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6151:28:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6123:56:16"}, {"body": {"expression": {"id": 4655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4647, "name": "delivery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4630, "src": "6245:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4649, "indexExpression": {"id": 4648, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4638, "src": "6254:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6245:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 4650, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6259:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4654, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4653, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4651, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4638, "src": "6265:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "38", "id": 4652, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6269:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "6265:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6259:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6245:26:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4656, "nodeType": "ExpressionStatement", "src": "6245:26:16"}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4641, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4638, "src": "6209:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 4642, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4600, "src": "6213:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6209:17:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4657, "initializationExpression": {"assignments": [4638], "declarations": [{"constant": false, "id": 4638, "mutability": "mutable", "name": "i", "nameLocation": "6202:1:16", "nodeType": "VariableDeclaration", "scope": 4657, "src": "6194:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4637, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6194:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4640, "initialValue": {"hexValue": "30", "id": 4639, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6206:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6194:13:16"}, "loopExpression": {"expression": {"id": 4645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6228:3:16", "subExpression": {"id": 4644, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4638, "src": "6228:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4646, "nodeType": "ExpressionStatement", "src": "6228:3:16"}, "nodeType": "ForStatement", "src": "6189:82:16"}, {"expression": {"arguments": [{"id": 4659, "name": "from_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4582, "src": "6327:5:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"id": 4661, "name": "to_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4584, "src": "6387:3:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 4662, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6412:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4664, "indexExpression": {"hexValue": "30", "id": 4663, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6418:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6412:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 4665, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6442:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4667, "indexExpression": {"hexValue": "31", "id": 4666, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6448:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6442:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4672, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 4668, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6472:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4670, "indexExpression": {"hexValue": "32", "id": 4669, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6478:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6472:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 4671, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6484:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6472:13:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 4673, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6507:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4675, "indexExpression": {"hexValue": "33", "id": 4674, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6513:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6507:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 4676, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6519:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6507:13:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"baseExpression": {"id": 4678, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6542:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4680, "indexExpression": {"hexValue": "37", "id": 4679, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6548:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_7_by_1", "typeString": "int_const 7"}, "value": "7"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6542:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4681, "name": "delivery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4630, "src": "6572:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 4660, "name": "SearchArgTarget", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4363, "src": "6350:15:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArgTarget_$4363_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArgTarget storage pointer)"}}, "id": 4682, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6350:248:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"arguments": [{"baseExpression": {"id": 4684, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6626:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4686, "indexExpression": {"hexValue": "35", "id": 4685, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6632:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6626:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 4687, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6636:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4689, "indexExpression": {"hexValue": "36", "id": 4688, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6642:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6636:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 4690, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4587, "src": "6646:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 4692, "indexExpression": {"hexValue": "34", "id": 4691, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6652:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4"}, "value": "4"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6646:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"hexValue": "30", "id": 4697, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6671:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4696, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "6656:14:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Solution memory[] memory)"}, "typeName": {"baseType": {"id": 4694, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4693, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "6660:8:16"}, "referencedDeclaration": 14079, "src": "6660:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4695, "nodeType": "ArrayTypeName", "src": "6660:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}}, "id": 4698, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6656:17:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "id": 4683, "name": "SearchArg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4374, "src": "6616:9:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArg_$4374_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArg storage pointer)"}}, "id": 4699, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6616:58:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"hexValue": "66616c7365", "id": 4700, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6692:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 4658, "name": "__search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "6301:8:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_bool_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (bytes32,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,bool) view returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 4701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6301:410:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "functionReturnParameters": 4598, "id": 4702, "nodeType": "Return", "src": "6282:429:16"}]}, "functionSelector": "bd0ade2b", "id": 4704, "implemented": true, "kind": "function", "modifiers": [], "name": "d_search", "nameLocation": "5437:8:16", "nodeType": "FunctionDefinition", "parameters": {"id": 4588, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4582, "mutability": "mutable", "name": "from_", "nameLocation": "5463:5:16", "nodeType": "VariableDeclaration", "scope": 4704, "src": "5455:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4581, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5455:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4584, "mutability": "mutable", "name": "to_", "nameLocation": "5486:3:16", "nodeType": "VariableDeclaration", "scope": 4704, "src": "5478:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4583, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5478:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4587, "mutability": "mutable", "name": "args_", "nameLocation": "5518:5:16", "nodeType": "VariableDeclaration", "scope": 4704, "src": "5499:24:16", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4585, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5499:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4586, "nodeType": "ArrayTypeName", "src": "5499:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "5445:84:16"}, "returnParameters": {"id": 4598, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4592, "mutability": "mutable", "name": "out_", "nameLocation": "5606:4:16", "nodeType": "VariableDeclaration", "scope": 4704, "src": "5588:22:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 4590, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4589, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "5588:8:16"}, "referencedDeclaration": 14079, "src": "5588:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4591, "nodeType": "ArrayTypeName", "src": "5588:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}, {"constant": false, "id": 4594, "mutability": "mutable", "name": "qty_", "nameLocation": "5632:4:16", "nodeType": "VariableDeclaration", "scope": 4704, "src": "5624:12:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4593, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5624:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4597, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4704, "src": "5650:12:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote"}, "typeName": {"id": 4596, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4595, "name": "Quote", "nodeType": "IdentifierPath", "referencedDeclaration": 14060, "src": "5650:5:16"}, "referencedDeclaration": 14060, "src": "5650:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_storage_ptr", "typeString": "struct Quote"}}, "visibility": "internal"}], "src": "5574:98:16"}, "scope": 6563, "src": "5428:1290:16", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 4745, "nodeType": "Block", "src": "7052:198:16", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 4733, "name": "from_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4706, "src": "7120:5:16", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4734, "name": "fromid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4708, "src": "7127:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4731, "name": "rep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9150, "src": "7105:3:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "id": 4732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "roCurrency", "nodeType": "MemberAccess", "referencedDeclaration": 18990, "src": "7105:14:16", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (address,uint256) view external returns (bytes32)"}}, "id": 4735, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7105:30:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"id": 4738, "name": "to_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4710, "src": "7168:3:16", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4739, "name": "toid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "7173:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4736, "name": "rep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9150, "src": "7153:3:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "id": 4737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "roCurrency", "nodeType": "MemberAccess", "referencedDeclaration": 18990, "src": "7153:14:16", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (address,uint256) view external returns (bytes32)"}}, "id": 4740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7153:26:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 4741, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4715, "src": "7197:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, {"id": 4742, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4718, "src": "7220:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 4730, "name": "search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4921, "src": "7081:6:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_struct$_SearchPublicArgs_$4391_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (bytes32,bytes32,struct MarketSearch.SearchPublicArgs memory,uint256[] memory) view returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 4743, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7081:162:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "functionReturnParameters": 4729, "id": 4744, "nodeType": "Return", "src": "7062:181:16"}]}, "functionSelector": "09252f02", "id": 4746, "implemented": true, "kind": "function", "modifiers": [], "name": "searchEx", "nameLocation": "6733:8:16", "nodeType": "FunctionDefinition", "parameters": {"id": 4719, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4706, "mutability": "mutable", "name": "from_", "nameLocation": "6759:5:16", "nodeType": "VariableDeclaration", "scope": 4746, "src": "6751:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4705, "name": "address", "nodeType": "ElementaryTypeName", "src": "6751:7:16", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4708, "mutability": "mutable", "name": "fromid_", "nameLocation": "6782:7:16", "nodeType": "VariableDeclaration", "scope": 4746, "src": "6774:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4707, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6774:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4710, "mutability": "mutable", "name": "to_", "nameLocation": "6807:3:16", "nodeType": "VariableDeclaration", "scope": 4746, "src": "6799:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4709, "name": "address", "nodeType": "ElementaryTypeName", "src": "6799:7:16", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4712, "mutability": "mutable", "name": "toid_", "nameLocation": "6828:5:16", "nodeType": "VariableDeclaration", "scope": 4746, "src": "6820:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4711, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6820:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4715, "mutability": "mutable", "name": "args_", "nameLocation": "6867:5:16", "nodeType": "VariableDeclaration", "scope": 4746, "src": "6843:29:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}, "typeName": {"id": 4714, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4713, "name": "SearchPublicArgs", "nodeType": "IdentifierPath", "referencedDeclaration": 4391, "src": "6843:16:16"}, "referencedDeclaration": 4391, "src": "6843:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_storage_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}}, "visibility": "internal"}, {"constant": false, "id": 4718, "mutability": "mutable", "name": "delivery_", "nameLocation": "6899:9:16", "nodeType": "VariableDeclaration", "scope": 4746, "src": "6882:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4716, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6882:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4717, "nodeType": "ArrayTypeName", "src": "6882:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "6741:173:16"}, "returnParameters": {"id": 4729, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4723, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4746, "src": "6973:17:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 4721, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4720, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "6973:8:16"}, "referencedDeclaration": 14079, "src": "6973:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4722, "nodeType": "ArrayTypeName", "src": "6973:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}, {"constant": false, "id": 4725, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4746, "src": "7004:7:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4724, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7004:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4728, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4746, "src": "7025:12:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote"}, "typeName": {"id": 4727, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4726, "name": "Quote", "nodeType": "IdentifierPath", "referencedDeclaration": 14060, "src": "7025:5:16"}, "referencedDeclaration": 14060, "src": "7025:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_storage_ptr", "typeString": "struct Quote"}}, "visibility": "internal"}], "src": "6959:88:16"}, "scope": 6563, "src": "6724:526:16", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 4920, "nodeType": "Block", "src": "7534:1009:16", "statements": [{"assignments": [4769], "declarations": [{"constant": false, "id": 4769, "mutability": "mutable", "name": "len", "nameLocation": "7549:3:16", "nodeType": "VariableDeclaration", "scope": 4920, "src": "7544:8:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4768, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7544:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4772, "initialValue": {"expression": {"id": 4770, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4756, "src": "7555:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7555:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7544:27:16"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4776, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4774, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4769, "src": "7589:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "3332", "id": 4775, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7596:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32"}, "value": "32"}, "src": "7589:9:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "64656c6976657279206172726179206d61782073697a65206973203332", "id": 4777, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7600:31:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2734617c40f1ab1381a217092e0a26e9ba13ce8049a6ff2db396a59147fe4543", "typeString": "literal_string \"delivery array max size is 32\""}, "value": "delivery array max size is 32"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2734617c40f1ab1381a217092e0a26e9ba13ce8049a6ff2db396a59147fe4543", "typeString": "literal_string \"delivery array max size is 32\""}], "id": 4773, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7581:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4778, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7581:51:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4779, "nodeType": "ExpressionStatement", "src": "7581:51:16"}, {"assignments": [4785], "declarations": [{"constant": false, "id": 4785, "mutability": "mutable", "name": "args", "nameLocation": "7692:4:16", "nodeType": "VariableDeclaration", "scope": 4920, "src": "7673:23:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40]"}, "typeName": {"baseType": {"id": 4783, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7673:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4784, "length": {"hexValue": "3430", "id": 4782, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7681:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_40_by_1", "typeString": "int_const 40"}, "value": "40"}, "nodeType": "ArrayTypeName", "src": "7673:11:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_storage_ptr", "typeString": "uint256[40]"}}, "visibility": "internal"}], "id": 4786, "nodeType": "VariableDeclarationStatement", "src": "7673:23:16"}, {"expression": {"id": 4792, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4787, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7706:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4789, "indexExpression": {"hexValue": "30", "id": 4788, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7711:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7706:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4790, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7716:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4791, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "granularity", "nodeType": "MemberAccess", "referencedDeclaration": 4376, "src": "7716:17:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7706:27:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4793, "nodeType": "ExpressionStatement", "src": "7706:27:16"}, {"expression": {"id": 4799, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4794, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7743:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4796, "indexExpression": {"hexValue": "31", "id": 4795, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7748:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7743:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4797, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7753:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4798, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4378, "src": "7753:9:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7743:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4800, "nodeType": "ExpressionStatement", "src": "7743:19:16"}, {"expression": {"id": 4809, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4801, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7772:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4803, "indexExpression": {"hexValue": "32", "id": 4802, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7777:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7772:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"expression": {"id": 4804, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7782:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4805, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qtyismin", "nodeType": "MemberAccess", "referencedDeclaration": 4380, "src": "7782:14:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "30", "id": 4807, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7803:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "id": 4808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "7782:22:16", "trueExpression": {"hexValue": "31", "id": 4806, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7799:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "7772:32:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4810, "nodeType": "ExpressionStatement", "src": "7772:32:16"}, {"expression": {"id": 4819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4811, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7814:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4813, "indexExpression": {"hexValue": "33", "id": 4812, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7819:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7814:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"expression": {"id": 4814, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7824:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4815, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qtyismax", "nodeType": "MemberAccess", "referencedDeclaration": 4382, "src": "7824:14:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "30", "id": 4817, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7845:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "id": 4818, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "7824:22:16", "trueExpression": {"hexValue": "31", "id": 4816, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7841:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "7814:32:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4820, "nodeType": "ExpressionStatement", "src": "7814:32:16"}, {"expression": {"id": 4826, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4821, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7856:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4823, "indexExpression": {"hexValue": "34", "id": 4822, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7861:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4"}, "value": "4"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7856:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4824, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7866:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4825, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4384, "src": "7866:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7856:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4827, "nodeType": "ExpressionStatement", "src": "7856:24:16"}, {"expression": {"id": 4833, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4828, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7890:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4830, "indexExpression": {"hexValue": "35", "id": 4829, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7895:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7890:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4831, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7900:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4832, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4386, "src": "7900:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7890:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4834, "nodeType": "ExpressionStatement", "src": "7890:24:16"}, {"expression": {"id": 4840, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4835, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7924:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4837, "indexExpression": {"hexValue": "36", "id": 4836, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7929:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7924:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4838, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7934:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4839, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxavgquote", "nodeType": "MemberAccess", "referencedDeclaration": 4388, "src": "7934:17:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7924:27:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4841, "nodeType": "ExpressionStatement", "src": "7924:27:16"}, {"expression": {"id": 4847, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4842, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "7961:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4844, "indexExpression": {"hexValue": "37", "id": 4843, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7966:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_7_by_1", "typeString": "int_const 7"}, "value": "7"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7961:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 4845, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "7971:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 4846, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4390, "src": "7971:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7961:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4848, "nodeType": "ExpressionStatement", "src": "7961:24:16"}, {"id": 4879, "nodeType": "Block", "src": "7995:159:16", "statements": [{"assignments": [4850], "declarations": [{"constant": false, "id": 4850, "mutability": "mutable", "name": "argptr", "nameLocation": "8017:6:16", "nodeType": "VariableDeclaration", "scope": 4879, "src": "8009:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4849, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8009:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4852, "initialValue": {"hexValue": "38", "id": 4851, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8026:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "nodeType": "VariableDeclarationStatement", "src": "8009:18:16"}, {"body": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 4863, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4756, "src": "8095:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4865, "indexExpression": {"id": 4864, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4854, "src": "8105:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8095:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 4866, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8111:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8095:17:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4877, "nodeType": "IfStatement", "src": "8091:52:16", "trueBody": {"expression": {"id": 4875, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4868, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "8114:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4871, "indexExpression": {"id": 4870, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "8119:8:16", "subExpression": {"id": 4869, "name": "argptr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4850, "src": "8119:6:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8114:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 4872, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4756, "src": "8131:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4874, "indexExpression": {"id": 4873, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4854, "src": "8141:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8131:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8114:29:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4876, "nodeType": "ExpressionStatement", "src": "8114:29:16"}}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4857, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4854, "src": "8061:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 4858, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4769, "src": "8065:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8061:7:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4878, "initializationExpression": {"assignments": [4854], "declarations": [{"constant": false, "id": 4854, "mutability": "mutable", "name": "i", "nameLocation": "8054:1:16", "nodeType": "VariableDeclaration", "scope": 4878, "src": "8046:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4853, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8046:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4856, "initialValue": {"hexValue": "30", "id": 4855, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8058:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "8046:13:16"}, "loopExpression": {"expression": {"id": 4861, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "8070:3:16", "subExpression": {"id": 4860, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4854, "src": "8070:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4862, "nodeType": "ExpressionStatement", "src": "8070:3:16"}, "nodeType": "ForStatement", "src": "8041:102:16"}]}, {"assignments": [4881, null], "declarations": [{"constant": false, "id": 4881, "mutability": "mutable", "name": "_result", "nameLocation": "8169:7:16", "nodeType": "VariableDeclaration", "scope": 4920, "src": "8164:12:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4880, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8164:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 4915, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"hexValue": "645f73656172636828627974657333322c627974657333322c75696e743235365b5d29", "id": 4892, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8279:37:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_bd0ade2bcae368fca26bb02146561a2830136bf30c4a34c648255fccebbe2254", "typeString": "literal_string \"d_search(bytes32,bytes32,uint256[])\""}, "value": "d_search(bytes32,bytes32,uint256[])"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_bd0ade2bcae368fca26bb02146561a2830136bf30c4a34c648255fccebbe2254", "typeString": "literal_string \"d_search(bytes32,bytes32,uint256[])\""}], "id": 4891, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "8269:9:16", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 4893, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8269:48:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 4890, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8262:6:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)"}, "typeName": {"id": 4889, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "8262:6:16", "typeDescriptions": {}}}, "id": 4894, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8262:56:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"arguments": [{"id": 4897, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "8344:4:16", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketSearch_$6563", "typeString": "contract MarketSearch"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MarketSearch_$6563", "typeString": "contract MarketSearch"}], "id": 4896, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8336:7:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4895, "name": "address", "nodeType": "ElementaryTypeName", "src": "8336:7:16", "typeDescriptions": {}}}, "id": 4898, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8336:13:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4899, "name": "from_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4748, "src": "8367:5:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 4900, "name": "to_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4750, "src": "8390:3:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"commonType": {"typeIdentifier": "t_rational_96_by_1", "typeString": "int_const 96"}, "id": 4905, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3332", "id": 4903, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8419:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32"}, "value": "32"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "33", "id": 4904, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8424:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "8419:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_96_by_1", "typeString": "int_const 96"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_96_by_1", "typeString": "int_const 96"}], "id": 4902, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8411:7:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 4901, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8411:7:16", "typeDescriptions": {}}}, "id": 4906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8411:15:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 4909, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "8452:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 4910, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8452:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4908, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8444:7:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 4907, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8444:7:16", "typeDescriptions": {}}}, "id": 4911, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8444:20:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4912, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4785, "src": "8482:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}], "expression": {"id": 4887, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "8222:3:16", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 4888, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "src": "8222:22:16", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 4913, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8222:278:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"arguments": [{"id": 4884, "name": "MARKET", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2459, "src": "8190:6:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4882, "name": "rep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9150, "src": "8182:3:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "id": 4883, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get", "nodeType": "MemberAccess", "referencedDeclaration": 9929, "src": "8182:7:16", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 4885, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8182:15:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4886, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "staticcall", "nodeType": "MemberAccess", "src": "8182:26:16", "typeDescriptions": {"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) view returns (bool,bytes memory)"}}, "id": 4914, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8182:328:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "8163:347:16"}, {"expression": {"arguments": [{"id": 4917, "name": "_result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4881, "src": "8528:7:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 4916, "name": "_return", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9385, "src": "8520:7:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$__$", "typeString": "function (bool) view"}}, "id": 4918, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8520:16:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4919, "nodeType": "ExpressionStatement", "src": "8520:16:16"}]}, "functionSelector": "e9f14ce6", "id": 4921, "implemented": true, "kind": "function", "modifiers": [], "name": "search", "nameLocation": "7265:6:16", "nodeType": "FunctionDefinition", "parameters": {"id": 4757, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4748, "mutability": "mutable", "name": "from_", "nameLocation": "7289:5:16", "nodeType": "VariableDeclaration", "scope": 4921, "src": "7281:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4747, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7281:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4750, "mutability": "mutable", "name": "to_", "nameLocation": "7312:3:16", "nodeType": "VariableDeclaration", "scope": 4921, "src": "7304:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4749, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7304:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4753, "mutability": "mutable", "name": "args_", "nameLocation": "7349:5:16", "nodeType": "VariableDeclaration", "scope": 4921, "src": "7325:29:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}, "typeName": {"id": 4752, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4751, "name": "SearchPublicArgs", "nodeType": "IdentifierPath", "referencedDeclaration": 4391, "src": "7325:16:16"}, "referencedDeclaration": 4391, "src": "7325:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_storage_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}}, "visibility": "internal"}, {"constant": false, "id": 4756, "mutability": "mutable", "name": "delivery_", "nameLocation": "7381:9:16", "nodeType": "VariableDeclaration", "scope": 4921, "src": "7364:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4754, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7364:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4755, "nodeType": "ArrayTypeName", "src": "7364:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "7271:125:16"}, "returnParameters": {"id": 4767, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4761, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4921, "src": "7455:17:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 4759, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4758, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "7455:8:16"}, "referencedDeclaration": 14079, "src": "7455:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4760, "nodeType": "ArrayTypeName", "src": "7455:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}, {"constant": false, "id": 4763, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4921, "src": "7486:7:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4762, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7486:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4766, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4921, "src": "7507:12:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote"}, "typeName": {"id": 4765, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4764, "name": "Quote", "nodeType": "IdentifierPath", "referencedDeclaration": 14060, "src": "7507:5:16"}, "referencedDeclaration": 14060, "src": "7507:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_storage_ptr", "typeString": "struct Quote"}}, "visibility": "internal"}], "src": "7441:88:16"}, "scope": 6563, "src": "7256:1287:16", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 5151, "nodeType": "Block", "src": "9970:2488:16", "statements": [{"expression": {"id": 4954, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4944, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10013:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4946, "name": "currency_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4924, "src": "10048:9:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 4947, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "10071:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 4948, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "10071:16:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 4949, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "10101:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 4950, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "delivery", "nodeType": "MemberAccess", "referencedDeclaration": 4362, "src": "10101:16:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"hexValue": "30", "id": 4951, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10131:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 4952, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10146:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4945, "name": "__fromToListEx", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4580, "src": "10020:14:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (bytes32,bytes32,uint256[] memory,uint256,uint256) view returns (struct Solution memory[] memory)"}}, "id": 4953, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10020:137:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "src": "10013:144:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4955, "nodeType": "ExpressionStatement", "src": "10013:144:16"}, {"id": 5095, "nodeType": "Block", "src": "10215:1291:16", "statements": [{"assignments": [4957], "declarations": [{"constant": false, "id": 4957, "mutability": "mutable", "name": "len", "nameLocation": "10234:3:16", "nodeType": "VariableDeclaration", "scope": 5095, "src": "10229:8:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4956, "name": "uint", "nodeType": "ElementaryTypeName", "src": "10229:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4960, "initialValue": {"expression": {"id": 4958, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10240:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4959, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "10240:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10229:22:16"}, {"assignments": [4965], "declarations": [{"constant": false, "id": 4965, "mutability": "mutable", "name": "filtered", "nameLocation": "10283:8:16", "nodeType": "VariableDeclaration", "scope": 5095, "src": "10265:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 4963, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4962, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "10265:8:16"}, "referencedDeclaration": 14079, "src": "10265:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4964, "nodeType": "ArrayTypeName", "src": "10265:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}], "id": 4972, "initialValue": {"arguments": [{"id": 4970, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4957, "src": "10309:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4969, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "10294:14:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Solution memory[] memory)"}, "typeName": {"baseType": {"id": 4967, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4966, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "10298:8:16"}, "referencedDeclaration": 14079, "src": "10298:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4968, "nodeType": "ArrayTypeName", "src": "10298:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}}, "id": 4971, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10294:19:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "10265:48:16"}, {"assignments": [4974], "declarations": [{"constant": false, "id": 4974, "mutability": "mutable", "name": "count", "nameLocation": "10335:5:16", "nodeType": "VariableDeclaration", "scope": 5095, "src": "10327:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4973, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10327:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4976, "initialValue": {"hexValue": "30", "id": 4975, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10343:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "10327:17:16"}, {"body": {"id": 5088, "nodeType": "Block", "src": "10388:1002:16", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 4993, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 4987, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10449:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 4989, "indexExpression": {"id": 4988, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10454:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10449:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 4990, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "addr", "nodeType": "MemberAccess", "referencedDeclaration": 14069, "src": "10449:12:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 4991, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "10465:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 4992, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "10465:16:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "10449:32:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5f5f736561726368206f75745f5b695d2e61646472203d3d207461726765745f2e63757272656e6379", "id": 4994, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10482:43:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e8ea1d994e89d0739c90a77d396aad0c55ce55729889c08e5033fa4ec714095f", "typeString": "literal_string \"__search out_[i].addr == target_.currency\""}, "value": "__search out_[i].addr == target_.currency"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e8ea1d994e89d0739c90a77d396aad0c55ce55729889c08e5033fa4ec714095f", "typeString": "literal_string \"__search out_[i].addr == target_.currency\""}], "id": 4986, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10441:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4995, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10441:85:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4996, "nodeType": "ExpressionStatement", "src": "10441:85:16"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5010, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4997, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4930, "src": "10570:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 4998, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "10570:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 4999, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10593:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10570:24:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 5001, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10569:26:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5008, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 5002, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10620:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5004, "indexExpression": {"id": 5003, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10625:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10620:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5005, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14075, "src": "10620:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 5006, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4930, "src": "10636:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5007, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "10636:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10620:35:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 5009, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10619:37:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "10569:87:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5012, "nodeType": "IfStatement", "src": "10544:139:16", "trueBody": {"id": 5011, "nodeType": "Continue", "src": "10675:8:16"}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 5013, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10705:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5015, "indexExpression": {"id": 5014, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10710:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10705:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5016, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "granularity", "nodeType": "MemberAccess", "referencedDeclaration": 14073, "src": "10705:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 5017, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "10727:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5018, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mingranularity", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "10727:22:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10705:44:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5021, "nodeType": "IfStatement", "src": "10701:58:16", "trueBody": {"id": 5020, "nodeType": "Continue", "src": "10751:8:16"}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5034, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 5022, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10848:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5024, "indexExpression": {"id": 5023, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10853:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10848:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5025, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14071, "src": "10848:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"arguments": [{"expression": {"baseExpression": {"id": 5029, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10887:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5031, "indexExpression": {"id": 5030, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10892:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10887:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5032, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "orderid", "nodeType": "MemberAccess", "referencedDeclaration": 14067, "src": "10887:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 5026, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4930, "src": "10862:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5027, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "10862:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5028, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getIdQty", "nodeType": "MemberAccess", "referencedDeclaration": 14746, "src": "10862:24:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Solution memory[] memory,uint256) pure returns (uint256)"}}, "id": 5033, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10862:41:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10848:55:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5036, "nodeType": "IfStatement", "src": "10844:89:16", "trueBody": {"id": 5035, "nodeType": "Continue", "src": "10925:8:16"}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5055, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5049, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 5037, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "10977:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5039, "indexExpression": {"id": 5038, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10982:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10977:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5040, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14071, "src": "10977:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [{"expression": {"baseExpression": {"id": 5044, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "11016:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5046, "indexExpression": {"id": 5045, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "11021:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11016:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5047, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "orderid", "nodeType": "MemberAccess", "referencedDeclaration": 14067, "src": "11016:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 5041, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4930, "src": "10991:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5042, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "10991:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5043, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getIdQty", "nodeType": "MemberAccess", "referencedDeclaration": 14746, "src": "10991:24:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Solution memory[] memory,uint256) pure returns (uint256)"}}, "id": 5048, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10991:41:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10977:55:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5050, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10976:57:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 5051, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "11056:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5053, "indexExpression": {"id": 5052, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "11061:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11056:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5054, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "granularity", "nodeType": "MemberAccess", "referencedDeclaration": 14073, "src": "11056:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10976:99:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5057, "nodeType": "IfStatement", "src": "10951:151:16", "trueBody": {"id": 5056, "nodeType": "Continue", "src": "11094:8:16"}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5066, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5058, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "11145:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5059, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "11145:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "31", "id": 5060, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11165:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "11145:21:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5065, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5062, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4930, "src": "11190:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5063, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxavgquote", "nodeType": "MemberAccess", "referencedDeclaration": 4367, "src": "11190:22:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 5064, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11216:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "11190:27:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "11145:72:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5073, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 5067, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "11241:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5069, "indexExpression": {"id": 5068, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "11246:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11241:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5070, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14075, "src": "11241:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 5071, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4930, "src": "11257:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5072, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxavgquote", "nodeType": "MemberAccess", "referencedDeclaration": 4367, "src": "11257:22:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11241:38:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "11145:134:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5076, "nodeType": "IfStatement", "src": "11120:186:16", "trueBody": {"id": 5075, "nodeType": "Continue", "src": "11298:8:16"}}, {"expression": {"id": 5083, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5077, "name": "filtered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4965, "src": "11325:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5079, "indexExpression": {"id": 5078, "name": "count", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4974, "src": "11334:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11325:15:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 5080, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "11343:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5082, "indexExpression": {"id": 5081, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "11348:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11343:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "src": "11325:25:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_memory_ptr", "typeString": "struct Solution memory"}}, "id": 5084, "nodeType": "ExpressionStatement", "src": "11325:25:16"}, {"expression": {"id": 5086, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "11368:7:16", "subExpression": {"id": 5085, "name": "count", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4974, "src": "11368:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5087, "nodeType": "ExpressionStatement", "src": "11368:7:16"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4982, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4980, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10374:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 4981, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4957, "src": "10378:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10374:7:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5089, "initializationExpression": {"assignments": [4978], "declarations": [{"constant": false, "id": 4978, "mutability": "mutable", "name": "i", "nameLocation": "10371:1:16", "nodeType": "VariableDeclaration", "scope": 5089, "src": "10363:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4977, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10363:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4979, "nodeType": "VariableDeclarationStatement", "src": "10363:9:16"}, "loopExpression": {"expression": {"id": 4984, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "10383:3:16", "subExpression": {"id": 4983, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4978, "src": "10383:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4985, "nodeType": "ExpressionStatement", "src": "10383:3:16"}, "nodeType": "ForStatement", "src": "10358:1032:16"}, {"AST": {"nodeType": "YulBlock", "src": "11412:55:16", "statements": [{"expression": {"arguments": [{"name": "filtered", "nodeType": "YulIdentifier", "src": "11437:8:16"}, {"name": "count", "nodeType": "YulIdentifier", "src": "11447:5:16"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "11430:6:16"}, "nodeType": "YulFunctionCall", "src": "11430:23:16"}, "nodeType": "YulExpressionStatement", "src": "11430:23:16"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 4974, "isOffset": false, "isSlot": false, "src": "11447:5:16", "valueSize": 1}, {"declaration": 4965, "isOffset": false, "isSlot": false, "src": "11437:8:16", "valueSize": 1}], "id": 5090, "nodeType": "InlineAssembly", "src": "11403:64:16"}, {"expression": {"id": 5093, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5091, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "11480:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5092, "name": "filtered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4965, "src": "11487:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "src": "11480:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5094, "nodeType": "ExpressionStatement", "src": "11480:15:16"}]}, {"expression": {"id": 5113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5096, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "11891:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, {"id": 5097, "name": "qty_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4939, "src": "11897:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5098, "name": "quote_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4942, "src": "11903:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}], "id": 5099, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "11890:20:16", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5102, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "11956:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, {"hexValue": "30", "id": 5103, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11974:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 5104, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "11989:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"id": 5105, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4930, "src": "12010:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"arguments": [{"hexValue": "30", "id": 5110, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12049:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5109, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "12034:14:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Solution memory[] memory)"}, "typeName": {"baseType": {"id": 5107, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5106, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "12038:8:16"}, "referencedDeclaration": 14079, "src": "12038:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 5108, "nodeType": "ArrayTypeName", "src": "12038:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}}, "id": 5111, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12034:17:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 5100, "name": "MarketSearchLib", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18105, "src": "11913:15:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MarketSearchLib_$18105_$", "typeString": "type(library MarketSearchLib)"}}, "id": 5101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "recurseSearch", "nodeType": "MemberAccess", "referencedDeclaration": 17972, "src": "11913:29:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (struct Solution memory[] memory,uint256,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,struct Solution memory[] memory) pure returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 5112, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11913:148:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "src": "11890:171:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5114, "nodeType": "ExpressionStatement", "src": "11890:171:16"}, {"condition": {"id": 5116, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "12075:11:16", "subExpression": {"id": 5115, "name": "rawoutput_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4932, "src": "12076:10:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5150, "nodeType": "IfStatement", "src": "12071:381:16", "trueBody": {"id": 5149, "nodeType": "Block", "src": "12088:364:16", "statements": [{"expression": {"id": 5121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5117, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "12145:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5118, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "12152:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "order", "nodeType": "MemberAccess", "referencedDeclaration": 15175, "src": "12152:10:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$bound_to$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Solution memory[] memory) pure returns (struct Solution memory[] memory)"}}, "id": 5120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12152:12:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "src": "12145:19:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5122, "nodeType": "ExpressionStatement", "src": "12145:19:16"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5123, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "12182:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5124, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "12182:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 5125, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12202:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12182:21:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5127, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "12207:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "12207:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 5129, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "12221:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5130, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "12221:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12207:30:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12182:55:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5148, "nodeType": "IfStatement", "src": "12178:264:16", "trueBody": {"id": 5147, "nodeType": "Block", "src": "12239:203:16", "statements": [{"assignments": [5134], "declarations": [{"constant": false, "id": 5134, "mutability": "mutable", "name": "count", "nameLocation": "12265:5:16", "nodeType": "VariableDeclaration", "scope": 5147, "src": "12257:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5133, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12257:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5137, "initialValue": {"expression": {"id": 5135, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4927, "src": "12273:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5136, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "12273:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12257:32:16"}, {"AST": {"nodeType": "YulBlock", "src": "12316:59:16", "statements": [{"expression": {"arguments": [{"name": "out_", "nodeType": "YulIdentifier", "src": "12345:4:16"}, {"name": "count", "nodeType": "YulIdentifier", "src": "12351:5:16"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "12338:6:16"}, "nodeType": "YulFunctionCall", "src": "12338:19:16"}, "nodeType": "YulExpressionStatement", "src": "12338:19:16"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 5134, "isOffset": false, "isSlot": false, "src": "12351:5:16", "valueSize": 1}, {"declaration": 4937, "isOffset": false, "isSlot": false, "src": "12345:4:16", "valueSize": 1}], "id": 5138, "nodeType": "InlineAssembly", "src": "12307:68:16"}, {"expression": {"id": 5145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5139, "name": "qty_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4939, "src": "12393:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5140, "name": "quote_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4942, "src": "12399:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}], "id": 5141, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "12392:14:16", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(uint256,struct Quote memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5142, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4937, "src": "12409:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getQtyQuote", "nodeType": "MemberAccess", "referencedDeclaration": 15423, "src": "12409:16:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$bound_to$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Solution memory[] memory) pure returns (uint256,struct Quote memory)"}}, "id": 5144, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12409:18:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(uint256,struct Quote memory)"}}, "src": "12392:35:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5146, "nodeType": "ExpressionStatement", "src": "12392:35:16"}]}}]}}]}, "documentation": {"id": 4922, "nodeType": "StructuredDocumentation", "src": "8549:1108:16", "text": " @dev we search for direct solution from_ to target_.addr\n from_ is the source currency , from_ directly filtered by fromToListEx\n target_\n      target_.addr                    is the searched dest currency\n                                          addr is directly filtered by fromToListEx\n      target_.mingranularity          is the minimum granularity we are searching for\n                                          is used by the first filter\n      target_.qty                     is the qty we are search, it can be overshoot is cheaper to buy more\n      target_.delivery                is the filter for target delivery\n                                          delivery is directly filtered by fromToListEx\n searcharg_\n      searcharg_.maxquote                 is used by the first filter\n      searcharg_.maxavgquote\n      searcharg_.maxcount\n      searcharg_.used                 memorize the used of order\n      searcharg_.remainer IGNORED     should be removed from target_.qty before call"}, "id": 5152, "implemented": true, "kind": "function", "modifiers": [], "name": "__search", "nameLocation": "9671:8:16", "nodeType": "FunctionDefinition", "parameters": {"id": 4933, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4924, "mutability": "mutable", "name": "currency_", "nameLocation": "9697:9:16", "nodeType": "VariableDeclaration", "scope": 5152, "src": "9689:17:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 4923, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9689:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 4927, "mutability": "mutable", "name": "target_", "nameLocation": "9739:7:16", "nodeType": "VariableDeclaration", "scope": 5152, "src": "9716:30:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}, "typeName": {"id": 4926, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4925, "name": "SearchArgTarget", "nodeType": "IdentifierPath", "referencedDeclaration": 4363, "src": "9716:15:16"}, "referencedDeclaration": 4363, "src": "9716:15:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_storage_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}}, "visibility": "internal"}, {"constant": false, "id": 4930, "mutability": "mutable", "name": "searcharg_", "nameLocation": "9773:10:16", "nodeType": "VariableDeclaration", "scope": 5152, "src": "9756:27:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg"}, "typeName": {"id": 4929, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4928, "name": "SearchArg", "nodeType": "IdentifierPath", "referencedDeclaration": 4374, "src": "9756:9:16"}, "referencedDeclaration": 4374, "src": "9756:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_storage_ptr", "typeString": "struct MarketSearch.SearchArg"}}, "visibility": "internal"}, {"constant": false, "id": 4932, "mutability": "mutable", "name": "rawoutput_", "nameLocation": "9798:10:16", "nodeType": "VariableDeclaration", "scope": 5152, "src": "9793:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4931, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9793:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9679:135:16"}, "returnParameters": {"id": 4943, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4937, "mutability": "mutable", "name": "out_", "nameLocation": "9892:4:16", "nodeType": "VariableDeclaration", "scope": 5152, "src": "9874:22:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 4935, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4934, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "9874:8:16"}, "referencedDeclaration": 14079, "src": "9874:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 4936, "nodeType": "ArrayTypeName", "src": "9874:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}, {"constant": false, "id": 4939, "mutability": "mutable", "name": "qty_", "nameLocation": "9918:4:16", "nodeType": "VariableDeclaration", "scope": 5152, "src": "9910:12:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4938, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9910:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4942, "mutability": "mutable", "name": "quote_", "nameLocation": "9949:6:16", "nodeType": "VariableDeclaration", "scope": 5152, "src": "9936:19:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote"}, "typeName": {"id": 4941, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4940, "name": "Quote", "nodeType": "IdentifierPath", "referencedDeclaration": 14060, "src": "9936:5:16"}, "referencedDeclaration": 14060, "src": "9936:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_storage_ptr", "typeString": "struct Quote"}}, "visibility": "internal"}], "src": "9860:105:16"}, "scope": 6563, "src": "9662:2796:16", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 5280, "nodeType": "Block", "src": "12660:1197:16", "statements": [{"assignments": [5170], "declarations": [{"constant": false, "id": 5170, "mutability": "mutable", "name": "deliverycount", "nameLocation": "12937:13:16", "nodeType": "VariableDeclaration", "scope": 5280, "src": "12929:21:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5169, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12929:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5172, "initialValue": {"hexValue": "30", "id": 5171, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12953:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "12929:25:16"}, {"assignments": [5174], "declarations": [{"constant": false, "id": 5174, "mutability": "mutable", "name": "len", "nameLocation": "12969:3:16", "nodeType": "VariableDeclaration", "scope": 5280, "src": "12964:8:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5173, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12964:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5177, "initialValue": {"expression": {"id": 5175, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "12975:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "12975:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12964:23:16"}, {"body": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5192, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 5186, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13062:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5190, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "38", "id": 5187, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13068:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 5188, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5170, "src": "13072:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13068:17:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13062:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 5191, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13090:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "13062:29:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5194, "nodeType": "IfStatement", "src": "13058:40:16", "trueBody": {"id": 5193, "nodeType": "Break", "src": "13093:5:16"}}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5182, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5178, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5170, "src": "13004:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5179, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5174, "src": "13020:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "38", "id": 5180, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13026:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "13020:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13004:23:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5195, "loopExpression": {"expression": {"id": 5184, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "13029:15:16", "subExpression": {"id": 5183, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5170, "src": "13029:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5185, "nodeType": "ExpressionStatement", "src": "13029:15:16"}, "nodeType": "ForStatement", "src": "12997:101:16"}, {"assignments": [5200], "declarations": [{"constant": false, "id": 5200, "mutability": "mutable", "name": "delivery", "nameLocation": "13126:8:16", "nodeType": "VariableDeclaration", "scope": 5280, "src": "13109:25:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5198, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13109:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5199, "nodeType": "ArrayTypeName", "src": "13109:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 5206, "initialValue": {"arguments": [{"id": 5204, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5170, "src": "13151:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5203, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "13137:13:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 5201, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13141:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5202, "nodeType": "ArrayTypeName", "src": "13141:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 5205, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13137:28:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13109:56:16"}, {"body": {"expression": {"id": 5225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5217, "name": "delivery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5200, "src": "13231:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5219, "indexExpression": {"id": 5218, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5208, "src": "13240:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "13231:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 5220, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13245:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5224, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5221, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5208, "src": "13251:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "38", "id": 5222, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13255:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "13251:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13245:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13231:26:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5226, "nodeType": "ExpressionStatement", "src": "13231:26:16"}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5213, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5211, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5208, "src": "13195:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 5212, "name": "deliverycount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5170, "src": "13199:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13195:17:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5227, "initializationExpression": {"assignments": [5208], "declarations": [{"constant": false, "id": 5208, "mutability": "mutable", "name": "i", "nameLocation": "13188:1:16", "nodeType": "VariableDeclaration", "scope": 5227, "src": "13180:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5207, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13180:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5210, "initialValue": {"hexValue": "30", "id": 5209, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13192:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "13180:13:16"}, "loopExpression": {"expression": {"id": 5215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "13214:3:16", "subExpression": {"id": 5214, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5208, "src": "13214:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5216, "nodeType": "ExpressionStatement", "src": "13214:3:16"}, "nodeType": "ForStatement", "src": "13175:82:16"}, {"expression": {"arguments": [{"id": 5229, "name": "fromcurrency_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5154, "src": "13314:13:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"id": 5232, "name": "tocurrency_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5156, "src": "13395:11:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 5233, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13428:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5235, "indexExpression": {"hexValue": "30", "id": 5234, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13434:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13428:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 5236, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13458:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5238, "indexExpression": {"hexValue": "31", "id": 5237, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13464:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13458:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5243, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 5239, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13488:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5241, "indexExpression": {"hexValue": "32", "id": 5240, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13494:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13488:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 5242, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13500:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "13488:13:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 5244, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13523:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5246, "indexExpression": {"hexValue": "33", "id": 5245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13529:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13523:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 5247, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13535:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "13523:13:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"baseExpression": {"id": 5249, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13558:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5251, "indexExpression": {"hexValue": "37", "id": 5250, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13564:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_7_by_1", "typeString": "int_const 7"}, "value": "7"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13558:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5252, "name": "delivery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5200, "src": "13588:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "expression": {"id": 5230, "name": "MarketSearch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6563, "src": "13345:12:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MarketSearch_$6563_$", "typeString": "type(contract MarketSearch)"}}, "id": 5231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SearchArgTarget", "nodeType": "MemberAccess", "referencedDeclaration": 4363, "src": "13345:28:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArgTarget_$4363_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArgTarget storage pointer)"}}, "id": 5253, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13345:269:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"arguments": [{"baseExpression": {"id": 5256, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13676:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5258, "indexExpression": {"hexValue": "35", "id": 5257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13682:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13676:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 5259, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13706:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5261, "indexExpression": {"hexValue": "36", "id": 5260, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13712:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13706:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 5262, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5159, "src": "13736:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 5264, "indexExpression": {"hexValue": "34", "id": 5263, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13742:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4"}, "value": "4"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13736:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"hexValue": "30", "id": 5269, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13781:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5268, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "13766:14:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Solution memory[] memory)"}, "typeName": {"baseType": {"id": 5266, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5265, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "13770:8:16"}, "referencedDeclaration": 14079, "src": "13770:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 5267, "nodeType": "ArrayTypeName", "src": "13770:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}}, "id": 5270, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13766:17:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 5254, "name": "MarketSearch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6563, "src": "13632:12:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MarketSearch_$6563_$", "typeString": "type(contract MarketSearch)"}}, "id": 5255, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SearchArg", "nodeType": "MemberAccess", "referencedDeclaration": 4374, "src": "13632:22:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArg_$4374_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArg storage pointer)"}}, "id": 5271, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13632:169:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"arguments": [{"hexValue": "30", "id": 5276, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13834:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5275, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "13819:14:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Remainer memory[] memory)"}, "typeName": {"baseType": {"id": 5273, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5272, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "13823:8:16"}, "referencedDeclaration": 14065, "src": "13823:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 5274, "nodeType": "ArrayTypeName", "src": "13823:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}}, "id": 5277, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13819:17:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}], "id": 5228, "name": "__searchC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6562, "src": "13287:9:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (bytes32,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,struct Remainer memory[] memory) view returns (struct SolutionSet memory,struct Remainer memory[] memory)"}}, "id": 5278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13287:563:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(struct SolutionSet memory,struct Remainer memory[] memory)"}}, "functionReturnParameters": 5168, "id": 5279, "nodeType": "Return", "src": "13268:582:16"}]}, "functionSelector": "0a3550aa", "id": 5281, "implemented": true, "kind": "function", "modifiers": [], "name": "d_searchC", "nameLocation": "12473:9:16", "nodeType": "FunctionDefinition", "parameters": {"id": 5160, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5154, "mutability": "mutable", "name": "fromcurrency_", "nameLocation": "12500:13:16", "nodeType": "VariableDeclaration", "scope": 5281, "src": "12492:21:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5153, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12492:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5156, "mutability": "mutable", "name": "tocurrency_", "nameLocation": "12531:11:16", "nodeType": "VariableDeclaration", "scope": 5281, "src": "12523:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5155, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12523:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5159, "mutability": "mutable", "name": "args_", "nameLocation": "12571:5:16", "nodeType": "VariableDeclaration", "scope": 5281, "src": "12552:24:16", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5157, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12552:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5158, "nodeType": "ArrayTypeName", "src": "12552:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "12482:100:16"}, "returnParameters": {"id": 5168, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5163, "mutability": "mutable", "name": "out_", "nameLocation": "12623:4:16", "nodeType": "VariableDeclaration", "scope": 5281, "src": "12604:23:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet"}, "typeName": {"id": 5162, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5161, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "12604:11:16"}, "referencedDeclaration": 14109, "src": "12604:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "visibility": "internal"}, {"constant": false, "id": 5167, "mutability": "mutable", "name": "remainerout_", "nameLocation": "12646:12:16", "nodeType": "VariableDeclaration", "scope": 5281, "src": "12628:30:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer[]"}, "typeName": {"baseType": {"id": 5165, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5164, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "12628:8:16"}, "referencedDeclaration": 14065, "src": "12628:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 5166, "nodeType": "ArrayTypeName", "src": "12628:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}, "visibility": "internal"}], "src": "12603:56:16"}, "scope": 6563, "src": "12464:1393:16", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 5320, "nodeType": "Block", "src": "14164:199:16", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 5308, "name": "from_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5283, "src": "14233:5:16", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5309, "name": "fromid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5285, "src": "14240:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5306, "name": "rep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9150, "src": "14218:3:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "id": 5307, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "roCurrency", "nodeType": "MemberAccess", "referencedDeclaration": 18990, "src": "14218:14:16", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (address,uint256) view external returns (bytes32)"}}, "id": 5310, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14218:30:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"id": 5313, "name": "to_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5287, "src": "14281:3:16", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5314, "name": "toid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5289, "src": "14286:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5311, "name": "rep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9150, "src": "14266:3:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "id": 5312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "roCurrency", "nodeType": "MemberAccess", "referencedDeclaration": 18990, "src": "14266:14:16", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (address,uint256) view external returns (bytes32)"}}, "id": 5315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14266:26:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5316, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5292, "src": "14310:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, {"id": 5317, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5295, "src": "14333:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 5305, "name": "searchC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5494, "src": "14193:7:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_struct$_SearchPublicArgs_$4391_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (bytes32,bytes32,struct MarketSearch.SearchPublicArgs memory,uint256[] memory) view returns (struct SolutionSet memory,struct Remainer memory[] memory)"}}, "id": 5318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14193:163:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(struct SolutionSet memory,struct Remainer memory[] memory)"}}, "functionReturnParameters": 5304, "id": 5319, "nodeType": "Return", "src": "14174:182:16"}]}, "functionSelector": "b9b38745", "id": 5321, "implemented": true, "kind": "function", "modifiers": [], "name": "searchCEx", "nameLocation": "13872:9:16", "nodeType": "FunctionDefinition", "parameters": {"id": 5296, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5283, "mutability": "mutable", "name": "from_", "nameLocation": "13899:5:16", "nodeType": "VariableDeclaration", "scope": 5321, "src": "13891:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5282, "name": "address", "nodeType": "ElementaryTypeName", "src": "13891:7:16", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5285, "mutability": "mutable", "name": "fromid_", "nameLocation": "13922:7:16", "nodeType": "VariableDeclaration", "scope": 5321, "src": "13914:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5284, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13914:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5287, "mutability": "mutable", "name": "to_", "nameLocation": "13947:3:16", "nodeType": "VariableDeclaration", "scope": 5321, "src": "13939:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5286, "name": "address", "nodeType": "ElementaryTypeName", "src": "13939:7:16", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5289, "mutability": "mutable", "name": "toid_", "nameLocation": "13968:5:16", "nodeType": "VariableDeclaration", "scope": 5321, "src": "13960:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13960:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5292, "mutability": "mutable", "name": "args_", "nameLocation": "14007:5:16", "nodeType": "VariableDeclaration", "scope": 5321, "src": "13983:29:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}, "typeName": {"id": 5291, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5290, "name": "SearchPublicArgs", "nodeType": "IdentifierPath", "referencedDeclaration": 4391, "src": "13983:16:16"}, "referencedDeclaration": 4391, "src": "13983:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_storage_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}}, "visibility": "internal"}, {"constant": false, "id": 5295, "mutability": "mutable", "name": "delivery_", "nameLocation": "14039:9:16", "nodeType": "VariableDeclaration", "scope": 5321, "src": "14022:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5293, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14022:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5294, "nodeType": "ArrayTypeName", "src": "14022:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13881:173:16"}, "returnParameters": {"id": 5304, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5299, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5321, "src": "14113:18:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet"}, "typeName": {"id": 5298, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5297, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "14113:11:16"}, "referencedDeclaration": 14109, "src": "14113:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "visibility": "internal"}, {"constant": false, "id": 5303, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5321, "src": "14132:17:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer[]"}, "typeName": {"baseType": {"id": 5301, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5300, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "14132:8:16"}, "referencedDeclaration": 14065, "src": "14132:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 5302, "nodeType": "ArrayTypeName", "src": "14132:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}, "visibility": "internal"}], "src": "14099:60:16"}, "scope": 6563, "src": "13863:500:16", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 5493, "nodeType": "Block", "src": "14636:1026:16", "statements": [{"assignments": [5342], "declarations": [{"constant": false, "id": 5342, "mutability": "mutable", "name": "len", "nameLocation": "14651:3:16", "nodeType": "VariableDeclaration", "scope": 5493, "src": "14646:8:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5341, "name": "uint", "nodeType": "ElementaryTypeName", "src": "14646:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5345, "initialValue": {"expression": {"id": 5343, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5331, "src": "14657:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5344, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "14657:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14646:27:16"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5349, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5347, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5342, "src": "14691:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "3332", "id": 5348, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14698:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32"}, "value": "32"}, "src": "14691:9:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "64656c6976657279206172726179206d61782073697a65206973203332", "id": 5350, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "14702:31:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2734617c40f1ab1381a217092e0a26e9ba13ce8049a6ff2db396a59147fe4543", "typeString": "literal_string \"delivery array max size is 32\""}, "value": "delivery array max size is 32"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2734617c40f1ab1381a217092e0a26e9ba13ce8049a6ff2db396a59147fe4543", "typeString": "literal_string \"delivery array max size is 32\""}], "id": 5346, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "14683:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5351, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14683:51:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5352, "nodeType": "ExpressionStatement", "src": "14683:51:16"}, {"assignments": [5358], "declarations": [{"constant": false, "id": 5358, "mutability": "mutable", "name": "args", "nameLocation": "14794:4:16", "nodeType": "VariableDeclaration", "scope": 5493, "src": "14775:23:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40]"}, "typeName": {"baseType": {"id": 5356, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14775:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5357, "length": {"hexValue": "3430", "id": 5355, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14783:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_40_by_1", "typeString": "int_const 40"}, "value": "40"}, "nodeType": "ArrayTypeName", "src": "14775:11:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_storage_ptr", "typeString": "uint256[40]"}}, "visibility": "internal"}], "id": 5359, "nodeType": "VariableDeclarationStatement", "src": "14775:23:16"}, {"expression": {"id": 5365, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5360, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "14808:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5362, "indexExpression": {"hexValue": "30", "id": 5361, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14813:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "14808:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5363, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "14818:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5364, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "granularity", "nodeType": "MemberAccess", "referencedDeclaration": 4376, "src": "14818:17:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14808:27:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5366, "nodeType": "ExpressionStatement", "src": "14808:27:16"}, {"expression": {"id": 5372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5367, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "14845:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5369, "indexExpression": {"hexValue": "31", "id": 5368, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14850:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "14845:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5370, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "14855:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5371, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4378, "src": "14855:9:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14845:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5373, "nodeType": "ExpressionStatement", "src": "14845:19:16"}, {"expression": {"id": 5382, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5374, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "14874:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5376, "indexExpression": {"hexValue": "32", "id": 5375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14879:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "14874:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"expression": {"id": 5377, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "14884:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5378, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qtyismin", "nodeType": "MemberAccess", "referencedDeclaration": 4380, "src": "14884:14:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "30", "id": 5380, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14905:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "id": 5381, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "14884:22:16", "trueExpression": {"hexValue": "31", "id": 5379, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14901:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "14874:32:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5383, "nodeType": "ExpressionStatement", "src": "14874:32:16"}, {"expression": {"id": 5392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5384, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "14916:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5386, "indexExpression": {"hexValue": "33", "id": 5385, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14921:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "14916:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"expression": {"id": 5387, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "14926:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5388, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qtyismax", "nodeType": "MemberAccess", "referencedDeclaration": 4382, "src": "14926:14:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "30", "id": 5390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14947:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "id": 5391, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "14926:22:16", "trueExpression": {"hexValue": "31", "id": 5389, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14943:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "14916:32:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5393, "nodeType": "ExpressionStatement", "src": "14916:32:16"}, {"expression": {"id": 5399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5394, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "14958:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5396, "indexExpression": {"hexValue": "34", "id": 5395, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14963:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4"}, "value": "4"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "14958:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5397, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "14968:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5398, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4384, "src": "14968:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14958:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5400, "nodeType": "ExpressionStatement", "src": "14958:24:16"}, {"expression": {"id": 5406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5401, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "14992:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5403, "indexExpression": {"hexValue": "35", "id": 5402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14997:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "14992:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5404, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "15002:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5405, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4386, "src": "15002:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14992:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5407, "nodeType": "ExpressionStatement", "src": "14992:24:16"}, {"expression": {"id": 5413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5408, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "15026:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5410, "indexExpression": {"hexValue": "36", "id": 5409, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15031:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15026:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5411, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "15036:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5412, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxavgquote", "nodeType": "MemberAccess", "referencedDeclaration": 4388, "src": "15036:17:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15026:27:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5414, "nodeType": "ExpressionStatement", "src": "15026:27:16"}, {"expression": {"id": 5420, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5415, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "15063:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5417, "indexExpression": {"hexValue": "37", "id": 5416, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15068:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_7_by_1", "typeString": "int_const 7"}, "value": "7"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15063:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5418, "name": "args_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5328, "src": "15073:5:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs memory"}}, "id": 5419, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4390, "src": "15073:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15063:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5421, "nodeType": "ExpressionStatement", "src": "15063:24:16"}, {"id": 5452, "nodeType": "Block", "src": "15097:159:16", "statements": [{"assignments": [5423], "declarations": [{"constant": false, "id": 5423, "mutability": "mutable", "name": "argptr", "nameLocation": "15119:6:16", "nodeType": "VariableDeclaration", "scope": 5452, "src": "15111:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5422, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15111:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5425, "initialValue": {"hexValue": "38", "id": 5424, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15128:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "nodeType": "VariableDeclarationStatement", "src": "15111:18:16"}, {"body": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 5436, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5331, "src": "15197:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5438, "indexExpression": {"id": 5437, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5427, "src": "15207:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15197:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 5439, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15213:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15197:17:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5450, "nodeType": "IfStatement", "src": "15193:52:16", "trueBody": {"expression": {"id": 5448, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5441, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "15216:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5444, "indexExpression": {"id": 5443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "15221:8:16", "subExpression": {"id": 5442, "name": "argptr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5423, "src": "15221:6:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15216:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 5445, "name": "delivery_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5331, "src": "15233:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5447, "indexExpression": {"id": 5446, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5427, "src": "15243:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15233:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15216:29:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5449, "nodeType": "ExpressionStatement", "src": "15216:29:16"}}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5430, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5427, "src": "15163:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 5431, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5342, "src": "15167:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15163:7:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5451, "initializationExpression": {"assignments": [5427], "declarations": [{"constant": false, "id": 5427, "mutability": "mutable", "name": "i", "nameLocation": "15156:1:16", "nodeType": "VariableDeclaration", "scope": 5451, "src": "15148:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5426, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15148:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5429, "initialValue": {"hexValue": "30", "id": 5428, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15160:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "15148:13:16"}, "loopExpression": {"expression": {"id": 5434, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "15172:3:16", "subExpression": {"id": 5433, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5427, "src": "15172:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5435, "nodeType": "ExpressionStatement", "src": "15172:3:16"}, "nodeType": "ForStatement", "src": "15143:102:16"}]}, {"assignments": [5454, null], "declarations": [{"constant": false, "id": 5454, "mutability": "mutable", "name": "_result", "nameLocation": "15271:7:16", "nodeType": "VariableDeclaration", "scope": 5493, "src": "15266:12:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 5453, "name": "bool", "nodeType": "ElementaryTypeName", "src": "15266:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 5488, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"hexValue": "645f7365617263684328627974657333322c627974657333322c75696e743235365b5d29", "id": 5465, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "15381:38:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0a3550aabeea45f9d515c45ea5dadcd6efbe5a3c73ab07644f630de564c6515a", "typeString": "literal_string \"d_searchC(bytes32,bytes32,uint256[])\""}, "value": "d_searchC(bytes32,bytes32,uint256[])"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_0a3550aabeea45f9d515c45ea5dadcd6efbe5a3c73ab07644f630de564c6515a", "typeString": "literal_string \"d_searchC(bytes32,bytes32,uint256[])\""}], "id": 5464, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "15371:9:16", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 5466, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15371:49:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 5463, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15364:6:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)"}, "typeName": {"id": 5462, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "15364:6:16", "typeDescriptions": {}}}, "id": 5467, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15364:57:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"arguments": [{"id": 5470, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "15447:4:16", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketSearch_$6563", "typeString": "contract MarketSearch"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MarketSearch_$6563", "typeString": "contract MarketSearch"}], "id": 5469, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15439:7:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5468, "name": "address", "nodeType": "ElementaryTypeName", "src": "15439:7:16", "typeDescriptions": {}}}, "id": 5471, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15439:13:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5472, "name": "fromcurrency_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5323, "src": "15470:13:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5473, "name": "tocurrency_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5325, "src": "15501:11:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"commonType": {"typeIdentifier": "t_rational_96_by_1", "typeString": "int_const 96"}, "id": 5478, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3332", "id": 5476, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15538:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32"}, "value": "32"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "33", "id": 5477, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15543:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "15538:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_96_by_1", "typeString": "int_const 96"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_96_by_1", "typeString": "int_const 96"}], "id": 5475, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15530:7:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 5474, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15530:7:16", "typeDescriptions": {}}}, "id": 5479, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15530:15:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 5482, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "15571:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}, "id": 5483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "15571:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5481, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15563:7:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 5480, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15563:7:16", "typeDescriptions": {}}}, "id": 5484, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15563:20:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5485, "name": "args", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5358, "src": "15601:4:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_uint256_$40_memory_ptr", "typeString": "uint256[40] memory"}], "expression": {"id": 5460, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "15324:3:16", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 5461, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "src": "15324:22:16", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 5486, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15324:295:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"arguments": [{"id": 5457, "name": "MARKET", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2459, "src": "15292:6:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 5455, "name": "rep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9150, "src": "15284:3:16", "typeDescriptions": {"typeIdentifier": "t_contract$_Repository_$10018", "typeString": "contract Repository"}}, "id": 5456, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get", "nodeType": "MemberAccess", "referencedDeclaration": 9929, "src": "15284:7:16", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 5458, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15284:15:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 5459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "staticcall", "nodeType": "MemberAccess", "src": "15284:26:16", "typeDescriptions": {"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) view returns (bool,bytes memory)"}}, "id": 5487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15284:345:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "15265:364:16"}, {"expression": {"arguments": [{"id": 5490, "name": "_result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5454, "src": "15647:7:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 5489, "name": "_return", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9385, "src": "15639:7:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$__$", "typeString": "function (bool) view"}}, "id": 5491, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15639:16:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5492, "nodeType": "ExpressionStatement", "src": "15639:16:16"}]}, "functionSelector": "ccbd1637", "id": 5494, "implemented": true, "kind": "function", "modifiers": [], "name": "searchC", "nameLocation": "14378:7:16", "nodeType": "FunctionDefinition", "parameters": {"id": 5332, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5323, "mutability": "mutable", "name": "fromcurrency_", "nameLocation": "14403:13:16", "nodeType": "VariableDeclaration", "scope": 5494, "src": "14395:21:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5322, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14395:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5325, "mutability": "mutable", "name": "tocurrency_", "nameLocation": "14434:11:16", "nodeType": "VariableDeclaration", "scope": 5494, "src": "14426:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5324, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14426:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5328, "mutability": "mutable", "name": "args_", "nameLocation": "14479:5:16", "nodeType": "VariableDeclaration", "scope": 5494, "src": "14455:29:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_memory_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}, "typeName": {"id": 5327, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5326, "name": "SearchPublicArgs", "nodeType": "IdentifierPath", "referencedDeclaration": 4391, "src": "14455:16:16"}, "referencedDeclaration": 4391, "src": "14455:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchPublicArgs_$4391_storage_ptr", "typeString": "struct MarketSearch.SearchPublicArgs"}}, "visibility": "internal"}, {"constant": false, "id": 5331, "mutability": "mutable", "name": "delivery_", "nameLocation": "14511:9:16", "nodeType": "VariableDeclaration", "scope": 5494, "src": "14494:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5329, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14494:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5330, "nodeType": "ArrayTypeName", "src": "14494:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "14385:141:16"}, "returnParameters": {"id": 5340, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5335, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5494, "src": "14585:18:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet"}, "typeName": {"id": 5334, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5333, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "14585:11:16"}, "referencedDeclaration": 14109, "src": "14585:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "visibility": "internal"}, {"constant": false, "id": 5339, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5494, "src": "14604:17:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer[]"}, "typeName": {"baseType": {"id": 5337, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5336, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "14604:8:16"}, "referencedDeclaration": 14065, "src": "14604:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 5338, "nodeType": "ArrayTypeName", "src": "14604:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}, "visibility": "internal"}], "src": "14571:60:16"}, "scope": 6563, "src": "14369:1293:16", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 5937, "nodeType": "Block", "src": "15922:4584:16", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5517, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5514, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "15975:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "15975:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "32", "id": 5516, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15991:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "15975:17:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5f5f73656172636843466f6c6c6f775061746820706174685f2e6c656e6774683e3d32", "id": 5518, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "15994:37:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d0e7c20092fed669813e4f4f8e3e7928911e67f3a1e16f7b1efeba9bec7a867e", "typeString": "literal_string \"__searchCFollowPath path_.length>=2\""}, "value": "__searchCFollowPath path_.length>=2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d0e7c20092fed669813e4f4f8e3e7928911e67f3a1e16f7b1efeba9bec7a867e", "typeString": "literal_string \"__searchCFollowPath path_.length>=2\""}], "id": 5513, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "15967:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15967:65:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5520, "nodeType": "ExpressionStatement", "src": "15967:65:16"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 5530, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 5522, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16050:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5527, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5523, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16056:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16056:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 5525, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16071:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "16056:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16050:23:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 5528, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5500, "src": "16075:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5529, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "16075:16:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "16050:41:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5f5f73656172636843466f6c6c6f775061746820706174685f5b706174685f2e6c656e677468202d20315d3d3d7461726765745f2e63757272656e6379", "id": 5531, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16093:63:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_15714c424a89ffff54e489d29d6bc872a3b9f324d5098e3d5af85e6d62cbaf5f", "typeString": "literal_string \"__searchCFollowPath path_[path_.length - 1]==target_.currency\""}, "value": "__searchCFollowPath path_[path_.length - 1]==target_.currency"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_15714c424a89ffff54e489d29d6bc872a3b9f324d5098e3d5af85e6d62cbaf5f", "typeString": "literal_string \"__searchCFollowPath path_[path_.length - 1]==target_.currency\""}], "id": 5521, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "16042:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5532, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16042:115:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5533, "nodeType": "ExpressionStatement", "src": "16042:115:16"}, {"assignments": [5538], "declarations": [{"constant": false, "id": 5538, "mutability": "mutable", "name": "solutions", "nameLocation": "16186:9:16", "nodeType": "VariableDeclaration", "scope": 5937, "src": "16168:27:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 5536, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5535, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "16168:8:16"}, "referencedDeclaration": 14079, "src": "16168:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 5537, "nodeType": "ArrayTypeName", "src": "16168:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}], "id": 5539, "nodeType": "VariableDeclarationStatement", "src": "16168:27:16"}, {"assignments": [5542], "declarations": [{"constant": false, "id": 5542, "mutability": "mutable", "name": "desc", "nameLocation": "16228:4:16", "nodeType": "VariableDeclaration", "scope": 5937, "src": "16205:27:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc"}, "typeName": {"id": 5541, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5540, "name": "SolutionSetDesc", "nodeType": "IdentifierPath", "referencedDeclaration": 14095, "src": "16205:15:16"}, "referencedDeclaration": 14095, "src": "16205:15:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_storage_ptr", "typeString": "struct SolutionSetDesc"}}, "visibility": "internal"}], "id": 5543, "nodeType": "VariableDeclarationStatement", "src": "16205:27:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5544, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16259:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16259:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "32", "id": 5546, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16273:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "16259:15:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 5927, "nodeType": "Block", "src": "16718:3740:16", "statements": [{"assignments": [5590], "declarations": [{"constant": false, "id": 5590, "mutability": "mutable", "name": "total", "nameLocation": "16774:5:16", "nodeType": "VariableDeclaration", "scope": 5927, "src": "16766:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5589, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16766:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5593, "initialValue": {"expression": {"id": 5591, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5503, "src": "16782:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5592, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4369, "src": "16782:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16766:35:16"}, {"body": {"id": 5663, "nodeType": "Block", "src": "16890:700:16", "statements": [{"assignments": [5608], "declarations": [{"constant": false, "id": 5608, "mutability": "mutable", "name": "swapqty", "nameLocation": "16916:7:16", "nodeType": "VariableDeclaration", "scope": 5663, "src": "16908:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5607, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16908:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5609, "nodeType": "VariableDeclarationStatement", "src": "16908:15:16"}, {"expression": {"id": 5644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"id": 5610, "name": "swapqty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5608, "src": "16986:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, null], "id": 5611, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "16983:13:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$__$", "typeString": "tuple(,uint256,)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 5613, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "17029:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5617, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5614, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5595, "src": "17035:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 5615, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17039:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "17035:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17029:12:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"baseExpression": {"id": 5620, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "17117:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5622, "indexExpression": {"id": 5621, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5595, "src": "17123:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17117:8:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"hexValue": "30", "id": 5623, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17151:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 5624, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17178:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "66616c7365", "id": 5625, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17205:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "66616c7365", "id": 5626, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17236:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "30", "id": 5627, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17267:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"arguments": [{"hexValue": "30", "id": 5631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17308:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5630, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "17294:13:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 5628, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17298:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5629, "nodeType": "ArrayTypeName", "src": "17298:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 5632, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17294:16:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "expression": {"id": 5618, "name": "MarketSearch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6563, "src": "17063:12:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MarketSearch_$6563_$", "typeString": "type(contract MarketSearch)"}}, "id": 5619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SearchArgTarget", "nodeType": "MemberAccess", "referencedDeclaration": 4363, "src": "17063:28:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArgTarget_$4363_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArgTarget storage pointer)"}}, "id": 5633, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17063:289:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"arguments": [{"hexValue": "30", "id": 5636, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17397:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 5637, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17400:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 5638, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5590, "src": "17403:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 5639, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5503, "src": "17410:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5640, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "17410:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 5634, "name": "MarketSearch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6563, "src": "17374:12:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MarketSearch_$6563_$", "typeString": "type(contract MarketSearch)"}}, "id": 5635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SearchArg", "nodeType": "MemberAccess", "referencedDeclaration": 4374, "src": "17374:22:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArg_$4374_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArg storage pointer)"}}, "id": 5641, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17374:52:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"hexValue": "74727565", "id": 5642, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17448:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 5612, "name": "__search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "16999:8:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_bool_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (bytes32,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,bool) view returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 5643, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16999:471:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "src": "16983:487:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5645, "nodeType": "ExpressionStatement", "src": "16983:487:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5646, "name": "swapqty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5608, "src": "17492:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 5647, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17503:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "17492:12:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5651, "nodeType": "IfStatement", "src": "17488:29:16", "trueBody": {"expression": {"id": 5649, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5511, "src": "17513:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "functionReturnParameters": 5512, "id": 5650, "nodeType": "Return", "src": "17506:11:16"}}, {"expression": {"id": 5661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5652, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5590, "src": "17535:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5660, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5653, "name": "swapqty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5608, "src": "17543:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"baseExpression": {"id": 5656, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "17566:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5658, "indexExpression": {"id": 5657, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5595, "src": "17572:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17566:8:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 5654, "name": "remainer_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5507, "src": "17552:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "id": 5655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get", "nodeType": "MemberAccess", "referencedDeclaration": 14323, "src": "17552:13:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Remainer memory[] memory,bytes32) pure returns (uint256)"}}, "id": 5659, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17552:23:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "17543:32:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "17535:40:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5662, "nodeType": "ExpressionStatement", "src": "17535:40:16"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5598, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5595, "src": "16863:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5599, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16867:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16867:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 5601, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16882:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "16867:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16863:20:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5664, "initializationExpression": {"assignments": [5595], "declarations": [{"constant": false, "id": 5595, "mutability": "mutable", "name": "i", "nameLocation": "16856:1:16", "nodeType": "VariableDeclaration", "scope": 5664, "src": "16848:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5594, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16848:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5597, "initialValue": {"hexValue": "31", "id": 5596, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16860:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "nodeType": "VariableDeclarationStatement", "src": "16848:13:16"}, "loopExpression": {"expression": {"id": 5605, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "16885:3:16", "subExpression": {"id": 5604, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5595, "src": "16885:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5606, "nodeType": "ExpressionStatement", "src": "16885:3:16"}, "nodeType": "ForStatement", "src": "16843:747:16"}, {"id": 5691, "nodeType": "Block", "src": "17717:270:16", "statements": [{"expression": {"id": 5689, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5665, "name": "solutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "17736:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, {"expression": {"id": 5666, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "17747:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5667, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "17747:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 5668, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "17757:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5669, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "17757:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}], "id": 5670, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "17735:33:16", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 5672, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "17801:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5677, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5673, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "17807:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5674, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "17807:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "32", "id": 5675, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17822:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "17807:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17801:23:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5678, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5500, "src": "17846:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"arguments": [{"hexValue": "30", "id": 5681, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17898:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 5682, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17901:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 5683, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5590, "src": "17904:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 5684, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5503, "src": "17911:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5685, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "17911:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 5679, "name": "MarketSearch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6563, "src": "17875:12:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MarketSearch_$6563_$", "typeString": "type(contract MarketSearch)"}}, "id": 5680, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SearchArg", "nodeType": "MemberAccess", "referencedDeclaration": 4374, "src": "17875:22:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArg_$4374_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArg storage pointer)"}}, "id": 5686, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17875:52:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"hexValue": "66616c7365", "id": 5687, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17949:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 5671, "name": "__search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "17771:8:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_bool_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (bytes32,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,bool) view returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 5688, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17771:201:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "src": "17735:237:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5690, "nodeType": "ExpressionStatement", "src": "17735:237:16"}]}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5695, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5692, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "18004:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5693, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "18004:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 5694, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18016:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "18004:13:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5698, "nodeType": "IfStatement", "src": "18000:30:16", "trueBody": {"expression": {"id": 5696, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5511, "src": "18026:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "functionReturnParameters": 5512, "id": 5697, "nodeType": "Return", "src": "18019:11:16"}}, {"id": 5720, "nodeType": "Block", "src": "18072:209:16", "statements": [{"expression": {"id": 5704, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 5699, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "18090:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5701, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "count", "nodeType": "MemberAccess", "referencedDeclaration": 14091, "src": "18090:10:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5702, "name": "solutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "18103:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5703, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "18103:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18090:29:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5705, "nodeType": "ExpressionStatement", "src": "18090:29:16"}, {"expression": {"id": 5718, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5706, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "18137:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 5709, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "18187:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5714, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5710, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "18193:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "18193:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "32", "id": 5712, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18208:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "18193:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18187:23:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 5715, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5500, "src": "18232:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5716, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "18232:16:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 5707, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "18144:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5708, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descCreateFromTo", "nodeType": "MemberAccess", "referencedDeclaration": 14709, "src": "18144:21:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$bound_to$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$", "typeString": "function (struct SolutionSetDesc memory,bytes32,bytes32) pure returns (struct SolutionSetDesc memory)"}}, "id": 5717, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18144:122:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "src": "18137:129:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5719, "nodeType": "ExpressionStatement", "src": "18137:129:16"}]}, {"expression": {"id": 5733, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5721, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5590, "src": "18324:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5727, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5722, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "18333:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5723, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "18333:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"expression": {"id": 5724, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "18342:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5725, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "18342:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5726, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quoteavg", "nodeType": "MemberAccess", "referencedDeclaration": 14057, "src": "18342:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18333:28:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5728, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18332:30:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 5731, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 5729, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18365:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 5730, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18369:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "18365:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "18332:39:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18324:47:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5734, "nodeType": "ExpressionStatement", "src": "18324:47:16"}, {"body": {"id": 5925, "nodeType": "Block", "src": "18446:1973:16", "statements": [{"assignments": [5752], "declarations": [{"constant": false, "id": 5752, "mutability": "mutable", "name": "swapsolutions", "nameLocation": "18482:13:16", "nodeType": "VariableDeclaration", "scope": 5925, "src": "18464:31:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution[]"}, "typeName": {"baseType": {"id": 5750, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5749, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "18464:8:16"}, "referencedDeclaration": 14079, "src": "18464:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 5751, "nodeType": "ArrayTypeName", "src": "18464:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}, "visibility": "internal"}], "id": 5753, "nodeType": "VariableDeclarationStatement", "src": "18464:31:16"}, {"assignments": [5756], "declarations": [{"constant": false, "id": 5756, "mutability": "mutable", "name": "swapdesc", "nameLocation": "18536:8:16", "nodeType": "VariableDeclaration", "scope": 5925, "src": "18513:31:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc"}, "typeName": {"id": 5755, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5754, "name": "SolutionSetDesc", "nodeType": "IdentifierPath", "referencedDeclaration": 14095, "src": "18513:15:16"}, "referencedDeclaration": 14095, "src": "18513:15:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_storage_ptr", "typeString": "struct SolutionSetDesc"}}, "visibility": "internal"}], "id": 5757, "nodeType": "VariableDeclarationStatement", "src": "18513:31:16"}, {"id": 5823, "nodeType": "Block", "src": "18562:1320:16", "statements": [{"assignments": [5762], "declarations": [{"constant": false, "id": 5762, "mutability": "mutable", "name": "target", "nameLocation": "18620:6:16", "nodeType": "VariableDeclaration", "scope": 5823, "src": "18584:42:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}, "typeName": {"id": 5761, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5760, "name": "MarketSearch.SearchArgTarget", "nodeType": "IdentifierPath", "referencedDeclaration": 4363, "src": "18584:28:16"}, "referencedDeclaration": 4363, "src": "18584:28:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_storage_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}}, "visibility": "internal"}], "id": 5763, "nodeType": "VariableDeclarationStatement", "src": "18584:42:16"}, {"assignments": [5768], "declarations": [{"constant": false, "id": 5768, "mutability": "mutable", "name": "search", "nameLocation": "18678:6:16", "nodeType": "VariableDeclaration", "scope": 5823, "src": "18648:36:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg"}, "typeName": {"id": 5767, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5766, "name": "MarketSearch.SearchArg", "nodeType": "IdentifierPath", "referencedDeclaration": 4374, "src": "18648:22:16"}, "referencedDeclaration": 4374, "src": "18648:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_storage_ptr", "typeString": "struct MarketSearch.SearchArg"}}, "visibility": "internal"}], "id": 5769, "nodeType": "VariableDeclarationStatement", "src": "18648:36:16"}, {"id": 5804, "nodeType": "Block", "src": "18706:900:16", "statements": [{"expression": {"id": 5776, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 5770, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5762, "src": "19191:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5772, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "19191:15:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 5773, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "19209:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5775, "indexExpression": {"id": 5774, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5736, "src": "19215:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19209:8:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "19191:26:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 5777, "nodeType": "ExpressionStatement", "src": "19191:26:16"}, {"expression": {"id": 5789, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 5778, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5762, "src": "19243:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5780, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "19243:10:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5781, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5590, "src": "19256:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [{"baseExpression": {"id": 5784, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "19278:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5786, "indexExpression": {"id": 5785, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5736, "src": "19284:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19278:8:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 5782, "name": "remainer_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5507, "src": "19264:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "id": 5783, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get", "nodeType": "MemberAccess", "referencedDeclaration": 14323, "src": "19264:13:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Remainer memory[] memory,bytes32) pure returns (uint256)"}}, "id": 5787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19264:23:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19256:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19243:44:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5790, "nodeType": "ExpressionStatement", "src": "19243:44:16"}, {"expression": {"id": 5795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 5791, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5762, "src": "19421:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5793, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qtyismin", "nodeType": "MemberAccess", "referencedDeclaration": 4355, "src": "19421:15:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 5794, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19439:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "19421:22:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5796, "nodeType": "ExpressionStatement", "src": "19421:22:16"}, {"expression": {"id": 5802, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 5797, "name": "search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5768, "src": "19554:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5799, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "19554:11:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5800, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5503, "src": "19568:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 5801, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "19568:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "src": "19554:29:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5803, "nodeType": "ExpressionStatement", "src": "19554:29:16"}]}, {"expression": {"id": 5821, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5805, "name": "swapsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5752, "src": "19653:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, {"expression": {"id": 5806, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "19668:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5807, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "19668:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 5808, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "19682:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5809, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "19682:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}], "id": 5810, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19652:45:16", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 5812, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "19734:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5816, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5815, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5813, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5736, "src": "19740:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 5814, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19744:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "19740:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19734:12:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5817, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5762, "src": "19772:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"id": 5818, "name": "search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5768, "src": "19804:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"hexValue": "66616c7365", "id": 5819, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19836:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 5811, "name": "__search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "19700:8:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_bool_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (bytes32,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,bool) view returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 5820, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19700:163:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "src": "19652:211:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5822, "nodeType": "ExpressionStatement", "src": "19652:211:16"}]}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5824, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "19903:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5825, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "19903:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 5826, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19919:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "19903:17:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5830, "nodeType": "IfStatement", "src": "19899:34:16", "trueBody": {"expression": {"id": 5828, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5511, "src": "19929:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "functionReturnParameters": 5512, "id": 5829, "nodeType": "Return", "src": "19922:11:16"}}, {"expression": {"id": 5843, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5831, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5590, "src": "19951:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5842, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5837, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5832, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "19960:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5833, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "19960:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"expression": {"id": 5834, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "19973:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5835, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "19973:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5836, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quoteavg", "nodeType": "MemberAccess", "referencedDeclaration": 14057, "src": "19973:23:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19960:36:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5838, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "19959:38:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 5841, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 5839, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20000:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 5840, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20004:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "20000:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "19959:47:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19951:55:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5844, "nodeType": "ExpressionStatement", "src": "19951:55:16"}, {"expression": {"id": 5858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5845, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20027:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, {"id": 5846, "name": "solutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "20033:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "id": 5847, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20026:17:16", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(struct SolutionSetDesc memory,struct Solution memory[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5850, "name": "solutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "20065:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, {"baseExpression": {"id": 5851, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "20075:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5855, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5854, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5852, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5736, "src": "20081:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 5853, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20085:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "20081:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20075:12:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5856, "name": "swapsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5752, "src": "20088:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 5848, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20046:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5849, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descAddOffset", "nodeType": "MemberAccess", "referencedDeclaration": 14665, "src": "20046:18:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$bound_to$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$", "typeString": "function (struct SolutionSetDesc memory,struct Solution memory[] memory,bytes32,struct Solution memory[] memory) pure returns (struct SolutionSetDesc memory,struct Solution memory[] memory)"}}, "id": 5857, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20046:56:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(struct SolutionSetDesc memory,struct Solution memory[] memory)"}}, "src": "20026:76:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5859, "nodeType": "ExpressionStatement", "src": "20026:76:16"}, {"expression": {"id": 5877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"expression": {"id": 5860, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20120:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5863, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20120:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5864, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quotemin", "nodeType": "MemberAccess", "referencedDeclaration": 14055, "src": "20120:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5871, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"id": 5865, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20143:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5866, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20143:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5867, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemin", "nodeType": "MemberAccess", "referencedDeclaration": 14055, "src": "20143:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"expression": {"id": 5868, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "20163:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5869, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20163:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5870, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemin", "nodeType": "MemberAccess", "referencedDeclaration": 14055, "src": "20163:23:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20143:43:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5872, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20142:45:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 5875, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 5873, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20188:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 5874, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20192:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "20188:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "20142:52:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20120:74:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5878, "nodeType": "ExpressionStatement", "src": "20120:74:16"}, {"expression": {"id": 5896, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"expression": {"id": 5879, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20212:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5882, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20212:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5883, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quotemax", "nodeType": "MemberAccess", "referencedDeclaration": 14059, "src": "20212:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5895, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5890, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"id": 5884, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20235:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5885, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20235:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5886, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemax", "nodeType": "MemberAccess", "referencedDeclaration": 14059, "src": "20235:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"expression": {"id": 5887, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "20255:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5888, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20255:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5889, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemax", "nodeType": "MemberAccess", "referencedDeclaration": 14059, "src": "20255:23:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20235:43:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5891, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20234:45:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 5894, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 5892, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20280:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 5893, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20284:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "20280:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "20234:52:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20212:74:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5897, "nodeType": "ExpressionStatement", "src": "20212:74:16"}, {"expression": {"id": 5923, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"expression": {"id": 5898, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20304:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5901, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20304:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5902, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quoteavg", "nodeType": "MemberAccess", "referencedDeclaration": 14057, "src": "20304:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5922, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5917, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"id": 5903, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20327:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5904, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20327:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5905, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quoteavg", "nodeType": "MemberAccess", "referencedDeclaration": 14057, "src": "20327:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5915, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5911, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5906, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "20349:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5907, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "20349:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"expression": {"id": 5908, "name": "swapdesc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5756, "src": "20362:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5909, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "20362:14:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 5910, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quoteavg", "nodeType": "MemberAccess", "referencedDeclaration": 14057, "src": "20362:23:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20349:36:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5912, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20348:38:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"expression": {"id": 5913, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20387:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5914, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "20387:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20348:47:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5916, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20347:49:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20327:69:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5918, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20326:71:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 5921, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 5919, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20398:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 5920, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20402:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "20398:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "20326:78:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20304:100:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5924, "nodeType": "ExpressionStatement", "src": "20304:100:16"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5742, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5736, "src": "18421:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 5743, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18424:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "18421:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5926, "initializationExpression": {"assignments": [5736], "declarations": [{"constant": false, "id": 5736, "mutability": "mutable", "name": "i", "nameLocation": "18399:1:16", "nodeType": "VariableDeclaration", "scope": 5926, "src": "18391:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5735, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18391:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5741, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5740, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5737, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "18403:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "18403:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "32", "id": 5739, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18418:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "18403:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18391:28:16"}, "loopExpression": {"expression": {"id": 5746, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": false, "src": "18428:3:16", "subExpression": {"id": 5745, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5736, "src": "18428:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5747, "nodeType": "ExpressionStatement", "src": "18428:3:16"}, "nodeType": "ForStatement", "src": "18386:2033:16"}]}, "id": 5928, "nodeType": "IfStatement", "src": "16255:4203:16", "trueBody": {"id": 5588, "nodeType": "Block", "src": "16284:412:16", "statements": [{"expression": {"id": 5565, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5548, "name": "solutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "16337:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, {"expression": {"id": 5549, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "16348:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5550, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "16348:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 5551, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "16358:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5552, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "16358:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}], "id": 5553, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "16336:33:16", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 5555, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16398:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5560, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5556, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16404:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16404:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "32", "id": 5558, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16419:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "16404:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16398:23:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5561, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5500, "src": "16439:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"id": 5562, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5503, "src": "16464:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"hexValue": "66616c7365", "id": 5563, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "16492:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 5554, "name": "__search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "16372:8:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_bool_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (bytes32,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,bool) view returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 5564, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16372:139:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "src": "16336:175:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5566, "nodeType": "ExpressionStatement", "src": "16336:175:16"}, {"expression": {"id": 5572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 5567, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "16525:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5569, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "count", "nodeType": "MemberAccess", "referencedDeclaration": 14091, "src": "16525:10:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 5570, "name": "solutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "16538:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 5571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16538:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16525:29:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5573, "nodeType": "ExpressionStatement", "src": "16525:29:16"}, {"expression": {"id": 5586, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5574, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "16568:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 5577, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16614:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5582, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5578, "name": "path_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5497, "src": "16620:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 5579, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16620:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "32", "id": 5580, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16635:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "16620:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16614:23:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 5583, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5500, "src": "16655:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5584, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "16655:16:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 5575, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "16575:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5576, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descCreateFromTo", "nodeType": "MemberAccess", "referencedDeclaration": 14709, "src": "16575:21:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$bound_to$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$", "typeString": "function (struct SolutionSetDesc memory,bytes32,bytes32) pure returns (struct SolutionSetDesc memory)"}}, "id": 5585, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16575:110:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "src": "16568:117:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 5587, "nodeType": "ExpressionStatement", "src": "16568:117:16"}]}}, {"expression": {"id": 5935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5929, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5511, "src": "20467:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5932, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "20483:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, {"id": 5933, "name": "solutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "20489:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 5930, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5511, "src": "20474:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 5931, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 16359, "src": "20474:8:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_SolutionSet_$14109_memory_ptr_$bound_to$_t_struct$_SolutionSet_$14109_memory_ptr_$", "typeString": "function (struct SolutionSet memory,struct SolutionSetDesc memory,struct Solution memory[] memory) pure returns (struct SolutionSet memory)"}}, "id": 5934, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20474:25:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "src": "20467:32:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 5936, "nodeType": "ExpressionStatement", "src": "20467:32:16"}]}, "id": 5938, "implemented": true, "kind": "function", "modifiers": [], "name": "__searchCFollowPath", "nameLocation": "15677:19:16", "nodeType": "FunctionDefinition", "parameters": {"id": 5508, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5497, "mutability": "mutable", "name": "path_", "nameLocation": "15723:5:16", "nodeType": "VariableDeclaration", "scope": 5938, "src": "15706:22:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 5495, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "15706:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 5496, "nodeType": "ArrayTypeName", "src": "15706:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}, {"constant": false, "id": 5500, "mutability": "mutable", "name": "target_", "nameLocation": "15774:7:16", "nodeType": "VariableDeclaration", "scope": 5938, "src": "15738:43:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}, "typeName": {"id": 5499, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5498, "name": "MarketSearch.SearchArgTarget", "nodeType": "IdentifierPath", "referencedDeclaration": 4363, "src": "15738:28:16"}, "referencedDeclaration": 4363, "src": "15738:28:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_storage_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}}, "visibility": "internal"}, {"constant": false, "id": 5503, "mutability": "mutable", "name": "searcharg_", "nameLocation": "15821:10:16", "nodeType": "VariableDeclaration", "scope": 5938, "src": "15791:40:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg"}, "typeName": {"id": 5502, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5501, "name": "MarketSearch.SearchArg", "nodeType": "IdentifierPath", "referencedDeclaration": 4374, "src": "15791:22:16"}, "referencedDeclaration": 4374, "src": "15791:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_storage_ptr", "typeString": "struct MarketSearch.SearchArg"}}, "visibility": "internal"}, {"constant": false, "id": 5507, "mutability": "mutable", "name": "remainer_", "nameLocation": "15859:9:16", "nodeType": "VariableDeclaration", "scope": 5938, "src": "15841:27:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer[]"}, "typeName": {"baseType": {"id": 5505, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5504, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "15841:8:16"}, "referencedDeclaration": 14065, "src": "15841:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 5506, "nodeType": "ArrayTypeName", "src": "15841:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}, "visibility": "internal"}], "src": "15696:178:16"}, "returnParameters": {"id": 5512, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5511, "mutability": "mutable", "name": "out_", "nameLocation": "15916:4:16", "nodeType": "VariableDeclaration", "scope": 5938, "src": "15897:23:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet"}, "typeName": {"id": 5510, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5509, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "15897:11:16"}, "referencedDeclaration": 14109, "src": "15897:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "visibility": "internal"}], "src": "15896:25:16"}, "scope": 6563, "src": "15668:4838:16", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 6561, "nodeType": "Block", "src": "20778:6057:16", "statements": [{"expression": {"id": 5962, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5960, "name": "remainerout_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5958, "src": "20788:12:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5961, "name": "remainer_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5950, "src": "20803:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "src": "20788:24:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "id": 5963, "nodeType": "ExpressionStatement", "src": "20788:24:16"}, {"assignments": [5966], "declarations": [{"constant": false, "id": 5966, "mutability": "mutable", "name": "solpath", "nameLocation": "20841:7:16", "nodeType": "VariableDeclaration", "scope": 6561, "src": "20822:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet"}, "typeName": {"id": 5965, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5964, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "20822:11:16"}, "referencedDeclaration": 14109, "src": "20822:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "visibility": "internal"}], "id": 5967, "nodeType": "VariableDeclarationStatement", "src": "20822:26:16"}, {"id": 6057, "nodeType": "Block", "src": "20858:621:16", "statements": [{"assignments": [5973], "declarations": [{"constant": false, "id": 5973, "mutability": "mutable", "name": "paths", "nameLocation": "20891:5:16", "nodeType": "VariableDeclaration", "scope": 6057, "src": "20872:24:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_memory_ptr_$dyn_memory_ptr", "typeString": "bytes32[][]"}, "typeName": {"baseType": {"baseType": {"id": 5970, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "20872:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 5971, "nodeType": "ArrayTypeName", "src": "20872:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "id": 5972, "nodeType": "ArrayTypeName", "src": "20872:11:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_ptr", "typeString": "bytes32[][]"}}, "visibility": "internal"}], "id": 5979, "initialValue": {"arguments": [{"id": 5975, "name": "from_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5940, "src": "20909:5:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 5976, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "20916:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 5977, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "20916:16:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 5974, "name": "_listPath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16685, "src": "20899:9:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_array$_t_array$_t_bytes32_$dyn_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (bytes32,bytes32) view returns (bytes32[] memory[] memory)"}}, "id": 5978, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20899:34:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_memory_ptr_$dyn_memory_ptr", "typeString": "bytes32[] memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "20872:61:16"}, {"assignments": [5981], "declarations": [{"constant": false, "id": 5981, "mutability": "mutable", "name": "len", "nameLocation": "20952:3:16", "nodeType": "VariableDeclaration", "scope": 6057, "src": "20947:8:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5980, "name": "uint", "nodeType": "ElementaryTypeName", "src": "20947:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5984, "initialValue": {"expression": {"id": 5982, "name": "paths", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5973, "src": "20958:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_memory_ptr_$dyn_memory_ptr", "typeString": "bytes32[] memory[] memory"}}, "id": 5983, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "20958:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "20947:23:16"}, {"body": {"id": 6055, "nodeType": "Block", "src": "21014:455:16", "statements": [{"assignments": [5996], "declarations": [{"constant": false, "id": 5996, "mutability": "mutable", "name": "desc", "nameLocation": "21055:4:16", "nodeType": "VariableDeclaration", "scope": 6055, "src": "21032:27:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc"}, "typeName": {"id": 5995, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5994, "name": "SolutionSetDesc", "nodeType": "IdentifierPath", "referencedDeclaration": 14095, "src": "21032:15:16"}, "referencedDeclaration": 14095, "src": "21032:15:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_storage_ptr", "typeString": "struct SolutionSetDesc"}}, "visibility": "internal"}], "id": 5997, "nodeType": "VariableDeclarationStatement", "src": "21032:27:16"}, {"expression": {"id": 6026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"expression": {"id": 5998, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5996, "src": "21080:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6000, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "21080:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 6001, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5996, "src": "21090:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6002, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14087, "src": "21090:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}], "id": 6003, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21077:24:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(,uint256,struct Quote memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"baseExpression": {"id": 6005, "name": "paths", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5973, "src": "21134:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_memory_ptr_$dyn_memory_ptr", "typeString": "bytes32[] memory[] memory"}}, "id": 6007, "indexExpression": {"id": 6006, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5986, "src": "21140:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21134:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 6014, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6013, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 6008, "name": "paths", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5973, "src": "21143:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_memory_ptr_$dyn_memory_ptr", "typeString": "bytes32[] memory[] memory"}}, "id": 6010, "indexExpression": {"id": 6009, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5986, "src": "21149:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21143:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 6011, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "21143:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "32", "id": 6012, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21161:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "21143:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21134:29:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 6015, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "21185:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"arguments": [{"hexValue": "30", "id": 6018, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21237:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 6019, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21240:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 6020, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21243:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"expression": {"id": 6021, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "21246:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6022, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "21246:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 6016, "name": "MarketSearch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6563, "src": "21214:12:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MarketSearch_$6563_$", "typeString": "type(contract MarketSearch)"}}, "id": 6017, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SearchArg", "nodeType": "MemberAccess", "referencedDeclaration": 4374, "src": "21214:22:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_SearchArg_$4374_storage_ptr_$", "typeString": "type(struct MarketSearch.SearchArg storage pointer)"}}, "id": 6023, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21214:48:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"hexValue": "66616c7365", "id": 6024, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "21284:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 6004, "name": "__search", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "21104:8:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_bool_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "function (bytes32,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,bool) view returns (struct Solution memory[] memory,uint256,struct Quote memory)"}}, "id": 6025, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21104:203:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Quote_$14060_memory_ptr_$", "typeString": "tuple(struct Solution memory[] memory,uint256,struct Quote memory)"}}, "src": "21077:230:16", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6027, "nodeType": "ExpressionStatement", "src": "21077:230:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6031, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6028, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5996, "src": "21329:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6029, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14084, "src": "21329:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 6030, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21341:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21329:13:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6033, "nodeType": "IfStatement", "src": "21325:27:16", "trueBody": {"id": 6032, "nodeType": "Continue", "src": "21344:8:16"}}, {"expression": {"id": 6040, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6034, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5996, "src": "21370:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6036, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "path", "nodeType": "MemberAccess", "referencedDeclaration": 14082, "src": "21370:9:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 6037, "name": "paths", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5973, "src": "21382:5:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_memory_ptr_$dyn_memory_ptr", "typeString": "bytes32[] memory[] memory"}}, "id": 6039, "indexExpression": {"id": 6038, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5986, "src": "21388:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21382:8:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "src": "21370:20:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 6041, "nodeType": "ExpressionStatement", "src": "21370:20:16"}, {"expression": {"id": 6053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6042, "name": "solpath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5966, "src": "21408:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 6045, "name": "desc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5996, "src": "21430:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, {"arguments": [{"hexValue": "30", "id": 6050, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21451:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 6049, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "21436:14:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Solution memory[] memory)"}, "typeName": {"baseType": {"id": 6047, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 6046, "name": "Solution", "nodeType": "IdentifierPath", "referencedDeclaration": 14079, "src": "21440:8:16"}, "referencedDeclaration": 14079, "src": "21440:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Solution_$14079_storage_ptr", "typeString": "struct Solution"}}, "id": 6048, "nodeType": "ArrayTypeName", "src": "21440:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_storage_$dyn_storage_ptr", "typeString": "struct Solution[]"}}}, "id": 6051, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21436:17:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 6043, "name": "solpath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5966, "src": "21418:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6044, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 16359, "src": "21418:11:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_SolutionSet_$14109_memory_ptr_$bound_to$_t_struct$_SolutionSet_$14109_memory_ptr_$", "typeString": "function (struct SolutionSet memory,struct SolutionSetDesc memory,struct Solution memory[] memory) pure returns (struct SolutionSet memory)"}}, "id": 6052, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21418:36:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "src": "21408:46:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6054, "nodeType": "ExpressionStatement", "src": "21408:46:16"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5990, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5988, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5986, "src": "21000:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 5989, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5981, "src": "21004:3:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21000:7:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6056, "initializationExpression": {"assignments": [5986], "declarations": [{"constant": false, "id": 5986, "mutability": "mutable", "name": "i", "nameLocation": "20997:1:16", "nodeType": "VariableDeclaration", "scope": 6056, "src": "20989:9:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5985, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20989:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5987, "nodeType": "VariableDeclarationStatement", "src": "20989:9:16"}, "loopExpression": {"expression": {"id": 5992, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "21009:3:16", "subExpression": {"id": 5991, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5986, "src": "21009:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5993, "nodeType": "ExpressionStatement", "src": "21009:3:16"}, "nodeType": "ForStatement", "src": "20984:485:16"}]}, {"assignments": [6059], "declarations": [{"constant": false, "id": 6059, "mutability": "mutable", "name": "pathlen", "nameLocation": "21493:7:16", "nodeType": "VariableDeclaration", "scope": 6561, "src": "21488:12:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6058, "name": "uint", "nodeType": "ElementaryTypeName", "src": "21488:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6063, "initialValue": {"expression": {"expression": {"id": 6060, "name": "solpath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5966, "src": "21503:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6061, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "21503:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6062, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "21503:20:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21488:35:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6066, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6064, "name": "pathlen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6059, "src": "21537:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 6065, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21546:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21537:10:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6071, "nodeType": "IfStatement", "src": "21533:54:16", "trueBody": {"expression": {"components": [{"id": 6067, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5954, "src": "21569:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, {"id": 6068, "name": "remainerout_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5958, "src": "21574:12:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}], "id": 6069, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "21568:19:16", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(struct SolutionSet memory,struct Remainer memory[] memory)"}}, "functionReturnParameters": 5959, "id": 6070, "nodeType": "Return", "src": "21561:26:16"}}, {"assignments": [6074], "declarations": [{"constant": false, "id": 6074, "mutability": "mutable", "name": "target", "nameLocation": "21662:6:16", "nodeType": "VariableDeclaration", "scope": 6561, "src": "21639:29:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}, "typeName": {"id": 6073, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 6072, "name": "SearchArgTarget", "nodeType": "IdentifierPath", "referencedDeclaration": 4363, "src": "21639:15:16"}, "referencedDeclaration": 4363, "src": "21639:15:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_storage_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}}, "visibility": "internal"}], "id": 6075, "nodeType": "VariableDeclarationStatement", "src": "21639:29:16"}, {"id": 6125, "nodeType": "Block", "src": "21678:350:16", "statements": [{"expression": {"id": 6081, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6076, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "21692:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6078, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "21692:15:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6079, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "21710:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6080, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currency", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "21710:16:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "21692:34:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 6082, "nodeType": "ExpressionStatement", "src": "21692:34:16"}, {"expression": {"id": 6088, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6083, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "21740:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6085, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "mingranularity", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "21740:21:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6086, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "21764:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6087, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mingranularity", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "21764:22:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21740:46:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6089, "nodeType": "ExpressionStatement", "src": "21740:46:16"}, {"expression": {"id": 6095, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6090, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "21800:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6092, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "21800:10:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6093, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "21813:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6094, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "21813:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21800:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6096, "nodeType": "ExpressionStatement", "src": "21800:24:16"}, {"expression": {"id": 6102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6097, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "21838:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6099, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qtyismin", "nodeType": "MemberAccess", "referencedDeclaration": 4355, "src": "21838:15:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6100, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "21856:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6101, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qtyismin", "nodeType": "MemberAccess", "referencedDeclaration": 4355, "src": "21856:16:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "21838:34:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6103, "nodeType": "ExpressionStatement", "src": "21838:34:16"}, {"expression": {"id": 6109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6104, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "21886:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6106, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qtyismax", "nodeType": "MemberAccess", "referencedDeclaration": 4357, "src": "21886:15:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6107, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "21904:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6108, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qtyismax", "nodeType": "MemberAccess", "referencedDeclaration": 4357, "src": "21904:16:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "21886:34:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6110, "nodeType": "ExpressionStatement", "src": "21886:34:16"}, {"expression": {"id": 6116, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6111, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "21934:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6113, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "21934:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6114, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "21952:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6115, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "21952:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21934:34:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6117, "nodeType": "ExpressionStatement", "src": "21934:34:16"}, {"expression": {"id": 6123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6118, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "21983:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6120, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "delivery", "nodeType": "MemberAccess", "referencedDeclaration": 4362, "src": "21983:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6121, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "22001:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6122, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "delivery", "nodeType": "MemberAccess", "referencedDeclaration": 4362, "src": "22001:16:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "21983:34:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 6124, "nodeType": "ExpressionStatement", "src": "21983:34:16"}]}, {"assignments": [6128], "declarations": [{"constant": false, "id": 6128, "mutability": "mutable", "name": "searcharg", "nameLocation": "22054:9:16", "nodeType": "VariableDeclaration", "scope": 6561, "src": "22037:26:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg"}, "typeName": {"id": 6127, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 6126, "name": "SearchArg", "nodeType": "IdentifierPath", "referencedDeclaration": 4374, "src": "22037:9:16"}, "referencedDeclaration": 4374, "src": "22037:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_storage_ptr", "typeString": "struct MarketSearch.SearchArg"}}, "visibility": "internal"}], "id": 6129, "nodeType": "VariableDeclarationStatement", "src": "22037:26:16"}, {"id": 6158, "nodeType": "Block", "src": "22073:225:16", "statements": [{"expression": {"id": 6135, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6130, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "22087:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6132, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "22087:18:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6133, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "22108:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6134, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "22108:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22087:40:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6136, "nodeType": "ExpressionStatement", "src": "22087:40:16"}, {"expression": {"id": 6142, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6137, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "22141:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6139, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxavgquote", "nodeType": "MemberAccess", "referencedDeclaration": 4367, "src": "22141:21:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6140, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "22165:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6141, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxavgquote", "nodeType": "MemberAccess", "referencedDeclaration": 4367, "src": "22165:22:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22141:46:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6143, "nodeType": "ExpressionStatement", "src": "22141:46:16"}, {"expression": {"id": 6149, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6144, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "22201:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6146, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4369, "src": "22201:18:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6147, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "22222:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6148, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4369, "src": "22222:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22201:40:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6150, "nodeType": "ExpressionStatement", "src": "22201:40:16"}, {"expression": {"id": 6156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6151, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "22255:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6153, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "22255:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6154, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "22272:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6155, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "22272:15:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "src": "22255:32:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 6157, "nodeType": "ExpressionStatement", "src": "22255:32:16"}]}, {"assignments": [6163], "declarations": [{"constant": false, "id": 6163, "mutability": "mutable", "name": "pathsolutions", "nameLocation": "22328:13:16", "nodeType": "VariableDeclaration", "scope": 6561, "src": "22307:34:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet[]"}, "typeName": {"baseType": {"id": 6161, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 6160, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "22307:11:16"}, "referencedDeclaration": 14109, "src": "22307:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "id": 6162, "nodeType": "ArrayTypeName", "src": "22307:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_storage_$dyn_storage_ptr", "typeString": "struct SolutionSet[]"}}, "visibility": "internal"}], "id": 6170, "initialValue": {"arguments": [{"id": 6168, "name": "pathlen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6059, "src": "22362:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 6167, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "22344:17:16", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct SolutionSet memory[] memory)"}, "typeName": {"baseType": {"id": 6165, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 6164, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "22348:11:16"}, "referencedDeclaration": 14109, "src": "22348:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "id": 6166, "nodeType": "ArrayTypeName", "src": "22348:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_storage_$dyn_storage_ptr", "typeString": "struct SolutionSet[]"}}}, "id": 6169, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22344:26:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "22307:63:16"}, {"assignments": [6172], "declarations": [{"constant": false, "id": 6172, "mutability": "mutable", "name": "maxcount", "nameLocation": "22386:8:16", "nodeType": "VariableDeclaration", "scope": 6561, "src": "22381:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6171, "name": "uint", "nodeType": "ElementaryTypeName", "src": "22381:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6173, "nodeType": "VariableDeclarationStatement", "src": "22381:13:16"}, {"body": {"id": 6559, "nodeType": "Block", "src": "22425:4402:16", "statements": [{"expression": {"id": 6180, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6175, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "22439:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6177, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "22439:18:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6178, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "22460:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6179, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "22460:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22439:40:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6181, "nodeType": "ExpressionStatement", "src": "22439:40:16"}, {"expression": {"id": 6186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6182, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "22493:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6184, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "22493:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "31", "id": 6185, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22511:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "22493:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6187, "nodeType": "ExpressionStatement", "src": "22493:19:16"}, {"body": {"id": 6223, "nodeType": "Block", "src": "22557:340:16", "statements": [{"expression": {"id": 6210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 6197, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "22575:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6199, "indexExpression": {"id": 6198, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6189, "src": "22589:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22575:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"baseExpression": {"expression": {"id": 6201, "name": "solpath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5966, "src": "22635:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6202, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "22635:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6204, "indexExpression": {"id": 6203, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6189, "src": "22649:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "22635:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6205, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "path", "nodeType": "MemberAccess", "referencedDeclaration": 14082, "src": "22635:21:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, {"id": 6206, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "22678:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"id": 6207, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "22706:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"id": 6208, "name": "remainerout_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5958, "src": "22737:12:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}], "id": 6200, "name": "__searchCFollowPath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5938, "src": "22594:19:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_SolutionSet_$14109_memory_ptr_$", "typeString": "function (bytes32[] memory,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,struct Remainer memory[] memory) view returns (struct SolutionSet memory)"}}, "id": 6209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22594:173:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "src": "22575:192:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6211, "nodeType": "ExpressionStatement", "src": "22575:192:16"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"baseExpression": {"id": 6213, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "22793:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6215, "indexExpression": {"id": 6214, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6189, "src": "22807:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "22793:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6216, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "22793:22:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "22793:29:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "31", "id": 6218, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22824:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "22793:32:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "504152414e4f4941205f5f73656172636843466f6c6c6f77506174682073686f756c642072657475726e206d617820312064657363", "id": 6220, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "22826:55:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3a4ea3f34979c7a003229cc922754190da1e3532aaa3799899ac09949412b809", "typeString": "literal_string \"PARANOIA __searchCFollowPath should return max 1 desc\""}, "value": "PARANOIA __searchCFollowPath should return max 1 desc"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3a4ea3f34979c7a003229cc922754190da1e3532aaa3799899ac09949412b809", "typeString": "literal_string \"PARANOIA __searchCFollowPath should return max 1 desc\""}], "id": 6212, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "22785:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 6221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22785:97:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6222, "nodeType": "ExpressionStatement", "src": "22785:97:16"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6191, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6189, "src": "22539:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 6192, "name": "pathlen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6059, "src": "22543:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22539:11:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6224, "initializationExpression": {"assignments": [6189], "declarations": [{"constant": false, "id": 6189, "mutability": "mutable", "name": "i", "nameLocation": "22536:1:16", "nodeType": "VariableDeclaration", "scope": 6224, "src": "22531:6:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6188, "name": "uint", "nodeType": "ElementaryTypeName", "src": "22531:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6190, "nodeType": "VariableDeclarationStatement", "src": "22531:6:16"}, "loopExpression": {"expression": {"id": 6195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "22552:3:16", "subExpression": {"id": 6194, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6189, "src": "22552:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6196, "nodeType": "ExpressionStatement", "src": "22552:3:16"}, "nodeType": "ForStatement", "src": "22526:371:16"}, {"assignments": [6226], "declarations": [{"constant": false, "id": 6226, "mutability": "mutable", "name": "quotebest", "nameLocation": "22916:9:16", "nodeType": "VariableDeclaration", "scope": 6559, "src": "22911:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6225, "name": "uint", "nodeType": "ElementaryTypeName", "src": "22911:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6232, "initialValue": {"expression": {"arguments": [{"id": 6229, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22931:4:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 6228, "name": "uint", "nodeType": "ElementaryTypeName", "src": "22931:4:16", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 6227, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "22926:4:16", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 6230, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22926:10:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 6231, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "22926:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "22911:29:16"}, {"id": 6347, "nodeType": "Block", "src": "22954:1120:16", "statements": [{"assignments": [6234], "declarations": [{"constant": false, "id": 6234, "mutability": "mutable", "name": "quotemin", "nameLocation": "22980:8:16", "nodeType": "VariableDeclaration", "scope": 6347, "src": "22972:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6233, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22972:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6235, "nodeType": "VariableDeclarationStatement", "src": "22972:16:16"}, {"assignments": [6237], "declarations": [{"constant": false, "id": 6237, "mutability": "mutable", "name": "quotemax", "nameLocation": "23014:8:16", "nodeType": "VariableDeclaration", "scope": 6347, "src": "23006:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6236, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23006:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6238, "nodeType": "VariableDeclarationStatement", "src": "23006:16:16"}, {"body": {"id": 6329, "nodeType": "Block", "src": "23073:757:16", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6253, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 6248, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "23099:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6250, "indexExpression": {"id": 6249, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23113:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23099:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6251, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14097, "src": "23099:20:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 6252, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23121:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "23099:23:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6255, "nodeType": "IfStatement", "src": "23095:61:16", "trueBody": {"id": 6254, "nodeType": "Continue", "src": "23148:8:16"}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 6270, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6256, "name": "quotebest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6226, "src": "23203:9:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 6259, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23219:4:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 6258, "name": "uint", "nodeType": "ElementaryTypeName", "src": "23219:4:16", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 6257, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "23214:4:16", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 6260, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23214:10:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 6261, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "23214:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23203:25:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6263, "name": "quotemin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6234, "src": "23232:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"expression": {"baseExpression": {"id": 6264, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "23241:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6266, "indexExpression": {"id": 6265, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23255:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23241:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6267, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14100, "src": "23241:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 6268, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemin", "nodeType": "MemberAccess", "referencedDeclaration": 14055, "src": "23241:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23232:40:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "23203:69:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6312, "name": "quotemax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6237, "src": "23703:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"expression": {"baseExpression": {"id": 6313, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "23712:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6315, "indexExpression": {"id": 6314, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23726:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23712:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6316, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14100, "src": "23712:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 6317, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemin", "nodeType": "MemberAccess", "referencedDeclaration": 14055, "src": "23712:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23703:40:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6327, "nodeType": "IfStatement", "src": "23699:112:16", "trueBody": {"expression": {"id": 6325, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6319, "name": "quotemax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6237, "src": "23769:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"expression": {"baseExpression": {"id": 6320, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "23780:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6322, "indexExpression": {"id": 6321, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23794:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23780:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6323, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14100, "src": "23780:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 6324, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemin", "nodeType": "MemberAccess", "referencedDeclaration": 14055, "src": "23780:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23769:42:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6326, "nodeType": "ExpressionStatement", "src": "23769:42:16"}}, "id": 6328, "nodeType": "IfStatement", "src": "23199:612:16", "trueBody": {"id": 6311, "nodeType": "Block", "src": "23294:379:16", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 6285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6271, "name": "quotebest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6226, "src": "23324:9:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"arguments": [{"id": 6274, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23340:4:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 6273, "name": "uint", "nodeType": "ElementaryTypeName", "src": "23340:4:16", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 6272, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "23335:4:16", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 6275, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23335:10:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 6276, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "23335:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23324:25:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6278, "name": "quotemin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6234, "src": "23353:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"baseExpression": {"id": 6279, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "23362:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6281, "indexExpression": {"id": 6280, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23376:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23362:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6282, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14100, "src": "23362:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 6283, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemax", "nodeType": "MemberAccess", "referencedDeclaration": 14059, "src": "23362:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23353:40:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "23324:69:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"expression": {"id": 6296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6290, "name": "quotemax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6237, "src": "23501:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"expression": {"baseExpression": {"id": 6291, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "23512:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6293, "indexExpression": {"id": 6292, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23526:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23512:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6294, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14100, "src": "23512:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 6295, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemax", "nodeType": "MemberAccess", "referencedDeclaration": 14059, "src": "23512:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23501:42:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6297, "nodeType": "ExpressionStatement", "src": "23501:42:16"}, "id": 6298, "nodeType": "IfStatement", "src": "23320:223:16", "trueBody": {"expression": {"id": 6288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6286, "name": "quotemax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6237, "src": "23423:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 6287, "name": "quotemin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6234, "src": "23434:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23423:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6289, "nodeType": "ExpressionStatement", "src": "23423:19:16"}}, {"expression": {"id": 6301, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6299, "name": "quotebest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6226, "src": "23569:9:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 6300, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23581:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23569:13:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6302, "nodeType": "ExpressionStatement", "src": "23569:13:16"}, {"expression": {"id": 6309, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6303, "name": "quotemin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6234, "src": "23608:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"expression": {"baseExpression": {"id": 6304, "name": "pathsolutions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6163, "src": "23619:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSet_$14109_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSet memory[] memory"}}, "id": 6306, "indexExpression": {"id": 6305, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23633:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23619:16:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6307, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14100, "src": "23619:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 6308, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quotemin", "nodeType": "MemberAccess", "referencedDeclaration": 14055, "src": "23619:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23608:42:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6310, "nodeType": "ExpressionStatement", "src": "23608:42:16"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6242, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23055:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 6243, "name": "pathlen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6059, "src": "23059:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23055:11:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6330, "initializationExpression": {"assignments": [6240], "declarations": [{"constant": false, "id": 6240, "mutability": "mutable", "name": "i", "nameLocation": "23052:1:16", "nodeType": "VariableDeclaration", "scope": 6330, "src": "23047:6:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6239, "name": "uint", "nodeType": "ElementaryTypeName", "src": "23047:4:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6241, "nodeType": "VariableDeclarationStatement", "src": "23047:6:16"}, "loopExpression": {"expression": {"id": 6246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "23068:3:16", "subExpression": {"id": 6245, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6240, "src": "23068:1:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6247, "nodeType": "ExpressionStatement", "src": "23068:3:16"}, "nodeType": "ForStatement", "src": "23042:788:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6337, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6331, "name": "quotebest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6226, "src": "23851:9:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 6334, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23867:4:16", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 6333, "name": "uint", "nodeType": "ElementaryTypeName", "src": "23867:4:16", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 6332, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "23862:4:16", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 6335, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23862:10:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 6336, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "23862:14:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23851:25:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6340, "nodeType": "IfStatement", "src": "23847:164:16", "trueBody": {"id": 6339, "nodeType": "Block", "src": "23894:117:16", "statements": [{"id": 6338, "nodeType": "Break", "src": "23987:5:16"}]}}, {"expression": {"id": 6345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6341, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "24029:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6343, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "24029:18:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 6344, "name": "quotemax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6237, "src": "24050:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "24029:29:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6346, "nodeType": "ExpressionStatement", "src": "24029:29:16"}]}, {"assignments": [6350], "declarations": [{"constant": false, "id": 6350, "mutability": "mutable", "name": "selected", "nameLocation": "24106:8:16", "nodeType": "VariableDeclaration", "scope": 6559, "src": "24087:27:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet"}, "typeName": {"id": 6349, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 6348, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "24087:11:16"}, "referencedDeclaration": 14109, "src": "24087:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "visibility": "internal"}], "id": 6351, "nodeType": "VariableDeclarationStatement", "src": "24087:27:16"}, {"id": 6374, "nodeType": "Block", "src": "24281:328:16", "statements": [{"expression": {"id": 6363, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6352, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24299:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"baseExpression": {"expression": {"id": 6354, "name": "solpath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5966, "src": "24351:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6355, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "24351:13:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6357, "indexExpression": {"id": 6356, "name": "quotebest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6226, "src": "24365:9:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24351:24:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6358, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "path", "nodeType": "MemberAccess", "referencedDeclaration": 14082, "src": "24351:29:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, {"id": 6359, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "24402:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, {"id": 6360, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "24430:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, {"id": 6361, "name": "remainerout_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5958, "src": "24461:12:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}, {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}, {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}, {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}], "id": 6353, "name": "__searchCFollowPath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5938, "src": "24310:19:16", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_struct$_SearchArgTarget_$4363_memory_ptr_$_t_struct$_SearchArg_$4374_memory_ptr_$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_SolutionSet_$14109_memory_ptr_$", "typeString": "function (bytes32[] memory,struct MarketSearch.SearchArgTarget memory,struct MarketSearch.SearchArg memory,struct Remainer memory[] memory) view returns (struct SolutionSet memory)"}}, "id": 6362, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24310:181:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "src": "24299:192:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6364, "nodeType": "ExpressionStatement", "src": "24299:192:16"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6370, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"id": 6366, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24517:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6367, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "24517:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6368, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "24517:21:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "31", "id": 6369, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24540:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "24517:24:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "504152414e4f4941205f5f73656172636843466f6c6c6f77506174682073686f756c642072657475726e20312064657363", "id": 6371, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "24542:51:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_50dfaef4937c5e55e8bd9bbabae1f5572313a93db5d4ebb55801ae071dbabbd9", "typeString": "literal_string \"PARANOIA __searchCFollowPath should return 1 desc\""}, "value": "PARANOIA __searchCFollowPath should return 1 desc"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_50dfaef4937c5e55e8bd9bbabae1f5572313a93db5d4ebb55801ae071dbabbd9", "typeString": "literal_string \"PARANOIA __searchCFollowPath should return 1 desc\""}], "id": 6365, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "24509:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 6372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24509:85:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6373, "nodeType": "ExpressionStatement", "src": "24509:85:16"}]}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6375, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24626:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6376, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14097, "src": "24626:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 6377, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24641:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24626:16:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6386, "nodeType": "IfStatement", "src": "24622:128:16", "trueBody": {"id": 6385, "nodeType": "Block", "src": "24656:94:16", "statements": [{"expression": {"arguments": [{"hexValue": "66616c7365", "id": 6380, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "24682:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "6966202873656c65637465642e717479203d3d3029", "id": 6381, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "24688:23:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_39aea9fb23eb6dfd4a5c513817d18714b4e3a3fd687e145cf699b6294476f03d", "typeString": "literal_string \"if (selected.qty ==0)\""}, "value": "if (selected.qty ==0)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_39aea9fb23eb6dfd4a5c513817d18714b4e3a3fd687e145cf699b6294476f03d", "typeString": "literal_string \"if (selected.qty ==0)\""}], "id": 6379, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "24674:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 6382, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24674:38:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6383, "nodeType": "ExpressionStatement", "src": "24674:38:16"}, {"id": 6384, "nodeType": "Break", "src": "24730:5:16"}]}}, {"expression": {"id": 6392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6387, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5954, "src": "24763:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 6390, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24779:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}], "expression": {"id": 6388, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5954, "src": "24770:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6389, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 16041, "src": "24770:8:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SolutionSet_$14109_memory_ptr_$_t_struct$_SolutionSet_$14109_memory_ptr_$returns$_t_struct$_SolutionSet_$14109_memory_ptr_$bound_to$_t_struct$_SolutionSet_$14109_memory_ptr_$", "typeString": "function (struct SolutionSet memory,struct SolutionSet memory) pure returns (struct SolutionSet memory)"}}, "id": 6391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24770:18:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "src": "24763:25:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6393, "nodeType": "ExpressionStatement", "src": "24763:25:16"}, {"expression": {"id": 6398, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6394, "name": "maxcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6172, "src": "24802:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"expression": {"expression": {"id": 6395, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24813:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6396, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "solutions", "nodeType": "MemberAccess", "referencedDeclaration": 14108, "src": "24813:18:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 6397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "24813:25:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "24802:36:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6399, "nodeType": "ExpressionStatement", "src": "24802:36:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6407, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"baseExpression": {"expression": {"id": 6400, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24856:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6401, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "24856:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6403, "indexExpression": {"hexValue": "30", "id": 6402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24871:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24856:17:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6404, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "offset", "nodeType": "MemberAccess", "referencedDeclaration": 14094, "src": "24856:24:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 6405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "24856:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 6406, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24889:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24856:34:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6425, "nodeType": "IfStatement", "src": "24852:127:16", "trueBody": {"expression": {"id": 6423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6408, "name": "maxcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6172, "src": "24908:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"baseExpression": {"expression": {"baseExpression": {"expression": {"id": 6409, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24920:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6410, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "24920:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6412, "indexExpression": {"hexValue": "30", "id": 6411, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24935:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24920:17:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6413, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "offset", "nodeType": "MemberAccess", "referencedDeclaration": 14094, "src": "24920:24:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 6422, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"baseExpression": {"expression": {"id": 6414, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "24945:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6415, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "24945:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6417, "indexExpression": {"hexValue": "30", "id": 6416, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24960:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24945:17:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, "id": 6418, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "offset", "nodeType": "MemberAccess", "referencedDeclaration": 14094, "src": "24945:24:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 6419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "24945:31:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 6420, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24977:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "24945:33:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24920:59:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "24908:71:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6424, "nodeType": "ExpressionStatement", "src": "24908:71:16"}}, {"expression": {"id": 6436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6426, "name": "remainerout_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5958, "src": "24993:12:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"expression": {"id": 6429, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "25028:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6430, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "descs", "nodeType": "MemberAccess", "referencedDeclaration": 14104, "src": "25028:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$dyn_memory_ptr", "typeString": "struct SolutionSetDesc memory[] memory"}}, "id": 6432, "indexExpression": {"hexValue": "30", "id": 6431, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25043:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "25028:17:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}}, {"expression": {"id": 6433, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "25046:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6434, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "solutions", "nodeType": "MemberAccess", "referencedDeclaration": 14108, "src": "25046:18:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SolutionSetDesc_$14095_memory_ptr", "typeString": "struct SolutionSetDesc memory"}, {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"id": 6427, "name": "remainerout_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5958, "src": "25008:12:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "id": 6428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "update", "nodeType": "MemberAccess", "referencedDeclaration": 14286, "src": "25008:19:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$_t_struct$_SolutionSetDesc_$14095_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$bound_to$_t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Remainer memory[] memory,struct SolutionSetDesc memory,struct Solution memory[] memory) pure returns (struct Remainer memory[] memory)"}}, "id": 6435, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25008:57:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "src": "24993:72:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer memory[] memory"}}, "id": 6437, "nodeType": "ExpressionStatement", "src": "24993:72:16"}, {"expression": {"id": 6447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6438, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "25080:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6440, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "25080:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 6444, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "25116:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6445, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "solutions", "nodeType": "MemberAccess", "referencedDeclaration": 14108, "src": "25116:18:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}], "expression": {"expression": {"id": 6441, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "25097:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6442, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "used", "nodeType": "MemberAccess", "referencedDeclaration": 4373, "src": "25097:14:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 6443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 14856, "src": "25097:18:16", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$bound_to$_t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct Solution memory[] memory,struct Solution memory[] memory) pure returns (struct Solution memory[] memory)"}}, "id": 6446, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25097:38:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "src": "25080:55:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Solution_$14079_memory_ptr_$dyn_memory_ptr", "typeString": "struct Solution memory[] memory"}}, "id": 6448, "nodeType": "ExpressionStatement", "src": "25080:55:16"}, {"expression": {"id": 6454, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6449, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "25149:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6451, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "25149:18:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6452, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "25170:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6453, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxquote", "nodeType": "MemberAccess", "referencedDeclaration": 4365, "src": "25170:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25149:40:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6455, "nodeType": "ExpressionStatement", "src": "25149:40:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6456, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "25209:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6457, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "25209:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 6458, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25227:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25209:19:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6482, "nodeType": "IfStatement", "src": "25205:294:16", "trueBody": {"id": 6481, "nodeType": "Block", "src": "25242:257:16", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6463, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6460, "name": "maxcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6172, "src": "25264:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 6461, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "25274:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6462, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "25274:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25264:26:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6471, "nodeType": "IfStatement", "src": "25260:164:16", "trueBody": {"id": 6470, "nodeType": "Block", "src": "25308:116:16", "statements": [{"expression": {"arguments": [{"hexValue": "66616c7365", "id": 6465, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "25338:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "696620286d6178636f756e743e3d7461726765745f2e6d6178636f756e7429", "id": 6466, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25344:33:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_573725f7d0f863c39de90c8054ed76d2f207c47ba5f02647cfcadf85ac4cc3d8", "typeString": "literal_string \"if (maxcount>=target_.maxcount)\""}, "value": "if (maxcount>=target_.maxcount)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_573725f7d0f863c39de90c8054ed76d2f207c47ba5f02647cfcadf85ac4cc3d8", "typeString": "literal_string \"if (maxcount>=target_.maxcount)\""}], "id": 6464, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "25330:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 6467, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25330:48:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6468, "nodeType": "ExpressionStatement", "src": "25330:48:16"}, {"id": 6469, "nodeType": "Break", "src": "25400:5:16"}]}}, {"expression": {"id": 6479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6472, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "25441:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6474, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "25441:15:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6475, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "25459:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6476, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxcount", "nodeType": "MemberAccess", "referencedDeclaration": 4359, "src": "25459:16:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 6477, "name": "maxcount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6172, "src": "25476:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25459:25:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25441:43:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6480, "nodeType": "ExpressionStatement", "src": "25441:43:16"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6483, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "25516:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6484, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "25516:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 6485, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25529:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25516:14:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6511, "nodeType": "IfStatement", "src": "25512:281:16", "trueBody": {"id": 6510, "nodeType": "Block", "src": "25544:249:16", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6487, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "25566:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6488, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14097, "src": "25566:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 6489, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "25580:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6490, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "25580:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25566:25:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6499, "nodeType": "IfStatement", "src": "25562:162:16", "trueBody": {"id": 6498, "nodeType": "Block", "src": "25609:115:16", "statements": [{"expression": {"arguments": [{"hexValue": "66616c7365", "id": 6493, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "25639:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "6966202873656c65637465642e7174793e3d7461726765745f2e71747929", "id": 6494, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25645:32:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ae2fbdbb370348ef658104bc0d2c73f09f127aa2cb3831fd9748968a22db7c81", "typeString": "literal_string \"if (selected.qty>=target_.qty)\""}, "value": "if (selected.qty>=target_.qty)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ae2fbdbb370348ef658104bc0d2c73f09f127aa2cb3831fd9748968a22db7c81", "typeString": "literal_string \"if (selected.qty>=target_.qty)\""}], "id": 6492, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "25631:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 6495, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25631:47:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6496, "nodeType": "ExpressionStatement", "src": "25631:47:16"}, {"id": 6497, "nodeType": "Break", "src": "25700:5:16"}]}}, {"expression": {"id": 6508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6500, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6074, "src": "25741:6:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6502, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "25741:10:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6503, "name": "target_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5943, "src": "25754:7:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget memory"}}, "id": 6504, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "25754:11:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 6505, "name": "selected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "25766:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6506, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14097, "src": "25766:12:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25754:24:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25741:37:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6509, "nodeType": "ExpressionStatement", "src": "25741:37:16"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6512, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "25810:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6513, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4369, "src": "25810:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 6514, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25831:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25810:22:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6552, "nodeType": "IfStatement", "src": "25806:371:16", "trueBody": {"id": 6551, "nodeType": "Block", "src": "25846:331:16", "statements": [{"assignments": [6517], "declarations": [{"constant": false, "id": 6517, "mutability": "mutable", "name": "total", "nameLocation": "25872:5:16", "nodeType": "VariableDeclaration", "scope": 6551, "src": "25864:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6516, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25864:7:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 6529, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6523, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6518, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5954, "src": "25881:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6519, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "qty", "nodeType": "MemberAccess", "referencedDeclaration": 14097, "src": "25881:8:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"expression": {"id": 6520, "name": "out_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5954, "src": "25890:4:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet memory"}}, "id": 6521, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quote", "nodeType": "MemberAccess", "referencedDeclaration": 14100, "src": "25890:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Quote_$14060_memory_ptr", "typeString": "struct Quote memory"}}, "id": 6522, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "quoteavg", "nodeType": "MemberAccess", "referencedDeclaration": 14057, "src": "25890:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25881:28:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 6524, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25880:30:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 6527, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 6525, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25911:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 6526, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25915:2:16", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "25911:6:16", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "25880:37:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "25864:53:16"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6530, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6517, "src": "25939:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 6531, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "25946:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6532, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4369, "src": "25946:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25939:26:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6541, "nodeType": "IfStatement", "src": "25935:164:16", "trueBody": {"id": 6540, "nodeType": "Block", "src": "25983:116:16", "statements": [{"expression": {"arguments": [{"hexValue": "66616c7365", "id": 6535, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "26013:5:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "69662028746f74616c3e3d7365617263686172675f2e6d6178746f74616c29", "id": 6536, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "26019:33:16", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fd41f0862d53d731dca4293076ecb6eb8685b932e7c9a322d3167548932bf33a", "typeString": "literal_string \"if (total>=searcharg_.maxtotal)\""}, "value": "if (total>=searcharg_.maxtotal)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fd41f0862d53d731dca4293076ecb6eb8685b932e7c9a322d3167548932bf33a", "typeString": "literal_string \"if (total>=searcharg_.maxtotal)\""}], "id": 6534, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "26005:7:16", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 6537, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26005:48:16", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6538, "nodeType": "ExpressionStatement", "src": "26005:48:16"}, {"id": 6539, "nodeType": "Break", "src": "26075:5:16"}]}}, {"expression": {"id": 6549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 6542, "name": "searcharg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6128, "src": "26116:9:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6544, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4369, "src": "26116:18:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6548, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6545, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "26137:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6546, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxtotal", "nodeType": "MemberAccess", "referencedDeclaration": 4369, "src": "26137:19:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 6547, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6517, "src": "26157:5:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "26137:25:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "26116:46:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6550, "nodeType": "ExpressionStatement", "src": "26116:46:16"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6553, "name": "searcharg_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5946, "src": "26194:10:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg memory"}}, "id": 6554, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxavgquote", "nodeType": "MemberAccess", "referencedDeclaration": 4367, "src": "26194:22:16", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 6555, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26218:1:16", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26194:25:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6558, "nodeType": "IfStatement", "src": "26190:605:16", "trueBody": {"id": 6557, "nodeType": "Block", "src": "26233:562:16", "statements": []}}]}, "condition": {"hexValue": "74727565", "id": 6174, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "22411:4:16", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "id": 6560, "nodeType": "WhileStatement", "src": "22404:4423:16"}]}, "id": 6562, "implemented": true, "kind": "function", "modifiers": [], "name": "__searchC", "nameLocation": "20521:9:16", "nodeType": "FunctionDefinition", "parameters": {"id": 5951, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5940, "mutability": "mutable", "name": "from_", "nameLocation": "20548:5:16", "nodeType": "VariableDeclaration", "scope": 6562, "src": "20540:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5939, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "20540:7:16", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5943, "mutability": "mutable", "name": "target_", "nameLocation": "20599:7:16", "nodeType": "VariableDeclaration", "scope": 6562, "src": "20563:43:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_memory_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}, "typeName": {"id": 5942, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5941, "name": "MarketSearch.SearchArgTarget", "nodeType": "IdentifierPath", "referencedDeclaration": 4363, "src": "20563:28:16"}, "referencedDeclaration": 4363, "src": "20563:28:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArgTarget_$4363_storage_ptr", "typeString": "struct MarketSearch.SearchArgTarget"}}, "visibility": "internal"}, {"constant": false, "id": 5946, "mutability": "mutable", "name": "searcharg_", "nameLocation": "20646:10:16", "nodeType": "VariableDeclaration", "scope": 6562, "src": "20616:40:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_memory_ptr", "typeString": "struct MarketSearch.SearchArg"}, "typeName": {"id": 5945, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5944, "name": "MarketSearch.SearchArg", "nodeType": "IdentifierPath", "referencedDeclaration": 4374, "src": "20616:22:16"}, "referencedDeclaration": 4374, "src": "20616:22:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SearchArg_$4374_storage_ptr", "typeString": "struct MarketSearch.SearchArg"}}, "visibility": "internal"}, {"constant": false, "id": 5950, "mutability": "mutable", "name": "remainer_", "nameLocation": "20684:9:16", "nodeType": "VariableDeclaration", "scope": 6562, "src": "20666:27:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer[]"}, "typeName": {"baseType": {"id": 5948, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5947, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "20666:8:16"}, "referencedDeclaration": 14065, "src": "20666:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 5949, "nodeType": "ArrayTypeName", "src": "20666:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}, "visibility": "internal"}], "src": "20530:169:16"}, "returnParameters": {"id": 5959, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5954, "mutability": "mutable", "name": "out_", "nameLocation": "20741:4:16", "nodeType": "VariableDeclaration", "scope": 6562, "src": "20722:23:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_memory_ptr", "typeString": "struct SolutionSet"}, "typeName": {"id": 5953, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5952, "name": "SolutionSet", "nodeType": "IdentifierPath", "referencedDeclaration": 14109, "src": "20722:11:16"}, "referencedDeclaration": 14109, "src": "20722:11:16", "typeDescriptions": {"typeIdentifier": "t_struct$_SolutionSet_$14109_storage_ptr", "typeString": "struct SolutionSet"}}, "visibility": "internal"}, {"constant": false, "id": 5958, "mutability": "mutable", "name": "remainerout_", "nameLocation": "20764:12:16", "nodeType": "VariableDeclaration", "scope": 6562, "src": "20746:30:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_memory_ptr_$dyn_memory_ptr", "typeString": "struct Remainer[]"}, "typeName": {"baseType": {"id": 5956, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5955, "name": "Remainer", "nodeType": "IdentifierPath", "referencedDeclaration": 14065, "src": "20746:8:16"}, "referencedDeclaration": 14065, "src": "20746:8:16", "typeDescriptions": {"typeIdentifier": "t_struct$_Remainer_$14065_storage_ptr", "typeString": "struct Remainer"}}, "id": 5957, "nodeType": "ArrayTypeName", "src": "20746:10:16", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Remainer_$14065_storage_$dyn_storage_ptr", "typeString": "struct Remainer[]"}}, "visibility": "internal"}], "src": "20721:56:16"}, "scope": 6563, "src": "20512:6323:16", "stateMutability": "view", "virtual": false, "visibility": "private"}], "scope": 6564, "src": "221:26616:16", "usedErrors": []}], "src": "85:26753:16"}, "compiler": {"version": "0.8.11+commit.d7f03943", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "MarketSearch", "deployedBytecode": "608060405234801561001057600080fd5b50600436106101a95760003560e01c8063854ba99d116100f9578063ccbd163711610097578063e4b1614411610071578063e4b1614414610466578063e9f14ce614610479578063f2fde38b1461048c578063feab44541461049f576101a9565b8063ccbd163714610424578063ccc0795914610437578063d69358581461045e576101a9565b8063af640d0f116100d3578063af640d0f146103c5578063b03fd40d146103eb578063b9b38745146103fe578063bd0ade2b14610411576101a9565b8063854ba99d146103825780638da5cb5b1461038a57806397962076146103b5576101a9565b80632203616d116101665780636b2b091a116101405780636b2b091a14610331578063715018a61461035157806372ea61bf146103595780637af6649a14610361576101a9565b80632203616d146102d65780635f5c5baa146102fe5780636296514114610306576101a9565b806301ffc9a71461022e57806305d6bd9c1461025657806309252f02146102605780630a3550aa146102825780631ef4590d146102a357806321603f43146102b6575b6101b16104c9565b60006101c16024600436846147eb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060208501519495509250503660231981019150601f19016004838037816024600437600080826000875af49250505061022981610693565b505050005b61024161023c366004614815565b6106a9565b60405190151581526020015b60405180910390f35b61025e6106e0565b005b61027361026e366004614a51565b6106f7565b60405161024d93929190614ba6565b610295610290366004614be2565b610860565b60405161024d929190614c9f565b6102416102b1366004614ddc565b610b22565b6102c96102c4366004614dfe565b610bb3565b60405161024d9190614e4f565b6102e96102e4366004614dfe565b610bc6565b60405163ffffffff909116815260200161024d565b61025e610bd7565b610319610314366004614dfe565b610cec565b6040516001600160401b03909116815260200161024d565b61034461033f366004614dfe565b610d1e565b60405161024d9190614f00565b61025e61113a565b61025e61114c565b61037461036f366004614f62565b611166565b60405190815260200161024d565b61024161117f565b6000546201000090046001600160a01b03165b6040516001600160a01b03909116815260200161024d565b600054610100900460ff16610241565b7fdcf6913c74762e0b3c7f94f504bb2be7445bbd8d11abee9960f04ebf85e7a7b2610374565b6103746103f9366004614f8a565b61119d565b61029561040c366004614a51565b6111b7565b61027361041f366004614be2565b6112fe565b610295610432366004614fb3565b6115a8565b61039d7f000000000000000000000000000000000000000000000000000000000000000081565b61025e611883565b610374610474366004615016565b61189f565b610273610487366004614fb3565b6118b6565b61025e61049a36600461503c565b611baf565b6104b26104ad366004614dfe565b611c28565b60405165ffffffffffff909116815260200161024d565b6000546001600160a01b03620100009091041633148061057c57506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166316279055336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190615059565b8061061a57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a9190615059565b6106915760405162461bcd60e51b815260206004820152603960248201527f416c6c6f77616e63653a2063616c6c6572206d757374206265205265706f736960448201527f746f727920436f6e7472616374206f72204f70657261746f720000000000000060648201526084015b60405180910390fd5b565b3d6000803e8080156106a4573d6000f35b3d6000fd5b60006001600160e01b031982166301ffc9a760e01b14806106da57506001600160e01b031982166315d3789560e31b145b92915050565b6106e86104c9565b6106916000805460ff19169055565b6060600061071f60405180606001604052806000815260200160008152602001600081525090565b6040516327bcdbc960e11b81526001600160a01b038a81166004830152602482018a905261084e917f000000000000000000000000000000000000000000000000000000000000000090911690634f79b79290604401602060405180830381865afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190615076565b6040516327bcdbc960e11b81526001600160a01b038a81166004830152602482018a90527f00000000000000000000000000000000000000000000000000000000000000001690634f79b79290604401602060405180830381865afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190615076565b87876118b6565b92509250925096509650969350505050565b61086861461e565b60606000835b6108796008826150a5565b8210156108c257858561088d8460086150bc565b81811061089c5761089c6150d4565b90506020020135600014156108b0576108c2565b816108ba816150ea565b92505061086e565b6000826001600160401b038111156108dc576108dc614854565b604051908082528060200260200182016040528015610905578160200160208202803683370190505b50905060005b838110156109655787876109208360086150bc565b81811061092f5761092f6150d4565b90506020020135828281518110610948576109486150d4565b60209081029190910101528061095d816150ea565b91505061090b565b50610b11896040518060e001604052808b81526020018a8a600081811061098e5761098e6150d4565b9050602002013581526020018a8a60018181106109ad576109ad6150d4565b9050602002013581526020018a8a60028181106109cc576109cc6150d4565b9050602002013560001415151581526020018a8a60038181106109f1576109f16150d4565b9050602002013560001415151581526020018a8a6007818110610a1657610a166150d4565b9050602002013581526020018481525060405180608001604052808b8b6005818110610a4457610a446150d4565b9050602002013581526020018b8b6006818110610a6357610a636150d4565b9050602002013581526020018b8b6004818110610a8257610a826150d4565b60209081029290920135835250016000604051908082528060200260200182016040528015610acb57816020015b610ab8614668565b815260200190600190039081610ab05790505b5090526040805160008082526020820190925290610b0b565b6040805180820190915260008082526020820152815260200190600190039081610ae45790505b50611c39565b945094505050505b94509492505050565b6000828152600160205260408082209051632be5db2360e11b815260048101919091526024810183905273__$f71e59c5327218924d154e230469c101bd$__906357cbb64690604401602060405180830381865af4158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac9190615059565b9392505050565b610bbb6146a1565b6106da826000612667565b60006106da64e8d4a5100083615105565b6000546001600160a01b036201000090910416331480610c8a57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a9190615059565b6106915760405162461bcd60e51b815260206004820152602d60248201527f416c6c6f77616e63653a2063616c6c6572206d757374206265205265706f736960448201526c3a37b93c9027b832b930ba37b960991b6064820152608401610688565b600080610cfe6402540be40084615105565b905082610d10826402540be400615127565b11156106da576106da615146565b6000818152600160209081526040808320805482518185028101850190935280835260609493830182828015610d7357602002820191906000526020600020905b815481526020019060010190808311610d5f575b5050505050905080516001600160401b03811115610d9357610d93614854565b604051908082528060200260200182016040528015610dc657816020015b6060815260200190600190039081610db15790505b5091506000805b82518110156110e7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338a699a4848381518110610e1757610e176150d4565b60200260200101516040518263ffffffff1660e01b8152600401610e3d91815260200190565b602060405180830381865afa158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e9190615059565b610e87576110d5565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327ee9dc2858481518110610eca57610eca6150d4565b60200260200101516040518263ffffffff1660e01b8152600401610ef091815260200190565b600060405180830381865afa158015610f0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f3591908101906151b7565b90506000815111610f825760405162461bcd60e51b815260206004820152601760248201527605f706174684c69737420706174682e6c656e6774683e3604c1b6044820152606401610688565b60005b60018251610f9391906150a5565b81101561108d5761107273__$669c6e0eba2465bd6779ea6ec5db3af1b5$__6376254ff9848481518110610fc957610fc96150d4565b602002602001015185856001610fdf91906150bc565b81518110610fef57610fef6150d4565b60200260200101516040518363ffffffff1660e01b815260040161101d929190918252602082015260400190565b602060405180830381865af415801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190615076565b600090815260066020526040902054151590565b61107b5761108d565b80611085816150ea565b915050610f85565b6001825161109b91906150a5565b8110156110a95750506110d5565b8186856110b5816150ea565b9650815181106110c7576110c76150d4565b602002602001018190525050505b806110df816150ea565b915050610dcd565b50808352600081116111335760405162461bcd60e51b815260206004820152601560248201527405f6c6973745061746846726f6d20636f756e743e3605c1b6044820152606401610688565b5050919050565b611142612dd0565b6106916000612e31565b6111546104c9565b6106916000805460ff19166001179055565b60006106da65ffffffffffff831664174876e800615127565b6000805460ff16806111985750600054610100900460ff165b905090565b60006106da6001600160401b0383166402540be400615127565b6111bf61461e565b6040516327bcdbc960e11b81526001600160a01b038881166004830152602482018890526060916112ef917f00000000000000000000000000000000000000000000000000000000000000001690634f79b79290604401602060405180830381865afa158015611233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112579190615076565b6040516327bcdbc960e11b81526001600160a01b038981166004830152602482018990527f00000000000000000000000000000000000000000000000000000000000000001690634f79b79290604401602060405180830381865afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190615076565b86866115a8565b91509150965096945050505050565b6060600061132660405180606001604052806000815260200160008152602001600081525090565b6000806113346008876150a5565b90505b8082101561138157868661134c8460086150bc565b81811061135b5761135b6150d4565b905060200201356000141561136f57611381565b81611379816150ea565b925050611337565b6000826001600160401b0381111561139b5761139b614854565b6040519080825280602002602001820160405280156113c4578160200160208202803683370190505b50905060005b838110156114245788886113df8360086150bc565b8181106113ee576113ee6150d4565b90506020020135828281518110611407576114076150d4565b60209081029190910101528061141c816150ea565b9150506113ca565b506115948a6040518060e001604052808c81526020018b8b600081811061144d5761144d6150d4565b9050602002013581526020018b8b600181811061146c5761146c6150d4565b9050602002013581526020018b8b600281811061148b5761148b6150d4565b9050602002013560001415151581526020018b8b60038181106114b0576114b06150d4565b9050602002013560001415151581526020018b8b60078181106114d5576114d56150d4565b9050602002013581526020018481525060405180608001604052808c8c6005818110611503576115036150d4565b9050602002013581526020018c8c6006818110611522576115226150d4565b9050602002013581526020018c8c6004818110611541576115416150d4565b6020908102929092013583525001600060405190808252806020026020018201604052801561158a57816020015b611577614668565b81526020019060019003908161156f5790505b5090526000612e8c565b9550955095505050505b9450945094915050565b6115b061461e565b815160609060208111156116065760405162461bcd60e51b815260206004820152601d60248201527f64656c6976657279206172726179206d61782073697a652069732033320000006044820152606401610688565b61160e614730565b8551815260208087015190820152604086015161162c57600061162f565b60015b60ff166040820152606086015161164757600061164a565b60015b60ff1660608201526080868101519082015260a0808701519082015260c0808701519082015260e08087015190820152600860005b838110156116f857868181518110611699576116996150d4565b60200260200101516000146116e6578681815181106116ba576116ba6150d4565b60200260200101518383806116ce906150ea565b9450602881106116e0576116e06150d4565b60200201525b806116f0816150ea565b91505061167f565b505060405163023aa9ab60e61b81527f2e7a327ef83c2af7579c6634f2f5604519800c5f07626f27bd602fd11ed8e6ec60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015611781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a591906151eb565b6001600160a01b03167f0a3550aabeea45f9d515c45ea5dadcd6efbe5a3c73ab07644f630de564c6515a308b8b60606028886040516024016117ec96959493929190615208565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161182a919061526b565b600060405180830381855afa9150503d8060008114611865576040519150601f19603f3d011682016040523d82523d6000602084013e61186a565b606091505b5050905061187781610693565b50505094509492505050565b61188b612dd0565b6106916000805461ff001916610100179055565b60006106da63ffffffff831664e8d4a51000615127565b606060006118de60405180606001604052806000815260200160008152602001600081525090565b835160208111156119315760405162461bcd60e51b815260206004820152601d60248201527f64656c6976657279206172726179206d61782073697a652069732033320000006044820152606401610688565b611939614730565b8651815260208088015190820152604087015161195757600061195a565b60015b60ff1660408201526060870151611972576000611975565b60015b60ff1660608201526080878101519082015260a0808801519082015260c0808801519082015260e08088015190820152600860005b83811015611a23578781815181106119c4576119c46150d4565b6020026020010151600014611a11578781815181106119e5576119e56150d4565b60200260200101518383806119f9906150ea565b945060288110611a0b57611a0b6150d4565b60200201525b80611a1b816150ea565b9150506119aa565b505060405163023aa9ab60e61b81527f2e7a327ef83c2af7579c6634f2f5604519800c5f07626f27bd602fd11ed8e6ec60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015611aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad091906151eb565b6001600160a01b03167fbd0ade2bcae368fca26bb02146561a2830136bf30c4a34c648255fccebbe2254308c8c6060602888604051602401611b1796959493929190615208565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611b55919061526b565b600060405180830381855afa9150503d8060008114611b90576040519150601f19603f3d011682016040523d82523d6000602084013e611b95565b606091505b50509050611ba281610693565b5050509450945094915050565b611bb7612dd0565b6001600160a01b038116611c1c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610688565b611c2581612e31565b50565b60006106da64174876e80083615105565b611c4161461e565b81611c4a61461e565b6000611c5a888860000151613472565b805190915060005b81811015611e0857611c7261474f565b611cfe848381518110611c8757611c876150d4565b60200260200101516002868581518110611ca357611ca36150d4565b602002602001015151611cb691906150a5565b81518110611cc657611cc66150d4565b60200260200101518b60405180608001604052806000815260200160008152602001600081526020018d606001518152506000612e8c565b60408401526020830181905215159050611d185750611df6565b838281518110611d2a57611d2a6150d4565b6020908102919091010151815273__$2fc864095126d4d9b433a37f83d02318c7$__637513ce1b86836000604051908082528060200260200182016040528015611d8e57816020015b611d7b614668565b815260200190600190039081611d735790505b506040518463ffffffff1660e01b8152600401611dad93929190615465565b600060405180830381865af4158015611dca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611df29190810190615692565b9450505b80611e00816150ea565b915050611c62565b50505060408101515180611e1d575050610b19565b611e256147a7565b87518152602080890151818301526040808a0151818401526060808b01511515818501526080808c015115158186015260a0808d01519086015260c0808d0151908601528251908101835260008082528185018181528285018281528385018581528e518552968e0151909152938c0151909352908a0151909252836001600160401b03811115611eb857611eb8614854565b604051908082528060200260200182016040528015611ef157816020015b611ede61461e565b815260200190600190039081611ed65790505b50905060005b89518352600160a085015260005b85811015611ff657611f3a87604001518281518110611f2657611f266150d4565b60200260200101516000015186868b613866565b838281518110611f4c57611f4c6150d4565b60200260200101819052506001838281518110611f6b57611f6b6150d4565b602002602001015160400151511115611fe45760405162461bcd60e51b815260206004820152603560248201527f504152414e4f4941205f5f73656172636843466f6c6c6f77506174682073686f604482015274756c642072657475726e206d61782031206465736360581b6064820152608401610688565b80611fee816150ea565b915050611f05565b50600019600080805b8881101561215757858181518110612019576120196150d4565b6020026020010151600001516000141561203257612145565b600019841480612062575085818151811061204f5761204f6150d4565b6020026020010151602001516000015183115b156120f75760001984141580156120995750858181518110612086576120866150d4565b6020026020010151602001516040015183105b156120a6578291506120cb565b8581815181106120b8576120b86150d4565b6020026020010151602001516040015191505b8093508581815181106120e0576120e06150d4565b602002602001015160200151600001519250612145565b858181518110612109576121096150d4565b6020026020010151602001516000015182111561214557858181518110612132576121326150d4565b6020026020010151602001516000015191505b8061214f816150ea565b915050611fff565b5060001983141561216a57505050612658565b85525061217561461e565b6121a28860400151838151811061218e5761218e6150d4565b60200260200101516000015187878c613866565b90508060400151516001146122135760405162461bcd60e51b815260206004820152603160248201527f504152414e4f4941205f5f73656172636843466f6c6c6f77506174682073686f604482015270756c642072657475726e2031206465736360781b6064820152608401610688565b80516122595760405162461bcd60e51b81526020600482015260156024820152746966202873656c65637465642e717479203d3d302960581b6044820152606401610688565b604051639fab220f60e01b815273__$2fc864095126d4d9b433a37f83d02318c7$__90639fab220f90612292908d9085906004016157ac565b600060405180830381865af41580156122af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122d79190810190615692565b9950806060015151836122ea91906150bc565b92508060400151600081518110612303576123036150d4565b602002602001015160a001515160001461239057806040015160008151811061232e5761232e6150d4565b602002602001015160a0015160018260400151600081518110612353576123536150d4565b602002602001015160a001515161236a91906150a5565b8151811061237a5761237a6150d4565b60200260200101518361238d91906150a5565b92505b8873__$2fc864095126d4d9b433a37f83d02318c7$__637071133e909183604001516000815181106123c4576123c46150d4565b602002602001015184606001516040518463ffffffff1660e01b81526004016123ef939291906157d1565b600060405180830381865af415801561240c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261243491908101906157e4565b6060808701519083015160405163bf07928f60e01b8152929b5073__$2fc864095126d4d9b433a37f83d02318c7$__9263bf07928f92612478929091600401615899565b600060405180830381865af4158015612495573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124bd91908101906158be565b60608601528b51855260a08d015115612539578c60a0015183106125235760405162461bcd60e51b815260206004820152601f60248201527f696620286d6178636f756e743e3d7461726765745f2e6d6178636f756e7429006044820152606401610688565b828d60a0015161253391906150a5565b60a08701525b60408d0151156125ae5760408d01518151106125975760405162461bcd60e51b815260206004820152601e60248201527f6966202873656c65637465642e7174793e3d7461726765745f2e7174792900006044820152606401610688565b805160408e01516125a891906150a5565b60408701525b60408c015115612651576000670de0b6b3a76400008b60200151602001518c600001516125db9190615127565b6125e59190615105565b90508c60400151811061263a5760405162461bcd60e51b815260206004820152601f60248201527f69662028746f74616c3e3d7365617263686172675f2e6d6178746f74616c29006044820152606401610688565b808d6040015161264a91906150a5565b6040870152505b5050611ef7565b50505050505094509492505050565b61266f6146a1565b60008381526005602081815260408084208151610180810183528154815260018201546001600160a01b0381169482019490945293909291840191600160a01b900460ff16908111156126c4576126c4614e17565b60058111156126d5576126d5614e17565b81526001820154600160a81b900460ff166020820152600282015460408083019190915260038301546001600160401b0380821660608501526801000000000000000080830482166080860152600160801b808404831660a0870152600160c01b909304821660c086015260049586015480831660e087015290810482166101008601529190910416610120909201919091528251905163657c7e0960e01b8152918201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063657c7e09906024016040805180830381865afa1580156127cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f191906158f2565b6040840152602083015260808101516060830152828061288a575060608101516040516336181b6760e11b815260ff909116600482015273__$f7122df39a5f3bad28f404771cd5173291$__90636c3036ce90602401602060405180830381865af4158015612864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128889190615059565b155b15612d0d5760208101516001600160a01b0316825260a08101516128ad9061119d565b60808301526060810151604051632b2076e360e11b815260ff909116600482015273__$f7122df39a5f3bad28f404771cd5173291$__90635640edc690602401602060405180830381865af415801561290a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061292e9190615059565b1561294257608082015160a0830152612a8e565b6101208101516001600160401b03161561296e5761296481610120015161119d565b60a0830152612a8e565b60405163023aa9ab60e61b81527fcd775f2396f9f13f12bcf8ca32e21df66559a8adc3944d0591127e7731f7ab8560048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa1580156129f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1691906151eb565b6001600160a01b031663a9bf985883602001516040518263ffffffff1660e01b8152600401612a4791815260200190565b602060405180830381865afa158015612a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a889190615076565b60a08301525b612a9b8160c0015161119d565b60c083015260e0810151612aae9061119d565b60e08301526060810151604051635b7d0f6960e11b815260ff909116600482015273__$f7122df39a5f3bad28f404771cd5173291$__9063b6fa1ed290602401602060405180830381865af4158015612b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2f9190615059565b15612cf857612b4281610140015161119d565b610120830152610160810151612b579061119d565b61014083015260405163023aa9ab60e61b81527f3cb99135f7a7c088d9085b446345038a22a85f4e8fe072b0e1b66d97243e745860048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015612be4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c0891906151eb565b6001600160a01b0316636464b68a846020015185604001516040518363ffffffff1660e01b8152600401612c46929190918252602082015260400190565b606060405180830381865afa158015612c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c879190615916565b5091505080612ccc5760405162461bcd60e51b8152602060048201526011602482015270145d5bdd194e88139bdd081c5d5bdd1959607a1b6044820152606401610688565b610140830151612cdc9082615105565b836101200151612cec9190615127565b61010084015250612d0d565b612d0681610100015161119d565b6101008301525b604051630212d6cb60e21b815273__$f7122df39a5f3bad28f404771cd5173291$__9063084b5b2c90612d44908490600401615944565b602060405180830381865af4158015612d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d859190615076565b61016083015260408101516101808301906005811115612da757612da7614e17565b90816005811115612dba57612dba614e17565b9052506060015160ff166101a082015292915050565b6000546001600160a01b03620100009091041633146106915760405162461bcd60e51b815260206004820152601f60248201527f416c6c6f77616e63653a2063616c6c6572206d757374206265204f776e6572006044820152606401610688565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60606000612eb460405180606001604052806000815260200160008152602001600081525090565b612eca8787600001518860c00151600080614165565b80519093506000816001600160401b03811115612ee957612ee9614854565b604051908082528060200260200182016040528015612f2257816020015b612f0f614668565b815260200190600190039081612f075790505b5090506000805b83811015613274578960000151878281518110612f4857612f486150d4565b60200260200101516020015114612fb35760405162461bcd60e51b815260206004820152602960248201527f5f5f736561726368206f75745f5b695d2e61646472203d3d207461726765745f6044820152682e63757272656e637960b81b6064820152608401610688565b885115801590612fe357508860000151878281518110612fd557612fd56150d4565b602002602001015160800151115b15612fed57613262565b8960200151878281518110613004576130046150d4565b602002602001015160600151101561301b57613262565b886060015173__$2fc864095126d4d9b433a37f83d02318c7$__635640453d909189848151811061304e5761304e6150d4565b6020026020010151600001516040518363ffffffff1660e01b8152600401613077929190615a33565b602060405180830381865af4158015613094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130b89190615076565b8782815181106130ca576130ca6150d4565b60200260200101516040015110156130e157613262565b8681815181106130f3576130f36150d4565b602002602001015160600151896060015173__$2fc864095126d4d9b433a37f83d02318c7$__635640453d90918a8581518110613132576131326150d4565b6020026020010151600001516040518363ffffffff1660e01b815260040161315b929190615a33565b602060405180830381865af4158015613178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319c9190615076565b8883815181106131ae576131ae6150d4565b6020026020010151604001516131c491906150a5565b10156131cf57613262565b8960a0015160011480156131e65750602089015115155b801561321257508860200151878281518110613204576132046150d4565b602002602001015160800151115b1561321c57613262565b86818151811061322e5761322e6150d4565b6020026020010151838381518110613248576132486150d4565b6020026020010181905250818061325e906150ea565b9250505b8061326c816150ea565b915050612f29565b508152935073__$ac5a5ff32855f20cc1672b31a3944a092c$__905063b51b8e828460008989826040519080825280602002602001820160405280156132d457816020015b6132c1614668565b8152602001906001900390816132b95790505b506040518663ffffffff1660e01b81526004016132f5959493929190615a88565b600060405180830381865af4158015613312573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261333a9190810190615b31565b919450925090508361159e57604051637bf5cddb60e11b815273__$2fc864095126d4d9b433a37f83d02318c7$__9063f7eb9bb69061337d908690600401615b88565b600060405180830381865af415801561339a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133c291908101906158be565b92508560a001516000141580156133dd57508560a001518351115b1561159e5760a086015180845260405163742228d760e01b815273__$2fc864095126d4d9b433a37f83d02318c7$__9063742228d790613421908790600401615b88565b608060405180830381865af415801561343e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134629190615b9b565b9093509150509450945094915050565b60008281526001602090815260408083208054825181850281018501909352808352606094938301828280156134c757602002820191906000526020600020905b8154815260200190600101908083116134b3575b50505050509050600081511161351f5760405162461bcd60e51b815260206004820152601b60248201527f5f706174684c6973742066726f6d706174682e6c656e6774683e3000000000006044820152606401610688565b80516001600160401b0381111561353857613538614854565b60405190808252806020026020018201604052801561356b57816020015b60608152602001906001900390816135565790505b5091506000805b8251811015613816577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338a699a48483815181106135bc576135bc6150d4565b60200260200101516040518263ffffffff1660e01b81526004016135e291815260200190565b602060405180830381865afa1580156135ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136239190615059565b61362c57613804565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327ee9dc285848151811061366f5761366f6150d4565b60200260200101516040518263ffffffff1660e01b815260040161369591815260200190565b600060405180830381865afa1580156136b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526136da91908101906151b7565b905060008151116137275760405162461bcd60e51b815260206004820152601760248201527605f706174684c69737420706174682e6c656e6774683e3604c1b6044820152606401610688565b85816001835161373791906150a5565b81518110613747576137476150d4565b60200260200101511461375a5750613804565b60005b6001825161376b91906150a5565b8110156137bc576137a173__$669c6e0eba2465bd6779ea6ec5db3af1b5$__6376254ff9848481518110610fc957610fc96150d4565b6137aa576137bc565b806137b4816150ea565b91505061375d565b600182516137ca91906150a5565b8110156137d8575050613804565b8186856137e4816150ea565b9650815181106137f6576137f66150d4565b602002602001018190525050505b8061380e816150ea565b915050613572565b508083526000811161385e5760405162461bcd60e51b815260206004820152601160248201527005f706174684c69737420636f756e743e3607c1b6044820152606401610688565b505092915050565b61386e61461e565b6002855110156138cc5760405162461bcd60e51b815260206004820152602360248201527f5f5f73656172636843466f6c6c6f775061746820706174685f2e6c656e6774686044820152621f1e9960e91b6064820152608401610688565b8351855186906138de906001906150a5565b815181106138ee576138ee6150d4565b6020026020010151146139695760405162461bcd60e51b815260206004820152603d60248201527f5f5f73656172636843466f6c6c6f775061746820706174685f5b706174685f2e60448201527f6c656e677468202d20315d3d3d7461726765745f2e63757272656e63790000006064820152608401610688565b606061397361474f565b865160021415613a79576139b0876002895161398f91906150a5565b8151811061399f5761399f6150d4565b602002602001015187876000612e8c565b6040840152602083015280516080830152875190925073__$2fc864095126d4d9b433a37f83d02318c7$__90632fbf1f939083908a906139f2906002906150a5565b81518110613a0257613a026150d4565b602002602001015189600001516040518463ffffffff1660e01b8152600401613a2d93929190615bc8565b600060405180830381865af4158015613a4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a729190810190615bed565b90506140d8565b604085015160015b60018951613a8f91906150a5565b811015613c4c576000613b848a613aa76001856150a5565b81518110613ab757613ab76150d4565b60200260200101516040518060e001604052808d8681518110613adc57613adc6150d4565b6020026020010151815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160006001600160401b03811115613b2957613b29614854565b604051908082528060200260200182016040528015613b52578160200160208202803683370190505b50815250604051806080016040528060008152602001600081526020018781526020018c606001518152506001612e8c565b5091505080613b9757505050505061415d565b8673__$2fc864095126d4d9b433a37f83d02318c7$__63e23edbef90918c8581518110613bc657613bc66150d4565b60200260200101516040518363ffffffff1660e01b8152600401613beb929190615c21565b602060405180830381865af4158015613c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c2c9190615076565b613c3690826150bc565b9250508080613c44906150ea565b915050613a81565b50613ca68860028a51613c5f91906150a5565b81518110613c6f57613c6f6150d4565b602002602001015188604051806080016040528060008152602001600081526020018581526020018a606001518152506000612e8c565b604085015260208401819052909350613cc15750505061415d565b82516080830152875173__$2fc864095126d4d9b433a37f83d02318c7$__90632fbf1f939084908b90613cf6906002906150a5565b81518110613d0657613d066150d4565b60200260200101518a600001516040518463ffffffff1660e01b8152600401613d3193929190615bc8565b600060405180830381865af4158015613d4e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613d769190810190615bed565b9150670de0b6b3a76400008260400151602001518360200151613d999190615127565b613da39190615105565b9050600060028951613db591906150a5565b90505b80156140d5576060613dc861474f565b613dd06147a7565b613dfb6040518060800160405280600081526020016000815260200160008152602001606081525090565b8c8581518110613e0d57613e0d6150d4565b60200260200101518260000181815250508973__$2fc864095126d4d9b433a37f83d02318c7$__63e23edbef90918f8881518110613e4d57613e4d6150d4565b60200260200101516040518363ffffffff1660e01b8152600401613e72929190615c21565b602060405180830381865af4158015613e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613eb39190615076565b613ebd90876150a5565b6040830152600160608084018290528c81015190830152613f05908e90613ee490886150a5565b81518110613ef457613ef46150d4565b602002602001015183836000612e8c565b60408601526020850181905290945015159150613f2990505750505050505061415d565b670de0b6b3a76400008160400151602001518260200151613f4a9190615127565b613f549190615105565b935073__$2fc864095126d4d9b433a37f83d02318c7$__6350308ede86888e613f7e6001896150a5565b81518110613f8e57613f8e6150d4565b6020026020010151866040518563ffffffff1660e01b8152600401613fb69493929190615c34565b600060405180830381865af4158015613fd3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613ffb9190810190615c73565b604080840151519083015151919850919650670de0b6b3a76400009161402091615127565b61402a9190615105565b60408087018051929092528281015181015191510151670de0b6b3a76400009161405391615127565b61405d9190615105565b85604001516040018181525050670de0b6b3a7640000856020015182604001516020015183602001516140909190615127565b61409a9190615105565b8660400151602001516140ad9190615127565b6140b79190615105565b604086015160200152508190506140cd81615cd6565b915050613db8565b50505b604051637513ce1b60e01b815273__$2fc864095126d4d9b433a37f83d02318c7$__90637513ce1b9061411390869085908790600401615465565b600060405180830381865af4158015614130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526141589190810190615692565b925050505b949350505050565b606060008060006006600073__$669c6e0eba2465bd6779ea6ec5db3af1b5$__6376254ff98c8c6040518363ffffffff1660e01b81526004016141b2929190918252602082015260400190565b602060405180830381865af41580156141cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141f39190615076565b81526020810191909152604001600020805490915085614211578095505b856001600160401b0381111561422957614229614854565b60405190808252806020026020018201604052801561426257816020015b61424f614668565b8152602001906001900390816142475790505b50945060005b8181101561460f5786841061427c5761460f565b600060056000858481548110614294576142946150d4565b90600052602060002001548152602001908152602001600020905073__$f7122df39a5f3bad28f404771cd5173291$__63084b5b2c826040518263ffffffff1660e01b81526004016142e69190615dc8565b602060405180830381865af4158015614303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143279190615076565b15806143ab5750604051630212d6cb60e21b8152429073__$f7122df39a5f3bad28f404771cd5173291$__9063084b5b2c90614367908590600401615dc8565b602060405180830381865af4158015614384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143a89190615076565b10155b80156144c8575060405163023aa9ab60e61b81527f33ffbdff3a4282df4353f3593b78d26aaf4c28b5786164f828858505bc5e301c60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638eaa6ac090602401602060405180830381865afa158015614436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061445a91906151eb565b6001600160a01b0316635aca1641828c6040518363ffffffff1660e01b8152600401614487929190615dd7565b602060405180830381865afa1580156144a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144c89190615059565b156145fb57856144d7816150ea565b9650508886116144e757506145fd565b60006145108584815481106144fe576144fe6150d4565b90600052602060002001546001612667565b90508060a00151816080015110156145295750506145fd565b8060600151888781518110614540576145406150d4565b602002602001015160000181815250508060400151888781518110614567576145676150d4565b602002602001015160200181815250508060a0015188878151811061458e5761458e6150d4565b6020026020010151606001818152505080608001518887815181106145b5576145b56150d4565b602002602001015160400181815250508061010001518887815181106145dd576145dd6150d4565b602090810291909101015160800152856145f6816150ea565b965050505b505b80614607816150ea565b915050614268565b50505082525095945050505050565b60405180608001604052806000815260200161465460405180606001604052806000815260200160008152602001600081525090565b815260200160608152602001606081525090565b6040518060c001604052806000815260200160008019168152602001600081526020016000815260200160008152602001606081525090565b604051806101c0016040528060006001600160a01b0316815260200160008019168152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000600581111561472357614723614e17565b8152600060209091015290565b6040518061050001604052806028906020820280368337509192915050565b6040518060c00160405280606081526020016000815260200161478c60405180606001604052806000815260200160008152602001600081525090565b81526020016000815260200160008152602001606081525090565b6040518060e0016040528060008019168152602001600081526020016000815260200160001515815260200160001515815260200160008152602001606081525090565b600080858511156147fb57600080fd5b8386111561480857600080fd5b5050820193919092039150565b60006020828403121561482757600080fd5b81356001600160e01b031981168114610bac57600080fd5b6001600160a01b0381168114611c2557600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561488c5761488c614854565b60405290565b604051608081016001600160401b038111828210171561488c5761488c614854565b604080519081016001600160401b038111828210171561488c5761488c614854565b604051601f8201601f191681016001600160401b03811182821017156148fe576148fe614854565b604052919050565b8015158114611c2557600080fd5b803561491f81614906565b919050565b600061010080838503121561493857600080fd5b604051908101906001600160401b038211818310171561495a5761495a614854565b6040918252833581526020808501359082015291508201358161497c82614906565b81604082015261498e60608501614914565b60608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152505092915050565b60006001600160401b038211156149dc576149dc614854565b5060051b60200190565b600082601f8301126149f757600080fd5b81356020614a0c614a07836149c3565b6148d6565b82815260059290921b84018101918181019086841115614a2b57600080fd5b8286015b84811015614a465780358352918301918301614a2f565b509695505050505050565b6000806000806000806101a08789031215614a6b57600080fd5b8635614a768161483f565b9550602087013594506040870135614a8d8161483f565b935060608701359250614aa38860808901614924565b91506101808701356001600160401b03811115614abf57600080fd5b614acb89828a016149e6565b9150509295509295509295565b600081518084526020808501945080840160005b83811015614b0857815187529582019590820190600101614aec565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015614b99578284038952815180518552858101518686015260408082015190860152606080820151908601526080808201519086015260a09081015160c091860182905290614b8581870183614ad8565b9a87019a9550505090840190600101614b31565b5091979650505050505050565b60a081526000614bb960a0830186614b13565b905083602083015261415d60408301848051825260208082015190830152604090810151910152565b60008060008060608587031215614bf857600080fd5b843593506020850135925060408501356001600160401b0380821115614c1d57600080fd5b818701915087601f830112614c3157600080fd5b813581811115614c4057600080fd5b8860208260051b8501011115614c5557600080fd5b95989497505060200194505050565b600081518084526020808501945080840160005b83811015614b08578151805188528301518388015260409096019590820190600101614c78565b600060408083526101008084018651838601526020808801516060614cda818901838051825260208082015190830152604090810151910152565b858a015160c0898101819052815195869052610120600587901b8b0181019692860194509091908a019060005b81811015614d9c578b880361011f19018352855180518a8a52614d2c8b8b0182614ad8565b905088820151898b01528b820151614d5a8d8c01828051825260208082015190830152604090810151910152565b508187015160a08b8101919091526080830151878c01529091015189820360e08b015290614d888183614ad8565b995050509486019491860191600101614d07565b50505050890151878403603f190160e08901529450614dbd90508285614b13565b935085840381870152505050614dd38185614c64565b95945050505050565b60008060408385031215614def57600080fd5b50508035926020909101359150565b600060208284031215614e1057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60068110614e4b57634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b031681526101c081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525061016080840151818401525061018080840151614eea82850182614e2d565b50506101a08381015160ff81168483015261385e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614f5557603f19888603018452614f43858351614ad8565b94509285019290850190600101614f27565b5092979650505050505050565b600060208284031215614f7457600080fd5b813565ffffffffffff81168114610bac57600080fd5b600060208284031215614f9c57600080fd5b81356001600160401b0381168114610bac57600080fd5b6000806000806101608587031215614fca57600080fd5b8435935060208501359250614fe28660408701614924565b91506101408501356001600160401b03811115614ffe57600080fd5b61500a878288016149e6565b91505092959194509250565b60006020828403121561502857600080fd5b813563ffffffff81168114610bac57600080fd5b60006020828403121561504e57600080fd5b8135610bac8161483f565b60006020828403121561506b57600080fd5b8151610bac81614906565b60006020828403121561508857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156150b7576150b761508f565b500390565b600082198211156150cf576150cf61508f565b500190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156150fe576150fe61508f565b5060010190565b60008261512257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156151415761514161508f565b500290565b634e487b7160e01b600052600160045260246000fd5b600082601f83011261516d57600080fd5b8151602061517d614a07836149c3565b82815260059290921b8401810191818101908684111561519c57600080fd5b8286015b84811015614a4657805183529183019183016151a0565b6000602082840312156151c957600080fd5b81516001600160401b038111156151df57600080fd5b61415d8482850161515c565b6000602082840312156151fd57600080fd5b8151610bac8161483f565b6001600160a01b038716815260208082018790526040820186905260608201859052608082018490526105a082019060a083018460005b602881101561525c5781518352918301919083019060010161523f565b50505050979650505050505050565b6000825160005b8181101561528c5760208186018101518583015201615272565b8181111561529b576000828501525b509190910192915050565b80516101008084528151908401819052600091610120850191602091820190845b818110156152e3578251855293830193918301916001016152c7565b50505083810151908501526040808401518051828701526020810151606087015290810151608086015250606083015160a0850152608083015160c085015260a083015184820360e0860152614dd38282614ad8565b600081518084526020808501808196508360051b8101915082860160005b85811015614b99578284038952815180518552858101518686015260408082015190860152606080820151908601526080808201519086015260a09081015160c0918601829052906153ab81870183614ad8565b9a87019a9550505090840190600101615357565b600060c08301825184526020808401516153ef828701828051825260208082015190830152604090810151910152565b50604084015160c0608087015282815180855260e08801915060e08160051b8901019450838301925060005b818110156154495760df198987030183526154378685516152a6565b9550928401929184019160010161541b565b5050505050606083015184820360a0860152614dd38282615339565b60608152600061547860608301866153bf565b828103602084015261548a81866152a6565b9050828103604084015261549e8185615339565b9695505050505050565b6000606082840312156154ba57600080fd5b604051606081018181106001600160401b03821117156154dc576154dc614854565b80604052508091508251815260208301516020820152604083015160408201525092915050565b6000610100828403121561551657600080fd5b61551e61486a565b905081516001600160401b038082111561553757600080fd5b6155438583860161515c565b83526020840151602084015261555c85604086016154a8565b604084015260a0840151606084015260c0840151608084015260e084015191508082111561558957600080fd5b506155968482850161515c565b60a08301525092915050565b600082601f8301126155b357600080fd5b815160206155c3614a07836149c3565b82815260059290921b840181019181810190868411156155e257600080fd5b8286015b84811015614a465780516001600160401b03808211156156065760008081fd5b9088019060c0828b03601f19018113156156205760008081fd5b61562861486a565b87840151815260408085015189830152606080860151828401526080915081860151818401525060a080860151828401528386015193508484111561566f57600091508182fd5b61567d8e8b8689010161515c565b908301525086525050509183019183016155e6565b600060208083850312156156a557600080fd5b82516001600160401b03808211156156bc57600080fd5b9084019060c082870312156156d057600080fd5b6156d8614892565b825181526156e8878585016154a8565b848201526080830151828111156156fe57600080fd5b8301601f8101881361570f57600080fd5b805161571d614a07826149c3565b81815260059190911b8201860190868101908a83111561573c57600080fd5b8784015b83811015615774578051878111156157585760008081fd5b6157668d8b83890101615503565b845250918801918801615740565b50604085015250505060a083015193508184111561579157600080fd5b61579d878585016155a2565b60608201529695505050505050565b6040815260006157bf60408301856153bf565b8281036020840152614dd381856153bf565b6060815260006154786060830186614c64565b600060208083850312156157f757600080fd5b82516001600160401b0381111561580d57600080fd5b8301601f8101851361581e57600080fd5b805161582c614a07826149c3565b81815260069190911b8201830190838101908783111561584b57600080fd5b928401925b8284101561588e57604084890312156158695760008081fd5b6158716148b4565b845181528585015186820152825260409093019290840190615850565b979650505050505050565b6040815260006158ac6040830185615339565b8281036020840152614dd38185615339565b6000602082840312156158d057600080fd5b81516001600160401b038111156158e657600080fd5b61415d848285016155a2565b6000806040838503121561590557600080fd5b505080516020909101519092909150565b60008060006060848603121561592b57600080fd5b8351925060208401519150604084015190509250925092565b81518152602080830151610180830191615968908401826001600160a01b03169052565b50604083015161597b6040840182614e2d565b506060830151615990606084018260ff169052565b506080830151608083015260a08301516159b560a08401826001600160401b03169052565b5060c08301516159d060c08401826001600160401b03169052565b5060e08301516159eb60e08401826001600160401b03169052565b50610100838101516001600160401b0390811691840191909152610120808501518216908401526101408085015182169084015261016080850151918216818501529061385e565b604081526000615a466040830185615339565b90508260208301529392505050565b805182526020810151602083015260408101516040830152600060608201516080606085015261415d6080850182615339565b60a081526000615a9b60a0830188615339565b866020840152828103604084015285518152602086015160208201526040860151604082015260608601511515606082015260808601511515608082015260a086015160a082015260c086015160e060c0830152615afc60e0830182614ad8565b9150508281036060840152615b118186615a55565b90508281036080840152615b258185615339565b98975050505050505050565b600080600060a08486031215615b4657600080fd5b83516001600160401b03811115615b5c57600080fd5b615b68868287016155a2565b93505060208401519150615b7f85604086016154a8565b90509250925092565b602081526000610bac6020830184615339565b60008060808385031215615bae57600080fd5b82519150615bbf84602085016154a8565b90509250929050565b606081526000615bdb60608301866152a6565b60208301949094525060400152919050565b600060208284031215615bff57600080fd5b81516001600160401b03811115615c1557600080fd5b61415d84828501615503565b604081526000615a466040830185614c64565b608081526000615c4760808301876152a6565b8281036020840152615c598187615339565b9050846040840152828103606084015261588e8185615339565b60008060408385031215615c8657600080fd5b82516001600160401b0380821115615c9d57600080fd5b615ca986838701615503565b93506020850151915080821115615cbf57600080fd5b50615ccc858286016155a2565b9150509250929050565b600081615ce557615ce561508f565b506000190190565b8054825260018101546001600160a01b0381166020840152615d186040840160ff8360a01c16614e2d565b60a81c60ff1660608301526002810154608083015260038101546001600160401b0380821660a0850152604082901c811660c0850152615d6860e08501828460801c166001600160401b03169052565b60c082901c61010085015260048301546001600160401b03828216166101208601529150615da76101408501828460401c166001600160401b03169052565b615dc26101608501828460801c166001600160401b03169052565b50505050565b61018081016106da8284615ced565b60006101a0808301615de98487615ced565b6101808401919091528351908190526101c083019060209081860160005b82811015614f5557815185529383019390830190600101615e0756fea2646970667358221220320a65d0e2d793a1e6159e748a9aba561dba27d9da6042b2a6d4f4bdd3d90f8764736f6c634300080b0033", "deployedSourceMap": "221:26616:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3297:27:23;:25;:27::i;:::-;4523:16:::1;4542:14;4553:2;4551:1;4542:8;4523:16:::0;4542:14:::1;:::i;:::-;4523:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;4656:2:23::1;4647:12:::0;::::1;4641:19:::0;4647:12;;-1:-1:-1;4523:33:23;-1:-1:-1;;4820:14:23::1;-1:-1:-1::0;;4816:23:23;;;-1:-1:-1;;;4875:23:23;4896:1:::1;4523:33:::0;;4912:21:::1;4966:15;4962:2;4959:1;4946:36;5277:1;5258::::0;5225:15:::1;5206:1;5173:15;5150:5;5120:172;5109:183;;;;5311:16;5319:7;5311;:16::i;:::-;4513:821;;;221:26616:16::0;1107:206:23;;;;;;:::i;:::-;;:::i;:::-;;;806:14:49;;799:22;781:41;;769:2;754:18;1107:206:23;;;;;;;;3764:82;;;:::i;:::-;;6724:526:16;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;12464:1393::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;656:139:14:-;;;;;;:::i;:::-;;:::i;3476:151:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;787:113:39:-;;;;;;:::i;:::-;;:::i;:::-;;;14096:10:49;14084:23;;;14066:42;;14054:2;14039:18;787:113:39;13922:192:49;3041:204:23;;;:::i;248:174:39:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;14388:31:49;;;14370:50;;14358:2;14343:18;248:174:39;14226:200:49;863:1119:14;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2066:101:32:-;;;:::i;3680:78:23:-;;;:::i;428:114:39:-;;;;;;:::i;:::-;;:::i;:::-;;;15896:25:49;;;15884:2;15869:18;428:114:39;15750:177:49;385:73:31;;;:::i;1136:85:32:-;1182:7;1208:6;;;;-1:-1:-1;;;;;1208:6:32;1136:85;;;-1:-1:-1;;;;;16096:32:49;;;16078:51;;16066:2;16051:18;1136:85:32;15932:203:49;463:73:31;507:4;522:12;;;;;;463:73;;586:92:16;193:25;586:92;;128:114:39;;;;;;:::i;:::-;;:::i;13863:500:16:-;;;;;;:::i;:::-;;:::i;5428:1290::-;;;;;;:::i;:::-;;:::i;14369:1293::-;;;;;;:::i;:::-;;:::i;1069:31:23:-;;;;;3852:77;;;:::i;667:114:39:-;;;;;;:::i;:::-;;:::i;7256:1287:16:-;;;;;;:::i;:::-;;:::i;2316:198:32:-;;;;;;:::i;:::-;;:::i;548:113:39:-;;;;;;:::i;:::-;;:::i;:::-;;;18170:14:49;18158:27;;;18140:46;;18128:2;18113:18;548:113:39;17996:196:49;3348:293:23;1182:7:32;1208:6;-1:-1:-1;;;;;1208:6:32;;;;;666:10:3;3431:23:23;;3430:73;;-1:-1:-1;;;;;;3475:3:23;:14;;666:10:3;3475:28:23;;-1:-1:-1;;;;;;3475:28:23;;;;;;;-1:-1:-1;;;;;16096:32:49;;;3475:28:23;;;16078:51:49;16051:18;;3475:28:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3430:121;;;-1:-1:-1;;;;;;3523:3:23;:14;;666:10:3;3523:28:23;;-1:-1:-1;;;;;;3523:28:23;;;;;;;-1:-1:-1;;;;;16096:32:49;;;3523:28:23;;;16078:51:49;16051:18;;3523:28:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3409:225;;;;-1:-1:-1;;;3409:225:23;;18649:2:49;3409:225:23;;;18631:21:49;18688:2;18668:18;;;18661:30;18727:34;18707:18;;;18700:62;18798:27;18778:18;;;18771:55;18843:19;;3409:225:23;;;;;;;;;3348:293::o;4128:326::-;4235:16;4232:1;4229;4214:38;4272:7;4292:66;;;;4407:16;4404:1;4397:27;4292:66;4327:16;4324:1;4317:27;1107:206;1183:4;-1:-1:-1;;;;;;1210:40:23;;-1:-1:-1;;;1210:40:23;;:96;;-1:-1:-1;;;;;;;1254:52:23;;-1:-1:-1;;;1254:52:23;1210:96;1203:103;1107:206;-1:-1:-1;;1107:206:23:o;3764:82::-;3297:27;:25;:27::i;:::-;3827:12:::1;718:5:31::0;711:12;;-1:-1:-1;;711:12:31;;;670:55;6724:526:16;6973:17;7004:7;7025:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;7025:12:16;7105:30;;-1:-1:-1;;;7105:30:16;;-1:-1:-1;;;;;19065:32:49;;;7105:30:16;;;19047:51:49;19114:18;;;19107:34;;;7081:162:16;;7105:3;:14;;;;;;19020:18:49;;7105:30:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7153:26;;-1:-1:-1;;;7153:26:16;;-1:-1:-1;;;;;19065:32:49;;;7153:26:16;;;19047:51:49;19114:18;;;19107:34;;;7153:3:16;:14;;;;19020:18:49;;7153:26:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7197:5;7220:9;7081:6;:162::i;:::-;7062:181;;;;;;6724:526;;;;;;;;;;:::o;12464:1393::-;12604:23;;:::i;:::-;12628:30;12929:21;12975:5;12997:101;13020:7;13026:1;13020:3;:7;:::i;:::-;13004:13;:23;12997:101;;;13062:5;;13068:17;13072:13;13068:1;:17;:::i;:::-;13062:24;;;;;;;:::i;:::-;;;;;;;13090:1;13062:29;13058:40;;;13093:5;;13058:40;13029:15;;;;:::i;:::-;;;;12997:101;;;13109:25;13151:13;-1:-1:-1;;;;;13137:28:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13137:28:16;;13109:56;;13180:9;13175:82;13199:13;13195:1;:17;13175:82;;;13245:5;;13251;:1;13255;13251:5;:::i;:::-;13245:12;;;;;;;:::i;:::-;;;;;;;13231:8;13240:1;13231:11;;;;;;;;:::i;:::-;;;;;;;;;;:26;13214:3;;;;:::i;:::-;;;;13175:82;;;;13287:563;13314:13;13345:269;;;;;;;;13395:11;13345:269;;;;13428:5;;13434:1;13428:8;;;;;;;:::i;:::-;;;;;;;13345:269;;;;13458:5;;13464:1;13458:8;;;;;;;:::i;:::-;;;;;;;13345:269;;;;13488:5;;13494:1;13488:8;;;;;;;:::i;:::-;;;;;;;13500:1;13488:13;;13345:269;;;;;;13523:5;;13529:1;13523:8;;;;;;;:::i;:::-;;;;;;;13535:1;13523:13;;13345:269;;;;;;13558:5;;13564:1;13558:8;;;;;;;:::i;:::-;;;;;;;13345:269;;;;13588:8;13345:269;;;13632:169;;;;;;;;13676:5;;13682:1;13676:8;;;;;;;:::i;:::-;;;;;;;13632:169;;;;13706:5;;13712:1;13706:8;;;;;;;:::i;:::-;;;;;;;13632:169;;;;13736:5;;13742:1;13736:8;;;;;;;:::i;:::-;;;;;;;;;;13632:169;;-1:-1:-1;13632:169:16;13781:1;13766:17;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;13632:169:16;;13819:17;;;13834:1;13819:17;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;13819:17:16;;;;;;;;;;;;;;;;13287:9;:563::i;:::-;13268:582;;;;;;;12464:1393;;;;;;;;:::o;656:139:14:-;728:4;755:16;;;:9;:16;;;;;;:33;;-1:-1:-1;;;755:33:14;;;;;20216:25:49;;;;20257:18;;;20250:34;;;755:24:14;;;;20189:18:49;;755:33:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;748:40;656:139;-1:-1:-1;;;656:139:14:o;3476:151:11:-;3552:23;;:::i;:::-;3598:22;3606:6;3614:5;3598:7;:22::i;787:113:39:-;847:6;879:13;886:6;879:4;:13;:::i;3041:204:23:-;1182:7:32;1208:6;-1:-1:-1;;;;;1208:6:32;;;;;666:10:3;3111:23:23;;3110:57;;-1:-1:-1;;;;;;3139:3:23;:14;;666:10:3;3139:28:23;;-1:-1:-1;;;;;;3139:28:23;;;;;;;-1:-1:-1;;;;;16096:32:49;;;3139:28:23;;;16078:51:49;16051:18;;3139:28:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3089:149;;;;-1:-1:-1;;;3089:149:23;;20719:2:49;3089:149:23;;;20701:21:49;20758:2;20738:18;;;20731:30;20797:34;20777:18;;;20770:62;-1:-1:-1;;;20848:18:49;;;20841:43;20901:19;;3089:149:23;20517:409:49;248:174:39;308:6;;340:13;347:6;340:4;:13;:::i;:::-;326:27;-1:-1:-1;382:4:39;370:10;326:27;374:6;370:10;:::i;:::-;:16;;363:24;;;;:::i;863:1119:14:-;985:25;1013:16;;;:9;:16;;;;;;;;985:44;;;;;;;;;;;;;;;;;946:23;;985:25;:44;;1013:16;985:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1064:8;:15;-1:-1:-1;;;;;1048:32:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:39;;1090:13;1118:9;1113:749;1133:8;:15;1129:1;:19;1113:749;;;831:3:11;-1:-1:-1;;;;;1174:25:14;;1200:8;1209:1;1200:11;;;;;;;;:::i;:::-;;;;;;;1174:38;;;;;;;;;;;;;15896:25:49;;15884:2;15869:18;;15750:177;1174:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1169:69;;1230:8;;1169:69;1252:21;831:3:11;-1:-1:-1;;;;;1276:38:14;;1332:8;1341:1;1332:11;;;;;;;;:::i;:::-;;;;;;;1276:81;;;;;;;;;;;;;15896:25:49;;15884:2;15869:18;;15750:177;1276:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1276:81:14;;;;;;;;;;;;:::i;:::-;1252:105;;1393:1;1379:4;:11;:15;1371:51;;;;-1:-1:-1;;;1371:51:14;;22470:2:49;1371:51:14;;;22452:21:49;22509:2;22489:18;;;22482:30;-1:-1:-1;;;22528:18:49;;;22521:53;22591:18;;1371:51:14;22268:347:49;1371:51:14;1436:9;1459:311;1484:1;1470:4;:11;:15;;;;:::i;:::-;1466:1;:19;1459:311;;;1534:212;1584:17;:36;1650:4;1655:1;1650:7;;;;;;;;:::i;:::-;;;;;;;1687:4;1692:1;1696;1692:5;;;;:::i;:::-;1687:11;;;;;;;;:::i;:::-;;;;;;;1584:140;;;;;;;;;;;;;;;20216:25:49;;;20272:2;20257:18;;20250:34;20204:2;20189:18;;20008:282;1584:140:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;937:4:11;964:22;;;:13;:22;;;;;:29;:33;;;846:158;1534:212:14;1508:262;;1765:5;;1508:262;1487:3;;;;:::i;:::-;;;;1459:311;;;1806:1;1792:4;:11;:15;;;;:::i;:::-;1788:1;:19;1784:33;;;1809:8;;;;1784:33;1847:4;1831;1836:7;;;;:::i;:::-;;;1831:13;;;;;;;;:::i;:::-;;;;;;:20;;;;1155:707;;1113:749;1150:3;;;;:::i;:::-;;;;1113:749;;;;1907:5;1901:4;1894:19;1948:1;1940:5;:9;1932:43;;;;-1:-1:-1;;;1932:43:14;;23083:2:49;1932:43:14;;;23065:21:49;23122:2;23102:18;;;23095:30;-1:-1:-1;;;23141:18:49;;;23134:51;23202:18;;1932:43:14;22881:345:49;1932:43:14;975:1007;;863:1119;;;:::o;2066:101:32:-;2430:12:23;:10;:12::i;:::-;2130:30:32::1;2157:1;2130:18;:30::i;3680:78:23:-:0;3297:27;:25;:27::i;:::-;3741:10:::1;652:5:31::0;:11;;-1:-1:-1;;652:11:31;659:4;652:11;;;613:52;428:114:39;487:7;513:22;:13;;;529:6;513:22;:::i;385:73:31:-;422:4;437:5;;;;;:19;;-1:-1:-1;444:12:31;;;;;;;437:19;430:26;;385:73;:::o;128:114:39:-;187:7;213:22;-1:-1:-1;;;;;213:13:39;;229:6;213:22;:::i;13863:500:16:-;14113:18;;:::i;:::-;14218:30;;-1:-1:-1;;;14218:30:16;;-1:-1:-1;;;;;19065:32:49;;;14218:30:16;;;19047:51:49;19114:18;;;19107:34;;;14132:17:16;;14193:163;;14218:3;:14;;;;19020:18:49;;14218:30:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14266:26;;-1:-1:-1;;;14266:26:16;;-1:-1:-1;;;;;19065:32:49;;;14266:26:16;;;19047:51:49;19114:18;;;19107:34;;;14266:3:16;:14;;;;19020:18:49;;14266:26:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14310:5;14333:9;14193:7;:163::i;:::-;14174:182;;;;13863:500;;;;;;;;;:::o;5428:1290::-;5588:22;5624:12;5650;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5650:12:16;5945:21;;5991:14;6004:1;5991:5;:14;:::i;:::-;5980:25;;6015:97;6038:3;6022:13;:19;6015:97;;;6076:5;;6082:17;6086:13;6082:1;:17;:::i;:::-;6076:24;;;;;;;:::i;:::-;;;;;;;6104:1;6076:29;6072:40;;;6107:5;;6072:40;6043:15;;;;:::i;:::-;;;;6015:97;;;6123:25;6165:13;-1:-1:-1;;;;;6151:28:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:28:16;;6123:56;;6194:9;6189:82;6213:13;6209:1;:17;6189:82;;;6259:5;;6265;:1;6269;6265:5;:::i;:::-;6259:12;;;;;;;:::i;:::-;;;;;;;6245:8;6254:1;6245:11;;;;;;;;:::i;:::-;;;;;;;;;;:26;6228:3;;;;:::i;:::-;;;;6189:82;;;;6301:410;6327:5;6350:248;;;;;;;;6387:3;6350:248;;;;6412:5;;6418:1;6412:8;;;;;;;:::i;:::-;;;;;;;6350:248;;;;6442:5;;6448:1;6442:8;;;;;;;:::i;:::-;;;;;;;6350:248;;;;6472:5;;6478:1;6472:8;;;;;;;:::i;:::-;;;;;;;6484:1;6472:13;;6350:248;;;;;;6507:5;;6513:1;6507:8;;;;;;;:::i;:::-;;;;;;;6519:1;6507:13;;6350:248;;;;;;6542:5;;6548:1;6542:8;;;;;;;:::i;:::-;;;;;;;6350:248;;;;6572:8;6350:248;;;6616:58;;;;;;;;6626:5;;6632:1;6626:8;;;;;;;:::i;:::-;;;;;;;6616:58;;;;6636:5;;6642:1;6636:8;;;;;;;:::i;:::-;;;;;;;6616:58;;;;6646:5;;6652:1;6646:8;;;;;;;:::i;:::-;;;;;;;;;;6616:58;;-1:-1:-1;6616:58:16;6671:1;6656:17;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;6616:58:16;;6692:5;6301:8;:410::i;:::-;6282:429;;;;;;;;;5428:1290;;;;;;;;;:::o;14369:1293::-;14585:18;;:::i;:::-;14657:16;;14604:17;;14698:2;14691:9;;;14683:51;;;;-1:-1:-1;;;14683:51:16;;23433:2:49;14683:51:16;;;23415:21:49;23472:2;23452:18;;;23445:30;23511:31;23491:18;;;23484:59;23560:18;;14683:51:16;23231:353:49;14683:51:16;14775:23;;:::i;:::-;14818:17;;14808:27;;:7;14855:9;;;;14845:7;;;:19;14884:14;;;;:22;;14905:1;14884:22;;;14901:1;14884:22;14874:32;;:7;;;:32;14926:14;;;;:22;;14947:1;14926:22;;;14943:1;14926:22;14916:32;;:7;;;:32;14968:14;;;;;14958:7;;;:24;15002:14;;;;;14992:7;;;:24;15036:17;;;;;15026:7;;;:27;15073:14;;;;;15063:7;;;:24;15128:1;-1:-1:-1;15143:102:16;15167:3;15163:1;:7;15143:102;;;15197:9;15207:1;15197:12;;;;;;;;:::i;:::-;;;;;;;15213:1;15197:17;15193:52;;15233:9;15243:1;15233:12;;;;;;;;:::i;:::-;;;;;;;15216:4;15221:8;;;;;:::i;:::-;;;15216:14;;;;;;;:::i;:::-;;;;:29;15193:52;15172:3;;;;:::i;:::-;;;;15143:102;;;-1:-1:-1;;15284:15:16;;-1:-1:-1;;;15284:15:16;;336:19:11;15284:15:16;;;15896:25:49;15266:12:16;;15284:3;-1:-1:-1;;;;;15284:7:16;;;;15869:18:49;;15284:15:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15284:26:16;15371:49;15447:4;15470:13;15501:11;15538:6;15571:11;15601:4;15324:295;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15324:295:16;;;;;;;;;;;;;;-1:-1:-1;;;;;15324:295:16;-1:-1:-1;;;;;;15324:295:16;;;;;;;;;;15284:345;;;;15324:295;15284:345;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15265:364;;;15639:16;15647:7;15639;:16::i;:::-;14636:1026;;;14369:1293;;;;;;;:::o;3852:77:23:-;2430:12;:10;:12::i;:::-;3905:17:::1;588:12:31::0;:18;;-1:-1:-1;;588:18:31;;;;;542:66;667:114:39;726:7;752:22;:13;;;768:6;752:22;:::i;7256:1287:16:-;7455:17;7486:7;7507:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;7507:12:16;7555:16;;7596:2;7589:9;;;7581:51;;;;-1:-1:-1;;;7581:51:16;;23433:2:49;7581:51:16;;;23415:21:49;23472:2;23452:18;;;23445:30;23511:31;23491:18;;;23484:59;23560:18;;7581:51:16;23231:353:49;7581:51:16;7673:23;;:::i;:::-;7716:17;;7706:27;;:7;7753:9;;;;7743:7;;;:19;7782:14;;;;:22;;7803:1;7782:22;;;7799:1;7782:22;7772:32;;:7;;;:32;7824:14;;;;:22;;7845:1;7824:22;;;7841:1;7824:22;7814:32;;:7;;;:32;7866:14;;;;;7856:7;;;:24;7900:14;;;;;7890:7;;;:24;7934:17;;;;;7924:7;;;:27;7971:14;;;;;7961:7;;;:24;8026:1;-1:-1:-1;8041:102:16;8065:3;8061:1;:7;8041:102;;;8095:9;8105:1;8095:12;;;;;;;;:::i;:::-;;;;;;;8111:1;8095:17;8091:52;;8131:9;8141:1;8131:12;;;;;;;;:::i;:::-;;;;;;;8114:4;8119:8;;;;;:::i;:::-;;;8114:14;;;;;;;:::i;:::-;;;;:29;8091:52;8070:3;;;;:::i;:::-;;;;8041:102;;;-1:-1:-1;;8182:15:16;;-1:-1:-1;;;8182:15:16;;336:19:11;8182:15:16;;;15896:25:49;8164:12:16;;8182:3;-1:-1:-1;;;;;8182:7:16;;;;15869:18:49;;8182:15:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8182:26:16;8269:48;8344:4;8367:5;8390:3;8419:6;8452:11;8482:4;8222:278;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8222:278:16;;;;;;;;;;;;;;-1:-1:-1;;;;;8222:278:16;-1:-1:-1;;;;;;8222:278:16;;;;;;;;;;8182:328;;;;8222:278;8182:328;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:347;;;8520:16;8528:7;8520;:16::i;:::-;7534:1009;;;7256:1287;;;;;;;;:::o;2316:198:32:-;2430:12:23;:10;:12::i;:::-;-1:-1:-1;;;;;2404:22:32;::::1;2396:73;;;::::0;-1:-1:-1;;;2396:73:32;;25352:2:49;2396:73:32::1;::::0;::::1;25334:21:49::0;25391:2;25371:18;;;25364:30;25430:34;25410:18;;;25403:62;-1:-1:-1;;;25481:18:49;;;25474:36;25527:19;;2396:73:32::1;25150:402:49::0;2396:73:32::1;2479:28;2498:8;2479:18;:28::i;:::-;2316:198:::0;:::o;548:113:39:-;608:6;640:13;647:6;640:4;:13;:::i;20512:6323:16:-;20722:23;;:::i;:::-;20803:9;20822:26;;:::i;:::-;20872:24;20899:34;20909:5;20916:7;:16;;;20899:9;:34::i;:::-;20958:12;;20872:61;;-1:-1:-1;20947:8:16;20984:485;21004:3;21000:1;:7;20984:485;;;21032:27;;:::i;:::-;21104:203;21134:5;21140:1;21134:8;;;;;;;;:::i;:::-;;;;;;;21161:1;21143:5;21149:1;21143:8;;;;;;;;:::i;:::-;;;;;;;:15;:19;;;;:::i;:::-;21134:29;;;;;;;;:::i;:::-;;;;;;;21185:7;21214:48;;;;;;;;21237:1;21214:48;;;;21240:1;21214:48;;;;21243:1;21214:48;;;;21246:10;:15;;;21214:48;;;21284:5;21104:8;:203::i;:::-;21090:10;;;21077:230;21080:8;;;21077:230;;;21329:13;21325:27;;-1:-1:-1;21325:27:16;;21344:8;;;21325:27;21382:5;21388:1;21382:8;;;;;;;;:::i;:::-;;;;;;;;;;;21370:20;;21418:11;;:7;21370:4;:9;21436:17;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21418:36;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21418:36:16;;;;;;;;;;;;:::i;:::-;21408:46;;21014:455;20984:485;21009:3;;;;:::i;:::-;;;;20984:485;;;-1:-1:-1;;;21503:13:16;;;;:20;21537:10;21533:54;;21561:26;;;;21533:54;21639:29;;:::i;:::-;21710:16;;21692:34;;21764:22;;;;;21740:21;;;:46;21813:11;;;;;21800:10;;;:24;21856:16;;;;;21838:34;;:15;;;:34;21904:16;;;;;21886:34;;:15;;;:34;21952:16;;;;;21934:15;;;:34;22001:16;;;;;21983:15;;;:34;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22108:19:16;;22087:40;;22165:22;;;;22141:46;;;22222:19;;;;22201:40;;;22272:15;;;;22255:32;;;22362:7;-1:-1:-1;;;;;22344:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22307:63;;22381:13;22404:4423;22460:19;;22439:40;;22511:1;22493:15;;;:19;22460;22526:371;22543:7;22539:1;:11;22526:371;;;22594:173;22635:7;:13;;;22649:1;22635:16;;;;;;;;:::i;:::-;;;;;;;:21;;;22678:6;22706:9;22737:12;22594:19;:173::i;:::-;22575:13;22589:1;22575:16;;;;;;;;:::i;:::-;;;;;;:192;;;;22824:1;22793:13;22807:1;22793:16;;;;;;;;:::i;:::-;;;;;;;:22;;;:29;:32;;22785:97;;;;-1:-1:-1;;;22785:97:16;;34759:2:49;22785:97:16;;;34741:21:49;34798:2;34778:18;;;34771:30;34837:34;34817:18;;;34810:62;-1:-1:-1;;;34888:18:49;;;34881:51;34949:19;;22785:97:16;34557:417:49;22785:97:16;22552:3;;;;:::i;:::-;;;;22526:371;;;-1:-1:-1;;;22911:14:16;;;23042:788;23059:7;23055:1;:11;23042:788;;;23099:13;23113:1;23099:16;;;;;;;;:::i;:::-;;;;;;;:20;;;23121:1;23099:23;23095:61;;;23148:8;;23095:61;-1:-1:-1;;23203:9:16;:25;:69;;;;23241:13;23255:1;23241:16;;;;;;;;:::i;:::-;;;;;;;:22;;;:31;;;23232:8;:40;23203:69;23199:612;;;-1:-1:-1;;23324:9:16;:25;;:69;;;;;23362:13;23376:1;23362:16;;;;;;;;:::i;:::-;;;;;;;:22;;;:31;;;23353:8;:40;23324:69;23320:223;;;23434:8;23423:19;;23320:223;;;23512:13;23526:1;23512:16;;;;;;;;:::i;:::-;;;;;;;:22;;;:31;;;23501:42;;23320:223;23581:1;23569:13;;23619;23633:1;23619:16;;;;;;;;:::i;:::-;;;;;;;:22;;;:31;;;23608:42;;23199:612;;;23712:13;23726:1;23712:16;;;;;;;;:::i;:::-;;;;;;;:22;;;:31;;;23703:8;:40;23699:112;;;23780:13;23794:1;23780:16;;;;;;;;:::i;:::-;;;;;;;:22;;;:31;;;23769:42;;23699:112;23068:3;;;;:::i;:::-;;;;23042:788;;;;-1:-1:-1;;23851:9:16;:25;23847:164;;;23987:5;;;;;23847:164;24029:29;;-1:-1:-1;24087:27:16;;:::i;:::-;24310:181;24351:7;:13;;;24365:9;24351:24;;;;;;;;:::i;:::-;;;;;;;:29;;;24402:6;24430:9;24461:12;24310:19;:181::i;:::-;24299:192;;24517:8;:14;;;:21;24540:1;24517:24;24509:85;;;;-1:-1:-1;;;24509:85:16;;35181:2:49;24509:85:16;;;35163:21:49;35220:2;35200:18;;;35193:30;35259:34;35239:18;;;35232:62;-1:-1:-1;;;35310:18:49;;;35303:47;35367:19;;24509:85:16;34979:413:49;24509:85:16;24626:12;;24622:128;;24674:38;;-1:-1:-1;;;24674:38:16;;35599:2:49;24674:38:16;;;35581:21:49;35638:2;35618:18;;;35611:30;-1:-1:-1;;;35657:18:49;;;35650:51;35718:18;;24674:38:16;35397:345:49;24622:128:16;24770:18;;-1:-1:-1;;;24770:18:16;;:8;;;;:18;;:4;;24779:8;;24770:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24770:18:16;;;;;;;;;;;;:::i;:::-;24763:25;;24813:8;:18;;;:25;24802:36;;;;;:::i;:::-;;;24856:8;:14;;;24871:1;24856:17;;;;;;;;:::i;:::-;;;;;;;:24;;;:31;24889:1;24856:34;24852:127;;24920:8;:14;;;24935:1;24920:17;;;;;;;;:::i;:::-;;;;;;;:24;;;24977:1;24945:8;:14;;;24960:1;24945:17;;;;;;;;:::i;:::-;;;;;;;:24;;;:31;:33;;;;:::i;:::-;24920:59;;;;;;;;:::i;:::-;;;;;;;24908:71;;;;;:::i;:::-;;;24852:127;25008:12;:19;;;;25028:8;:14;;;25043:1;25028:17;;;;;;;;:::i;:::-;;;;;;;25046:8;:18;;;25008:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25008:57:16;;;;;;;;;;;;:::i;:::-;25097:14;;;;;25116:18;;;;25097:38;;-1:-1:-1;;;25097:38:16;;24993:72;;-1:-1:-1;25097:18:16;;;;:38;;:14;;:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25097:38:16;;;;;;;;;;;;:::i;:::-;25080:14;;;:55;25170:19;;25149:40;;25209:16;;;;:19;25205:294;;25274:7;:16;;;25264:8;:26;25260:164;;25330:48;;-1:-1:-1;;;25330:48:16;;39466:2:49;25330:48:16;;;39448:21:49;39505:2;39485:18;;;39478:30;39544:33;39524:18;;;39517:61;39595:18;;25330:48:16;39264:355:49;25260:164:16;25476:8;25459:7;:16;;;:25;;;;:::i;:::-;25441:15;;;:43;25205:294;25516:11;;;;:14;25512:281;;25580:11;;;;25566:12;;:25;25562:162;;25631:47;;-1:-1:-1;;;25631:47:16;;39826:2:49;25631:47:16;;;39808:21:49;39865:2;39845:18;;;39838:30;39904:32;39884:18;;;39877:60;39954:18;;25631:47:16;39624:354:49;25562:162:16;25766:12;;25754:11;;;;:24;;25766:12;25754:24;:::i;:::-;25741:10;;;:37;25512:281;25810:19;;;;:22;25806:371;;25864:13;25911:6;25890:4;:10;;;:19;;;25881:4;:8;;;:28;;;;:::i;:::-;25880:37;;;;:::i;:::-;25864:53;;25946:10;:19;;;25939:5;:26;25935:164;;26005:48;;-1:-1:-1;;;26005:48:16;;40185:2:49;26005:48:16;;;40167:21:49;40224:2;40204:18;;;40197:30;40263:33;40243:18;;;40236:61;40314:18;;26005:48:16;39983:355:49;25935:164:16;26157:5;26137:10;:19;;;:25;;;;:::i;:::-;26116:18;;;:46;-1:-1:-1;25806:371:16;22425:4402;;22404:4423;;;20778:6057;;;;;;20512:6323;;;;;;;:::o;1218:2252:11:-;1312:33;;:::i;:::-;1361:24;1388:15;;;:7;:15;;;;;;;;1361:42;;;;;;;;;;;;;;;-1:-1:-1;;;;;1361:42:11;;;;;;;;;;1388:15;;1361:42;;;;-1:-1:-1;;;1361:42:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;1361:42:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1361:42:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;1361:42:11;;;;;;;;;-1:-1:-1;;;1361:42:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1485:13;;1446:62;;-1:-1:-1;;;1446:62:11;;;;;15896:25:49;1485:13:11;;-1:-1:-1;1446:3:11;-1:-1:-1;;;;;1446:25:11;;;;15869:18:49;;1446:62:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1430:12;;;1413:95;1414:14;;;1413:95;1539:14;;;;1519:17;;;:34;1591:7;;:44;;-1:-1:-1;1619:14:11;;;;1604:30;;-1:-1:-1;;;1604:30:11;;40773:4:49;40761:17;;;1604:30:11;;;40743:36:49;1604:5:11;;:14;;40716:18:49;;1604:30:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1603:31;1591:44;1587:1690;;;1671:14;;;;-1:-1:-1;;;;;1651:34:11;;;1767:10;;;;1751:27;;:15;:27::i;:::-;1735:13;;;:43;1823:14;;;;1810:28;;-1:-1:-1;;;1810:28:11;;40773:4:49;40761:17;;;1810:28:11;;;40743:36:49;1810:5:11;;:12;;40716:18:49;;1810:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1806:330;;;1880:13;;;;1856:21;;;:37;1806:330;;;1916:18;;;;-1:-1:-1;;;;;1916:23:11;;1912:224;;1981:35;1997:6;:18;;;1981:15;:35::i;:::-;1957:21;;;:59;1912:224;;;2094:13;;-1:-1:-1;;;2094:13:11;;555:17:7;2094:13:11;;;15896:25:49;2094:3:11;-1:-1:-1;;;;;2094:7:11;;;;15869:18:49;;2094:13:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2089:31:11;;2121:9;:14;;;2089:47;;;;;;;;;;;;;15896:25:49;;15884:2;15869:18;;15750:177;2089:47:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2065:21;;;:71;1912:224;2170:31;2186:6;:14;;;2170:15;:31::i;:::-;2150:17;;;:51;2277:18;;;;2261:35;;:15;:35::i;:::-;2237:21;;;:59;2404:14;;;;2388:31;;-1:-1:-1;;;2388:31:11;;40773:4:49;40761:17;;;2388:31:11;;;40743:36:49;2388:5:11;;:15;;40716:18:49;;2388:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2384:865;;;2465:37;2481:6;:20;;;2465:15;:37::i;:::-;2439:23;;;:63;2663:25;;;;2626:80;;:15;:80::i;:::-;2595:28;;;:111;2864:17;;-1:-1:-1;;;2864:17:11;;352:21:20;2864:17:11;;;15896:25:49;2806:15:11;;2864:3;-1:-1:-1;;;;;2864:7:11;;;;15869:18:49;;2864:17:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2855:36:11;;2913:9;:14;;;2949:9;:12;;;2855:124;;;;;;;;;;;;;;;20216:25:49;;;20272:2;20257:18;;20250:34;20204:2;20189:18;;20008:282;2855:124:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2839:140:11;-1:-1:-1;;3005:12:11;2997:42;;;;-1:-1:-1;;;2997:42:11;;41745:2:49;2997:42:11;;;41727:21:49;41784:2;41764:18;;;41757:30;-1:-1:-1;;;41803:18:49;;;41796:47;41860:18;;2997:42:11;41543:341:49;2997:42:11;3152:28;;;;3142:38;;:7;:38;:::i;:::-;3095:9;:23;;;:86;;;;:::i;:::-;3057:15;;;:124;-1:-1:-1;2384:865:11;;;3220:29;3236:6;:12;;;3220:15;:29::i;:::-;3202:15;;;:47;2384:865;3305:23;;-1:-1:-1;;;3305:23:11;;:5;;:15;;:23;;3321:6;;3305:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3286:16;;;:42;3356:12;;;;3338:15;;;;:30;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;3432:14:11;;;3412:34;;:17;;;:34;:9;1218:2252;-1:-1:-1;;1218:2252:11:o;2466:122:23:-;1182:7:32;1208:6;-1:-1:-1;;;;;1208:6:32;;;;;666:10:3;2521:23:23;2512:69;;;;-1:-1:-1;;;2512:69:23;;43672:2:49;2512:69:23;;;43654:21:49;43711:2;43691:18;;;43684:30;43750:33;43730:18;;;43723:61;43801:18;;2512:69:23;43470:355:49;2668:187:32;2741:16;2760:6;;-1:-1:-1;;;;;2776:17:32;;;2760:6;2776:17;;;-1:-1:-1;;;;;;2776:17:32;;;;;2808:40;;2760:6;;;;;;;2776:17;;2760:6;;2808:40;;;2731:124;2668:187;:::o;9662:2796:16:-;9874:22;9910:12;9936:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;9936:19:16;10020:137;10048:9;10071:7;:16;;;10101:7;:16;;;10131:1;10146;10020:14;:137::i;:::-;10240:11;;10013:144;;-1:-1:-1;10229:8:16;10240:11;-1:-1:-1;;;;;10294:19:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;10265:48;;10327:13;10363:9;10358:1032;10378:3;10374:1;:7;10358:1032;;;10465:7;:16;;;10449:4;10454:1;10449:7;;;;;;;;:::i;:::-;;;;;;;:12;;;:32;10441:85;;;;-1:-1:-1;;;10441:85:16;;44032:2:49;10441:85:16;;;44014:21:49;44071:2;44051:18;;;44044:30;44110:34;44090:18;;;44083:62;-1:-1:-1;;;44161:18:49;;;44154:39;44210:19;;10441:85:16;43830:405:49;10441:85:16;10570:19;;:24;;;;10569:87;;;10636:10;:19;;;10620:4;10625:1;10620:7;;;;;;;;:::i;:::-;;;;;;;:13;;;:35;10569:87;10544:139;;;10675:8;;10544:139;10727:7;:22;;;10705:4;10710:1;10705:7;;;;;;;;:::i;:::-;;;;;;;:19;;;:44;10701:58;;;10751:8;;10701:58;10862:10;:15;;;:24;;;;10887:4;10892:1;10887:7;;;;;;;;:::i;:::-;;;;;;;:15;;;10862:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10848:4;10853:1;10848:7;;;;;;;;:::i;:::-;;;;;;;:11;;;:55;10844:89;;;10925:8;;10844:89;11056:4;11061:1;11056:7;;;;;;;;:::i;:::-;;;;;;;:19;;;10991:10;:15;;;:24;;;;11016:4;11021:1;11016:7;;;;;;;;:::i;:::-;;;;;;;:15;;;10991:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10977:4;10982:1;10977:7;;;;;;;;:::i;:::-;;;;;;;:11;;;:55;;;;:::i;:::-;10976:99;10951:151;;;11094:8;;10951:151;11145:7;:16;;;11165:1;11145:21;:72;;;;-1:-1:-1;11190:22:16;;;;:27;;11145:72;:134;;;;;11257:10;:22;;;11241:4;11246:1;11241:7;;;;;;;;:::i;:::-;;;;;;;:13;;;:38;11145:134;11120:186;;;11298:8;;11120:186;11343:4;11348:1;11343:7;;;;;;;;:::i;:::-;;;;;;;11325:8;11334:5;11325:15;;;;;;;;:::i;:::-;;;;;;:25;;;;11368:7;;;;;:::i;:::-;;;;10358:1032;10383:3;;;;:::i;:::-;;;;10358:1032;;;-1:-1:-1;11430:23:16;;11437:8;-1:-1:-1;11913:15:16;;-1:-1:-1;11913:29:16;11437:8;11974:1;11989:7;12010:10;11974:1;12034:17;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11913:148;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11913:148:16;;;;;;;;;;;;:::i;:::-;11890:171;;-1:-1:-1;11890:171:16;-1:-1:-1;11890:171:16;-1:-1:-1;12076:10:16;12071:381;;12152:12;;-1:-1:-1;;;12152:12:16;;:10;;;;:12;;:4;;:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12152:12:16;;;;;;;;;;;;:::i;:::-;12145:19;;12182:7;:16;;;12202:1;12182:21;;:55;;;;;12221:7;:16;;;12207:4;:11;:30;12182:55;12178:264;;;12273:16;;;;12338:19;;;12409:18;;-1:-1:-1;;;12409:18:16;;:16;;;;:18;;12345:4;;12409:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12392:35;;-1:-1:-1;12392:35:16;-1:-1:-1;;9662:2796:16;;;;;;;;:::o;1987:1535:14:-;2405:25;2433:16;;;:9;:16;;;;;;;;2405:44;;;;;;;;;;;;;;;;;2080:23;;2405:25;:44;;2433:16;2405:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2485:1;2467:8;:15;:19;2459:59;;;;-1:-1:-1;;;2459:59:14;;48050:2:49;2459:59:14;;;48032:21:49;48089:2;48069:18;;;48062:30;48128:29;48108:18;;;48101:57;48175:18;;2459:59:14;47848:351:49;2459:59:14;2552:8;:15;-1:-1:-1;;;;;2536:32:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2529:39;;2578:13;2606:9;2601:805;2621:8;:15;2617:1;:19;2601:805;;;831:3:11;-1:-1:-1;;;;;2662:25:14;;2688:8;2697:1;2688:11;;;;;;;;:::i;:::-;;;;;;;2662:38;;;;;;;;;;;;;15896:25:49;;15884:2;15869:18;;15750:177;2662:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2657:69;;2718:8;;2657:69;2740:21;831:3:11;-1:-1:-1;;;;;2764:38:14;;2820:8;2829:1;2820:11;;;;;;;;:::i;:::-;;;;;;;2764:81;;;;;;;;;;;;;15896:25:49;;15884:2;15869:18;;15750:177;2764:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2764:81:14;;;;;;;;;;;;:::i;:::-;2740:105;;2881:1;2867:4;:11;:15;2859:51;;;;-1:-1:-1;;;2859:51:14;;22470:2:49;2859:51:14;;;22452:21:49;22509:2;22489:18;;;22482:30;-1:-1:-1;;;22528:18:49;;;22521:53;22591:18;;2859:51:14;22268:347:49;2859:51:14;2953:3;2928:4;2947:1;2933:4;:11;:15;;;;:::i;:::-;2928:21;;;;;;;;:::i;:::-;;;;;;;:28;2924:42;;2958:8;;;2924:42;2980:9;3003:311;3028:1;3014:4;:11;:15;;;;:::i;:::-;3010:1;:19;3003:311;;;3078:212;3128:17;:36;3194:4;3199:1;3194:7;;;;;;;;:::i;3078:212::-;3052:262;;3309:5;;3052:262;3031:3;;;;:::i;:::-;;;;3003:311;;;3350:1;3336:4;:11;:15;;;;:::i;:::-;3332:1;:19;3328:33;;;3353:8;;;;3328:33;3391:4;3375;3380:7;;;;:::i;:::-;;;3375:13;;;;;;;;:::i;:::-;;;;;;:20;;;;2643:763;;2601:805;2638:3;;;;:::i;:::-;;;;2601:805;;;;3451:5;3445:4;3438:19;3492:1;3484:5;:9;3476:39;;;;-1:-1:-1;;;3476:39:14;;48406:2:49;3476:39:14;;;48388:21:49;48445:2;48425:18;;;48418:30;-1:-1:-1;;;48464:18:49;;;48457:47;48521:18;;3476:39:14;48204:341:49;3476:39:14;2109:1413;;1987:1535;;;;:::o;15668:4838:16:-;15897:23;;:::i;:::-;15991:1;15975:5;:12;:17;;15967:65;;;;-1:-1:-1;;;15967:65:16;;48752:2:49;15967:65:16;;;48734:21:49;48791:2;48771:18;;;48764:30;48830:34;48810:18;;;48803:62;-1:-1:-1;;;48881:18:49;;;48874:33;48924:19;;15967:65:16;48550:399:49;15967:65:16;16075:16;;16056:12;;16050:5;;16056:16;;16071:1;;16056:16;:::i;:::-;16050:23;;;;;;;;:::i;:::-;;;;;;;:41;16042:115;;;;-1:-1:-1;;;16042:115:16;;49156:2:49;16042:115:16;;;49138:21:49;49195:2;49175:18;;;49168:30;49234:34;49214:18;;;49207:62;49305:31;49285:18;;;49278:59;49354:19;;16042:115:16;48954:425:49;16042:115:16;16168:27;16205;;:::i;:::-;16259:5;:12;16273:1;16259:15;16255:4203;;;16372:139;16398:5;16419:1;16404:5;:12;:16;;;;:::i;:::-;16398:23;;;;;;;;:::i;:::-;;;;;;;16439:7;16464:10;16492:5;16372:8;:139::i;:::-;16358:10;;;16336:175;16348:8;;;16336:175;16538:16;;16525:10;;;:29;16620:12;;16336:175;;-1:-1:-1;16575:21:16;;;;16348:4;;16614:5;;16620:16;;16635:1;;16620:16;:::i;:::-;16614:23;;;;;;;;:::i;:::-;;;;;;;16655:7;:16;;;16575:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16575:110:16;;;;;;;;;;;;:::i;:::-;16568:117;;16255:4203;;;16782:19;;;;16860:1;16843:747;16882:1;16867:5;:12;:16;;;;:::i;:::-;16863:1;:20;16843:747;;;16908:15;16999:471;17029:5;17035;17039:1;17035;:5;:::i;:::-;17029:12;;;;;;;;:::i;:::-;;;;;;;17063:289;;;;;;;;17117:5;17123:1;17117:8;;;;;;;;:::i;:::-;;;;;;;17063:289;;;;17151:1;17063:289;;;;17178:1;17063:289;;;;17205:5;17063:289;;;;;;17236:5;17063:289;;;;;;17267:1;17063:289;;;;17308:1;-1:-1:-1;;;;;17294:16:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17294:16:16;;17063:289;;;17374:52;;;;;;;;17397:1;17374:52;;;;17400:1;17374:52;;;;17403:5;17374:52;;;;17410:10;:15;;;17374:52;;;17448:4;16999:8;:471::i;:::-;-1:-1:-1;16983:487:16;-1:-1:-1;;17492:12:16;17488:29;;17506:11;;;;;;;17488:29;17552:9;:13;;;;17566:5;17572:1;17566:8;;;;;;;;:::i;:::-;;;;;;;17552:23;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17543:32;;:7;:32;:::i;:::-;17535:40;;16890:700;16885:3;;;;;:::i;:::-;;;;16843:747;;;;17771:201;17801:5;17822:1;17807:5;:12;:16;;;;:::i;:::-;17801:23;;;;;;;;:::i;:::-;;;;;;;17846:7;17875:52;;;;;;;;17898:1;17875:52;;;;17901:1;17875:52;;;;17904:5;17875:52;;;;17911:10;:15;;;17875:52;;;17949:5;17771:8;:201::i;:::-;17757:10;;;17735:237;17747:8;;;17735:237;;;;;-1:-1:-1;18000:30:16;;18019:11;;;;;18000:30;18103:16;;18090:10;;;:29;18193:12;;18144:21;;;;18090:4;;18187:5;;18193:16;;18208:1;;18193:16;:::i;:::-;18187:23;;;;;;;;:::i;:::-;;;;;;;18232:7;:16;;;18144:122;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18144:122:16;;;;;;;;;;;;:::i;:::-;18137:129;;18365:6;18342:4;:10;;;:19;;;18333:4;:8;;;:28;;;;:::i;:::-;18332:39;;;;:::i;:::-;18324:47;;18391:9;18418:1;18403:5;:12;:16;;;;:::i;:::-;18391:28;;18386:2033;18421:4;;18386:2033;;18464:31;18513;;:::i;:::-;18584:42;;:::i;:::-;18648:36;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18648:36:16;19209:5;19215:1;19209:8;;;;;;;;:::i;:::-;;;;;;;19191:6;:15;;:26;;;;;19264:9;:13;;;;19278:5;19284:1;19278:8;;;;;;;;:::i;:::-;;;;;;;19264:23;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19256:31;;:5;:31;:::i;:::-;19243:10;;;:44;19439:4;19421:15;;;;:22;;;19568:15;;;;19554:11;;;:29;19700:163;;19734:5;;19740;;:1;:5;:::i;:::-;19734:12;;;;;;;;:::i;:::-;;;;;;;19772:6;19804;19836:5;19700:8;:163::i;:::-;19682:14;;;19652:211;19668:12;;;19652:211;;;;;-1:-1:-1;19903:17:16;19899:34;;-1:-1:-1;19899:34:16;;-1:-1:-1;19899:34:16;19922:11;;;;;;;;19899:34;20000:6;19973:8;:14;;;:23;;;19960:8;:12;;;:36;;;;:::i;:::-;19959:47;;;;:::i;:::-;19951:55;-1:-1:-1;20046:18:16;;:4;20065:9;20075:5;20081;20085:1;20081;:5;:::i;:::-;20075:12;;;;;;;;:::i;:::-;;;;;;;20088:13;20046:56;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20046:56:16;;;;;;;;;;;;:::i;:::-;20163:14;;;;;:23;20143:10;;;;:19;20026:76;;-1:-1:-1;20026:76:16;;-1:-1:-1;20188:6:16;;20143:43;;;:::i;:::-;20142:52;;;;:::i;:::-;20120:10;;;;;;:74;;;;20255:14;;;;:23;;;20235:10;;:19;;20280:6;;20235:43;;;:::i;:::-;20234:52;;;;:::i;:::-;20212:4;:10;;;:19;;:74;;;;;20398:6;20387:4;:8;;;20362;:14;;;:23;;;20349:8;:12;;;:36;;;;:::i;:::-;20348:47;;;;:::i;:::-;20327:4;:10;;;:19;;;:69;;;;:::i;:::-;20326:78;;;;:::i;:::-;20304:10;;;;:19;;:100;-1:-1:-1;18428:3:16;;-1:-1:-1;18428:3:16;;;:::i;:::-;;;;18386:2033;;;;16718:3740;16255:4203;20474:25;;-1:-1:-1;;;20474:25:16;;:8;;;;:25;;:4;;20483;;20489:9;;20474:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20474:25:16;;;;;;;;;;;;:::i;:::-;20467:32;;15922:4584;;15668:4838;;;;;;;:::o;3916:1506::-;4096:22;4130:18;4162:16;4192:26;4221:13;:63;4235:17;:36;4272:5;4279:3;4235:48;;;;;;;;;;;;;;;20216:25:49;;;20272:2;20257:18;;20250:34;20204:2;20189:18;;20008:282;4235:48:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4221:63;;;;;;;;;;;-1:-1:-1;4221:63:16;4306:15;;4221:63;;-1:-1:-1;4335:11:16;4331:29;;4357:3;4348:12;;4331:29;4392:6;-1:-1:-1;;;;;4377:22:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4370:29;;4415:9;4410:942;4434:3;4430:1;:7;4410:942;;;4474:6;4462:8;:18;4458:29;;4482:5;;4458:29;4501:24;4528:7;:20;4536:8;4545:1;4536:11;;;;;;;;:::i;:::-;;;;;;;;;4528:20;;;;;;;;;;;4501:47;;4583:5;:15;4599:5;4583:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:92;;-1:-1:-1;4634:22:16;;-1:-1:-1;;;4634:22:16;;4660:15;;4634:5;;:15;;:22;;4650:5;;4634:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;4583:92;4582:183;;;;-1:-1:-1;4705:17:16;;-1:-1:-1;;;4705:17:16;;284:21:9;4705:17:16;;;15896:25:49;4705:3:16;-1:-1:-1;;;;;4705:7:16;;;;15869:18:49;;4705:17:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4696:51:16;;4748:5;4755:9;4696:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4561:781;;;4798:12;;;;:::i;:::-;;;;4846:6;4832:10;:20;4828:34;;4854:8;;;4828:34;4880:33;4916:26;4924:8;4933:1;4924:11;;;;;;;;:::i;:::-;;;;;;;;;4937:4;4916:7;:26::i;:::-;4880:62;;4980:9;:21;;;4964:9;:13;;;:37;4960:51;;;5003:8;;;;4960:51;5054:9;:17;;;5029:4;5034:8;5029:14;;;;;;;;:::i;:::-;;;;;;;:22;;:42;;;;;5111:9;:12;;;5089:4;5094:8;5089:14;;;;;;;;:::i;:::-;;;;;;;:19;;:34;;;;;5170:9;:21;;;5141:4;5146:8;5141:14;;;;;;;;:::i;:::-;;;;;;;:26;;:50;;;;;5230:9;:13;;;5209:4;5214:8;5209:14;;;;;;;;:::i;:::-;;;;;;;:18;;:34;;;;;5284:9;:15;;;5261:4;5266:8;5261:14;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;:38;5317:10;;;;:::i;:::-;;;;4780:562;4561:781;4444:908;4410:942;4439:3;;;;:::i;:::-;;;;4410:942;;;-1:-1:-1;;;5384:22:16;;-1:-1:-1;5391:4:16;3916:1506;-1:-1:-1;;;;;3916:1506:16:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:331:49:-;119:9;130;172:8;160:10;157:24;154:44;;;194:1;191;184:12;154:44;223:6;213:8;210:20;207:40;;;243:1;240;233:12;207:40;-1:-1:-1;;269:23:49;;;314:25;;;;;-1:-1:-1;14:331:49:o;350:286::-;408:6;461:2;449:9;440:7;436:23;432:32;429:52;;;477:1;474;467:12;429:52;503:23;;-1:-1:-1;;;;;;555:32:49;;545:43;;535:71;;602:1;599;592:12;833:131;-1:-1:-1;;;;;908:31:49;;898:42;;888:70;;954:1;951;944:12;969:127;1030:10;1025:3;1021:20;1018:1;1011:31;1061:4;1058:1;1051:15;1085:4;1082:1;1075:15;1101:253;1173:2;1167:9;1215:4;1203:17;;-1:-1:-1;;;;;1235:34:49;;1271:22;;;1232:62;1229:88;;;1297:18;;:::i;:::-;1333:2;1326:22;1101:253;:::o;1359:::-;1431:2;1425:9;1473:4;1461:17;;-1:-1:-1;;;;;1493:34:49;;1529:22;;;1490:62;1487:88;;;1555:18;;:::i;1617:257::-;1689:4;1683:11;;;1721:17;;-1:-1:-1;;;;;1753:34:49;;1789:22;;;1750:62;1747:88;;;1815:18;;:::i;1879:275::-;1950:2;1944:9;2015:2;1996:13;;-1:-1:-1;;1992:27:49;1980:40;;-1:-1:-1;;;;;2035:34:49;;2071:22;;;2032:62;2029:88;;;2097:18;;:::i;:::-;2133:2;2126:22;1879:275;;-1:-1:-1;1879:275:49:o;2159:118::-;2245:5;2238:13;2231:21;2224:5;2221:32;2211:60;;2267:1;2264;2257:12;2282:128;2347:20;;2376:28;2347:20;2376:28;:::i;:::-;2282:128;;;:::o;2415:979::-;2478:5;2508:6;2551:2;2539:9;2534:3;2530:19;2526:28;2523:48;;;2567:1;2564;2557:12;2523:48;2600:2;2594:9;2630:15;;;;-1:-1:-1;;;;;2660:34:49;;2696:22;;;2657:62;2654:88;;;2722:18;;:::i;:::-;2758:2;2751:22;;;2821:23;;2806:39;;2906:2;2891:18;;;2878:32;2861:15;;;2854:57;2791:6;-1:-1:-1;2948:18:49;;2935:32;2791:6;2976:30;2935:32;2976:30;:::i;:::-;3039:7;3034:2;3026:6;3022:15;3015:32;3080:35;3111:2;3100:9;3096:18;3080:35;:::i;:::-;3075:2;3067:6;3063:15;3056:60;3178:3;3167:9;3163:19;3150:33;3144:3;3136:6;3132:16;3125:59;3246:3;3235:9;3231:19;3218:33;3212:3;3204:6;3200:16;3193:59;3314:3;3303:9;3299:19;3286:33;3280:3;3272:6;3268:16;3261:59;3382:3;3371:9;3367:19;3354:33;3348:3;3340:6;3336:16;3329:59;;;2415:979;;;;:::o;3399:183::-;3459:4;-1:-1:-1;;;;;3484:6:49;3481:30;3478:56;;;3514:18;;:::i;:::-;-1:-1:-1;3559:1:49;3555:14;3571:4;3551:25;;3399:183::o;3587:662::-;3641:5;3694:3;3687:4;3679:6;3675:17;3671:27;3661:55;;3712:1;3709;3702:12;3661:55;3748:6;3735:20;3774:4;3798:60;3814:43;3854:2;3814:43;:::i;:::-;3798:60;:::i;:::-;3892:15;;;3978:1;3974:10;;;;3962:23;;3958:32;;;3923:12;;;;4002:15;;;3999:35;;;4030:1;4027;4020:12;3999:35;4066:2;4058:6;4054:15;4078:142;4094:6;4089:3;4086:15;4078:142;;;4160:17;;4148:30;;4198:12;;;;4111;;4078:142;;;-1:-1:-1;4238:5:49;3587:662;-1:-1:-1;;;;;;3587:662:49:o;4254:896::-;4417:6;4425;4433;4441;4449;4457;4510:3;4498:9;4489:7;4485:23;4481:33;4478:53;;;4527:1;4524;4517:12;4478:53;4566:9;4553:23;4585:31;4610:5;4585:31;:::i;:::-;4635:5;-1:-1:-1;4687:2:49;4672:18;;4659:32;;-1:-1:-1;4743:2:49;4728:18;;4715:32;4756:33;4715:32;4756:33;:::i;:::-;4808:7;-1:-1:-1;4862:2:49;4847:18;;4834:32;;-1:-1:-1;4885:64:49;4941:7;4935:3;4920:19;;4885:64;:::i;:::-;4875:74;;5000:3;4989:9;4985:19;4972:33;-1:-1:-1;;;;;5020:6:49;5017:30;5014:50;;;5060:1;5057;5050:12;5014:50;5083:61;5136:7;5127:6;5116:9;5112:22;5083:61;:::i;:::-;5073:71;;;4254:896;;;;;;;;:::o;5155:435::-;5208:3;5246:5;5240:12;5273:6;5268:3;5261:19;5299:4;5328:2;5323:3;5319:12;5312:19;;5365:2;5358:5;5354:14;5386:1;5396:169;5410:6;5407:1;5404:13;5396:169;;;5471:13;;5459:26;;5505:12;;;;5540:15;;;;5432:1;5425:9;5396:169;;;-1:-1:-1;5581:3:49;;5155:435;-1:-1:-1;;;;;5155:435:49:o;5595:1185::-;5685:3;5723:5;5717:12;5750:6;5745:3;5738:19;5776:4;5817:2;5812:3;5808:12;5842:11;5869;5862:18;;5919:6;5916:1;5912:14;5905:5;5901:26;5889:38;;5961:2;5954:5;5950:14;5982:1;5992:762;6006:6;6003:1;6000:13;5992:762;;;6067:16;;;6055:29;;6107:13;;6173:9;;6160:23;;6224:11;;;6218:18;6203:13;;;6196:41;6260:4;6305:11;;;6299:18;6284:13;;;6277:41;6341:4;6386:11;;;6380:18;6365:13;;;6358:41;6422:4;6467:11;;;6461:18;6446:13;;;6439:41;6503:4;6546:11;;;6540:18;6143:4;6578:13;;;6571:25;;;6540:18;6617:57;6660:13;;;6540:18;6617:57;:::i;:::-;6732:12;;;;6609:65;-1:-1:-1;;;6697:15:49;;;;6028:1;6021:9;5992:762;;;-1:-1:-1;6770:4:49;;5595:1185;-1:-1:-1;;;;;;;5595:1185:49:o;6992:561::-;7329:3;7318:9;7311:22;7292:4;7350:94;7439:3;7428:9;7424:19;7416:6;7350:94;:::i;:::-;7342:102;;7480:6;7475:2;7464:9;7460:18;7453:34;7496:51;7543:2;7532:9;7528:18;7520:6;6856:12;;6844:25;;6918:4;6907:16;;;6901:23;6885:14;;;6878:47;6974:4;6963:16;;;6957:23;6941:14;;6934:47;6785:202;7558:751;7662:6;7670;7678;7686;7739:2;7727:9;7718:7;7714:23;7710:32;7707:52;;;7755:1;7752;7745:12;7707:52;7791:9;7778:23;7768:33;;7848:2;7837:9;7833:18;7820:32;7810:42;;7903:2;7892:9;7888:18;7875:32;-1:-1:-1;;;;;7967:2:49;7959:6;7956:14;7953:34;;;7983:1;7980;7973:12;7953:34;8021:6;8010:9;8006:22;7996:32;;8066:7;8059:4;8055:2;8051:13;8047:27;8037:55;;8088:1;8085;8078:12;8037:55;8128:2;8115:16;8154:2;8146:6;8143:14;8140:34;;;8170:1;8167;8160:12;8140:34;8223:7;8218:2;8208:6;8205:1;8201:14;8197:2;8193:23;8189:32;8186:45;8183:65;;;8244:1;8241;8234:12;8183:65;7558:751;;;;-1:-1:-1;;8275:2:49;8267:11;;-1:-1:-1;;;7558:751:49:o;8754:530::-;8815:3;8853:5;8847:12;8880:6;8875:3;8868:19;8906:4;8935:2;8930:3;8926:12;8919:19;;8972:2;8965:5;8961:14;8993:1;9003:256;9017:6;9014:1;9011:13;9003:256;;;9076:13;;9114:9;;9102:22;;9164:11;;9158:18;9144:12;;;9137:40;9206:4;9197:14;;;;9234:15;;;;9039:1;9032:9;9003:256;;9289:2315;9573:4;9602:2;9631;9620:9;9613:21;9653:3;9694:2;9683:9;9679:18;9739:6;9733:13;9728:2;9717:9;9713:18;9706:41;9766:4;9817:2;9809:6;9805:15;9799:22;9840:2;9851:57;9904:2;9893:9;9889:18;9875:12;6856;;6844:25;;6918:4;6907:16;;;6901:23;6885:14;;;6878:47;6974:4;6963:16;;;6957:23;6941:14;;6934:47;6785:202;9851:57;9945:15;;;9939:22;9980:4;10000:18;;;9993:30;;;10072:21;;10102:22;;;;10143:3;10226:1;10222:14;;;10207:30;;10203:39;;;10265:23;;;;-1:-1:-1;9980:4:49;;10162:18;;;;10306:1;10316:923;10330:6;10327:1;10324:13;10316:923;;;10395:22;;;-1:-1:-1;;10391:37:49;10379:50;;10452:13;;10500:9;;10522:18;;;10567:61;10612:15;;;10500:9;10567:61;:::i;:::-;10553:75;;10679:2;10675;10671:11;10665:18;10660:2;10652:6;10648:15;10641:43;10733:2;10729;10725:11;10719:18;10750:56;10802:2;10794:6;10790:15;10774:14;6856:12;;6844:25;;6918:4;6907:16;;;6901:23;6885:14;;;6878:47;6974:4;6963:16;;;6957:23;6941:14;;6934:47;6785:202;10750:56;-1:-1:-1;10835:11:49;;;10829:18;10870:4;10894:15;;;10887:27;;;;10965:4;10957:13;;10951:20;10934:15;;;10927:45;11013:11;;;11007:18;11064:19;;;11057:4;11045:17;;11038:46;11007:18;11107:52;11068:6;11007:18;11107:52;:::i;:::-;11097:62;-1:-1:-1;;;11182:15:49;;;;11217:12;;;;10352:1;10345:9;10316:923;;;-1:-1:-1;;;;11276:15:49;;11270:22;11334;;;-1:-1:-1;;11330:36:49;11323:4;11308:20;;11301:66;11270:22;-1:-1:-1;11387:89:49;;-1:-1:-1;11338:6:49;11270:22;11387:89;:::i;:::-;11376:100;;11521:9;11516:3;11512:19;11507:2;11496:9;11492:18;11485:47;;;;11549:49;11594:3;11586:6;11549:49;:::i;:::-;11541:57;9289:2315;-1:-1:-1;;;;;9289:2315:49:o;11609:248::-;11677:6;11685;11738:2;11726:9;11717:7;11713:23;11709:32;11706:52;;;11754:1;11751;11744:12;11706:52;-1:-1:-1;;11777:23:49;;;11847:2;11832:18;;;11819:32;;-1:-1:-1;11609:248:49:o;11862:180::-;11921:6;11974:2;11962:9;11953:7;11949:23;11945:32;11942:52;;;11990:1;11987;11980:12;11942:52;-1:-1:-1;12013:23:49;;11862:180;-1:-1:-1;11862:180:49:o;12156:127::-;12217:10;12212:3;12208:20;12205:1;12198:31;12248:4;12245:1;12238:15;12272:4;12269:1;12262:15;12288:233;12365:1;12358:5;12355:12;12345:143;;12410:10;12405:3;12401:20;12398:1;12391:31;12445:4;12442:1;12435:15;12473:4;12470:1;12463:15;12345:143;12497:18;;12288:233::o;12606:1311::-;12830:13;;-1:-1:-1;;;;;12113:31:49;12101:44;;12798:3;12783:19;;12911:4;12903:6;12899:17;12893:24;12886:4;12875:9;12871:20;12864:54;12974:4;12966:6;12962:17;12956:24;12949:4;12938:9;12934:20;12927:54;13037:4;13029:6;13025:17;13019:24;13012:4;13001:9;12997:20;12990:54;13100:4;13092:6;13088:17;13082:24;13075:4;13064:9;13060:20;13053:54;13163:4;13155:6;13151:17;13145:24;13138:4;13127:9;13123:20;13116:54;13226:4;13218:6;13214:17;13208:24;13201:4;13190:9;13186:20;13179:54;13289:4;13281:6;13277:17;13271:24;13264:4;13253:9;13249:20;13242:54;13315:6;13375:2;13367:6;13363:15;13357:22;13352:2;13341:9;13337:18;13330:50;;13399:6;13459:2;13451:6;13447:15;13441:22;13436:2;13425:9;13421:18;13414:50;;13483:6;13543:2;13535:6;13531:15;13525:22;13520:2;13509:9;13505:18;13498:50;;13567:6;13627:2;13619:6;13615:15;13609:22;13604:2;13593:9;13589:18;13582:50;;13651:6;13704:2;13696:6;13692:15;13686:22;13717:55;13768:2;13757:9;13753:18;13739:12;13717:55;:::i;:::-;-1:-1:-1;;13791:6:49;13834:15;;;13828:22;12593:4;12582:16;;13892:18;;;12570:29;13859:52;12526:75;14616:844;14808:4;14837:2;14877;14866:9;14862:18;14907:2;14896:9;14889:21;14930:6;14965;14959:13;14996:6;14988;14981:22;15034:2;15023:9;15019:18;15012:25;;15096:2;15086:6;15083:1;15079:14;15068:9;15064:30;15060:39;15046:53;;15134:2;15126:6;15122:15;15155:1;15165:266;15179:6;15176:1;15173:13;15165:266;;;15272:2;15268:7;15256:9;15248:6;15244:22;15240:36;15235:3;15228:49;15300:51;15344:6;15335;15329:13;15300:51;:::i;:::-;15290:61;-1:-1:-1;15409:12:49;;;;15374:15;;;;15201:1;15194:9;15165:266;;;-1:-1:-1;15448:6:49;;14616:844;-1:-1:-1;;;;;;;14616:844:49:o;15465:280::-;15523:6;15576:2;15564:9;15555:7;15551:23;15547:32;15544:52;;;15592:1;15589;15582:12;15544:52;15631:9;15618:23;15681:14;15674:5;15670:26;15663:5;15660:37;15650:65;;15711:1;15708;15701:12;16322:284;16380:6;16433:2;16421:9;16412:7;16408:23;16404:32;16401:52;;;16449:1;16446;16439:12;16401:52;16488:9;16475:23;-1:-1:-1;;;;;16531:5:49;16527:30;16520:5;16517:41;16507:69;;16572:1;16569;16562:12;16611:619;16756:6;16764;16772;16780;16833:3;16821:9;16812:7;16808:23;16804:33;16801:53;;;16850:1;16847;16840:12;16801:53;16886:9;16873:23;16863:33;;16943:2;16932:9;16928:18;16915:32;16905:42;;16966:63;17021:7;17016:2;17005:9;17001:18;16966:63;:::i;:::-;16956:73;;17080:3;17069:9;17065:19;17052:33;-1:-1:-1;;;;;17100:6:49;17097:30;17094:50;;;17140:1;17137;17130:12;17094:50;17163:61;17216:7;17207:6;17196:9;17192:22;17163:61;:::i;:::-;17153:71;;;16611:619;;;;;;;:::o;17463:276::-;17521:6;17574:2;17562:9;17553:7;17549:23;17545:32;17542:52;;;17590:1;17587;17580:12;17542:52;17629:9;17616:23;17679:10;17672:5;17668:22;17661:5;17658:33;17648:61;;17705:1;17702;17695:12;17744:247;17803:6;17856:2;17844:9;17835:7;17831:23;17827:32;17824:52;;;17872:1;17869;17862:12;17824:52;17911:9;17898:23;17930:31;17955:5;17930:31;:::i;18197:245::-;18264:6;18317:2;18305:9;18296:7;18292:23;18288:32;18285:52;;;18333:1;18330;18323:12;18285:52;18365:9;18359:16;18384:28;18406:5;18384:28;:::i;19152:184::-;19222:6;19275:2;19263:9;19254:7;19250:23;19246:32;19243:52;;;19291:1;19288;19281:12;19243:52;-1:-1:-1;19314:16:49;;19152:184;-1:-1:-1;19152:184:49:o;19341:127::-;19402:10;19397:3;19393:20;19390:1;19383:31;19433:4;19430:1;19423:15;19457:4;19454:1;19447:15;19473:125;19513:4;19541:1;19538;19535:8;19532:34;;;19546:18;;:::i;:::-;-1:-1:-1;19583:9:49;;19473:125::o;19603:128::-;19643:3;19674:1;19670:6;19667:1;19664:13;19661:39;;;19680:18;;:::i;:::-;-1:-1:-1;19716:9:49;;19603:128::o;19736:127::-;19797:10;19792:3;19788:20;19785:1;19778:31;19828:4;19825:1;19818:15;19852:4;19849:1;19842:15;19868:135;19907:3;-1:-1:-1;;19928:17:49;;19925:43;;;19948:18;;:::i;:::-;-1:-1:-1;19995:1:49;19984:13;;19868:135::o;20295:217::-;20335:1;20361;20351:132;;20405:10;20400:3;20396:20;20393:1;20386:31;20440:4;20437:1;20430:15;20468:4;20465:1;20458:15;20351:132;-1:-1:-1;20497:9:49;;20295:217::o;20931:168::-;20971:7;21037:1;21033;21029:6;21025:14;21022:1;21019:21;21014:1;21007:9;21000:17;20996:45;20993:71;;;21044:18;;:::i;:::-;-1:-1:-1;21084:9:49;;20931:168::o;21104:127::-;21165:10;21160:3;21156:20;21153:1;21146:31;21196:4;21193:1;21186:15;21220:4;21217:1;21210:15;21236:659;21301:5;21354:3;21347:4;21339:6;21335:17;21331:27;21321:55;;21372:1;21369;21362:12;21321:55;21401:6;21395:13;21427:4;21451:60;21467:43;21507:2;21467:43;:::i;21451:60::-;21545:15;;;21631:1;21627:10;;;;21615:23;;21611:32;;;21576:12;;;;21655:15;;;21652:35;;;21683:1;21680;21673:12;21652:35;21719:2;21711:6;21707:15;21731:135;21747:6;21742:3;21739:15;21731:135;;;21813:10;;21801:23;;21844:12;;;;21764;;21731:135;;21900:363;21995:6;22048:2;22036:9;22027:7;22023:23;22019:32;22016:52;;;22064:1;22061;22054:12;22016:52;22097:9;22091:16;-1:-1:-1;;;;;22122:6:49;22119:30;22116:50;;;22162:1;22159;22152:12;22116:50;22185:72;22249:7;22240:6;22229:9;22225:22;22185:72;:::i;23589:251::-;23659:6;23712:2;23700:9;23691:7;23687:23;23683:32;23680:52;;;23728:1;23725;23718:12;23680:52;23760:9;23754:16;23779:31;23804:5;23779:31;:::i;23845:869::-;-1:-1:-1;;;;;24199:32:49;;24181:51;;24251:2;24269:18;;;24262:34;;;24327:2;24312:18;;24305:34;;;24370:2;24355:18;;24348:34;;;24413:3;24398:19;;24391:35;;;24167:4;24152:20;;;24219:3;24446:19;;24507:6;24125:4;24541:167;24555:4;24552:1;24549:11;24541:167;;;24614:13;;24602:26;;24648:12;;;;24683:15;;;;24575:1;24568:9;24541:167;;;24545:3;;;;23845:869;;;;;;;;;:::o;24719:426::-;24848:3;24886:6;24880:13;24911:1;24921:129;24935:6;24932:1;24929:13;24921:129;;;25033:4;25017:14;;;25013:25;;25007:32;24994:11;;;24987:53;24950:12;24921:129;;;25068:6;25065:1;25062:13;25059:48;;;25103:1;25094:6;25089:3;25085:16;25078:27;25059:48;-1:-1:-1;25123:16:49;;;;;24719:426;-1:-1:-1;;24719:426:49:o;25557:1045::-;25711:12;;25643:6;25732:15;;;25796:19;;25670:12;;;25824:20;;;25615:3;;25871;25862:13;;;25894:4;;25921:21;;;25615:3;25970:175;25984:6;25981:1;25978:13;25970:175;;;26047:13;;26033:28;;26083:14;;;;26120:15;;;;26006:1;25999:9;25970:175;;;-1:-1:-1;;;26181:14:49;;;26175:21;26161:12;;;26154:43;26245:4;26234:16;;;26228:23;6856:12;;26300:14;;;6844:25;6918:4;6907:16;;6901:23;6885:14;;;6878:47;6963:16;;;6957:23;6941:14;;;6934:47;26260:55;26364:4;26357:5;26353:16;26347:23;26340:4;26335:3;26331:14;26324:47;26420:4;26413:5;26409:16;26403:23;26396:4;26391:3;26387:14;26380:47;26475:4;26468:5;26464:16;26458:23;26524:3;26517:5;26513:15;26506:4;26501:3;26497:14;26490:39;26545:51;26590:5;26574:14;26545:51;:::i;26607:1156::-;26668:3;26706:5;26700:12;26733:6;26728:3;26721:19;26759:4;26800:2;26795:3;26791:12;26825:11;26852;26845:18;;26902:6;26899:1;26895:14;26888:5;26884:26;26872:38;;26944:2;26937:5;26933:14;26965:1;26975:762;26989:6;26986:1;26983:13;26975:762;;;27050:16;;;27038:29;;27090:13;;27156:9;;27143:23;;27207:11;;;27201:18;27186:13;;;27179:41;27243:4;27288:11;;;27282:18;27267:13;;;27260:41;27324:4;27369:11;;;27363:18;27348:13;;;27341:41;27405:4;27450:11;;;27444:18;27429:13;;;27422:41;27486:4;27529:11;;;27523:18;27126:4;27561:13;;;27554:25;;;27523:18;27600:57;27643:13;;;27523:18;27600:57;:::i;:::-;27715:12;;;;27592:65;-1:-1:-1;;;27680:15:49;;;;27011:1;27004:9;26975:762;;27768:1074;27822:3;27861:4;27856:3;27852:14;27893:5;27887:12;27882:3;27875:25;27919:4;27969:2;27962:5;27958:14;27952:21;27982:51;28029:2;28024:3;28020:12;28006;6856;;6844:25;;6918:4;6907:16;;;6901:23;6885:14;;;6878:47;6974:4;6963:16;;;6957:23;6941:14;;6934:47;6785:202;27982:51;;28081:4;28074:5;28070:16;28064:23;28119:4;28112;28107:3;28103:14;28096:28;28146:4;28179:14;28173:21;28216:6;28210:4;28203:20;28250:3;28245;28241:13;28232:22;;28307:3;28297:6;28294:1;28290:14;28285:3;28281:24;28277:34;28263:48;;28354:2;28338:14;28334:23;28320:37;;28375:1;28385:272;28399:6;28396:1;28393:13;28385:272;;;28488:3;28484:8;28478:3;28470:6;28466:16;28462:31;28455:5;28448:46;28517:56;28566:6;28557;28551:13;28517:56;:::i;:::-;28507:66;-1:-1:-1;28596:15:49;;;;28633:14;;;;28421:1;28414:9;28385:272;;;28389:3;;;;;28705:4;28698:5;28694:16;28688:23;28755:3;28747:6;28743:16;28736:4;28731:3;28727:14;28720:40;28776:60;28829:6;28813:14;28776:60;:::i;28847:773::-;29272:2;29261:9;29254:21;29235:4;29298:57;29351:2;29340:9;29336:18;29328:6;29298:57;:::i;:::-;29403:9;29395:6;29391:22;29386:2;29375:9;29371:18;29364:50;29437:49;29479:6;29471;29437:49;:::i;:::-;29423:63;;29534:9;29526:6;29522:22;29517:2;29506:9;29502:18;29495:50;29562:52;29607:6;29599;29562:52;:::i;:::-;29554:60;28847:773;-1:-1:-1;;;;;;28847:773:49:o;29625:526::-;29688:5;29736:4;29724:9;29719:3;29715:19;29711:30;29708:50;;;29754:1;29751;29744:12;29708:50;29787:2;29781:9;29829:4;29821:6;29817:17;29900:6;29888:10;29885:22;-1:-1:-1;;;;;29852:10:49;29849:34;29846:62;29843:88;;;29911:18;;:::i;:::-;29951:10;29947:2;29940:22;;29980:6;29971:15;;30016:9;30010:16;30002:6;29995:32;30081:2;30070:9;30066:18;30060:25;30055:2;30047:6;30043:15;30036:50;30140:2;30129:9;30125:18;30119:25;30114:2;30106:6;30102:15;30095:50;;29625:526;;;;:::o;30156:875::-;30229:5;30277:6;30265:9;30260:3;30256:19;30252:32;30249:52;;;30297:1;30294;30287:12;30249:52;30319:22;;:::i;:::-;30310:31;;30370:9;30364:16;-1:-1:-1;;;;;30440:2:49;30432:6;30429:14;30426:34;;;30456:1;30453;30446:12;30426:34;30483:68;30547:3;30538:6;30527:9;30523:22;30483:68;:::i;:::-;30476:5;30469:83;30605:2;30594:9;30590:18;30584:25;30579:2;30572:5;30568:14;30561:49;30642:59;30697:3;30692:2;30681:9;30677:18;30642:59;:::i;:::-;30637:2;30630:5;30626:14;30619:83;30757:3;30746:9;30742:19;30736:26;30729:4;30722:5;30718:16;30711:52;30818:4;30807:9;30803:20;30797:27;30790:4;30783:5;30779:16;30772:53;30871:3;30860:9;30856:19;30850:26;30834:42;;30901:2;30891:8;30888:16;30885:36;;;30917:1;30914;30907:12;30885:36;;30954:70;31020:3;31009:8;30998:9;30994:24;30954:70;:::i;:::-;30948:3;30941:5;30937:15;30930:95;;30156:875;;;;:::o;31036:1779::-;31109:5;31162:3;31155:4;31147:6;31143:17;31139:27;31129:55;;31180:1;31177;31170:12;31129:55;31209:6;31203:13;31235:4;31259:60;31275:43;31315:2;31275:43;:::i;31259:60::-;31353:15;;;31439:1;31435:10;;;;31423:23;;31419:32;;;31384:12;;;;31463:15;;;31460:35;;;31491:1;31488;31481:12;31460:35;31527:2;31519:6;31515:15;31539:1247;31555:6;31550:3;31547:15;31539:1247;;;31634:3;31628:10;-1:-1:-1;;;;;31711:2:49;31698:11;31695:19;31692:109;;;31755:1;31784:2;31780;31773:14;31692:109;31824:24;;;;31871:4;31899:12;;;-1:-1:-1;;31895:26:49;31891:35;-1:-1:-1;31888:125:49;;;31967:1;31996:2;31992;31985:14;31888:125;32039:22;;:::i;:::-;32102:2;32098;32094:11;32088:18;32081:5;32074:33;32130:2;32182;32178;32174:11;32168:18;32163:2;32156:5;32152:14;32145:42;32210:2;32262;32258;32254:11;32248:18;32243:2;32236:5;32232:14;32225:42;32291:3;32280:14;;32344:3;32340:2;32336:12;32330:19;32325:2;32318:5;32314:14;32307:43;;32374:3;32428;32424:2;32420:12;32414:19;32408:3;32401:5;32397:15;32390:44;32477:2;32473;32469:11;32463:18;32447:34;;32510:2;32500:8;32497:16;32494:109;;;32555:1;32544:12;;32585:3;32580;32573:16;32494:109;32640:72;32708:3;32703:2;32692:8;32688:2;32684:17;32680:26;32640:72;:::i;:::-;32623:15;;;32616:97;-1:-1:-1;32726:18:49;;-1:-1:-1;;;32764:12:49;;;;31572;;31539:1247;;32820:1732;32920:6;32951:2;32994;32982:9;32973:7;32969:23;32965:32;32962:52;;;33010:1;33007;33000:12;32962:52;33043:9;33037:16;-1:-1:-1;;;;;33113:2:49;33105:6;33102:14;33099:34;;;33129:1;33126;33119:12;33099:34;33152:22;;;;33208:4;33190:16;;;33186:27;33183:47;;;33226:1;33223;33216:12;33183:47;33252:22;;:::i;:::-;33303:2;33297:9;33290:5;33283:24;33339:56;33387:7;33382:2;33378;33374:11;33339:56;:::i;:::-;33334:2;33327:5;33323:14;33316:80;33435:4;33431:2;33427:13;33421:20;33466:2;33456:8;33453:16;33450:36;;;33482:1;33479;33472:12;33450:36;33505:17;;33553:4;33545:13;;33541:27;-1:-1:-1;33531:55:49;;33582:1;33579;33572:12;33531:55;33611:2;33605:9;33634:60;33650:43;33690:2;33650:43;:::i;33634:60::-;33728:15;;;33810:1;33806:10;;;;33798:19;;33794:28;;;33759:12;;;;33834:19;;;33831:39;;;33866:1;33863;33856:12;33831:39;33898:2;33894;33890:11;33910:373;33926:6;33921:3;33918:15;33910:373;;;34005:3;33999:10;34041:2;34028:11;34025:19;34022:109;;;34085:1;34114:2;34110;34103:14;34022:109;34156:84;34232:7;34227:2;34213:11;34209:2;34205:20;34201:29;34156:84;:::i;:::-;34144:97;;-1:-1:-1;34261:12:49;;;;33943;;33910:373;;;-1:-1:-1;34310:4:49;34299:16;;34292:31;-1:-1:-1;;;34362:3:49;34354:12;;34348:19;;-1:-1:-1;34379:16:49;;;34376:36;;;34408:1;34405;34398:12;34376:36;34446:75;34513:7;34502:8;34498:2;34494:17;34446:75;:::i;:::-;34439:4;34428:16;;34421:101;34432:5;32820:1732;-1:-1:-1;;;;;;32820:1732:49:o;35747:495::-;36032:2;36021:9;36014:21;35995:4;36058:57;36111:2;36100:9;36096:18;36088:6;36058:57;:::i;:::-;36163:9;36155:6;36151:22;36146:2;36135:9;36131:18;36124:50;36191:45;36229:6;36221;36191:45;:::i;36247:824::-;36716:2;36705:9;36698:21;36679:4;36742:64;36802:2;36791:9;36787:18;36779:6;36742:64;:::i;37076:1178::-;37198:6;37229:2;37272;37260:9;37251:7;37247:23;37243:32;37240:52;;;37288:1;37285;37278:12;37240:52;37321:9;37315:16;-1:-1:-1;;;;;37346:6:49;37343:30;37340:50;;;37386:1;37383;37376:12;37340:50;37409:22;;37462:4;37454:13;;37450:27;-1:-1:-1;37440:55:49;;37491:1;37488;37481:12;37440:55;37520:2;37514:9;37543:60;37559:43;37599:2;37559:43;:::i;37543:60::-;37637:15;;;37719:1;37715:10;;;;37707:19;;37703:28;;;37668:12;;;;37743:19;;;37740:39;;;37775:1;37772;37765:12;37740:39;37799:11;;;;37819:405;37835:6;37830:3;37827:15;37819:405;;;37917:4;37911:3;37902:7;37898:17;37894:28;37891:118;;;37963:1;37992:2;37988;37981:14;37891:118;38035:22;;:::i;:::-;38084:10;;38070:25;;38137:12;;;38131:19;38115:14;;;38108:43;38164:18;;37861:4;37852:14;;;;38202:12;;;;37819:405;;;38243:5;37076:1178;-1:-1:-1;;;;;;;37076:1178:49:o;38259:597::-;38632:2;38621:9;38614:21;38595:4;38658:64;38718:2;38707:9;38703:18;38695:6;38658:64;:::i;:::-;38770:9;38762:6;38758:22;38753:2;38742:9;38738:18;38731:50;38798:52;38843:6;38835;38798:52;:::i;38861:398::-;38983:6;39036:2;39024:9;39015:7;39011:23;39007:32;39004:52;;;39052:1;39049;39042:12;39004:52;39085:9;39079:16;-1:-1:-1;;;;;39110:6:49;39107:30;39104:50;;;39150:1;39147;39140:12;39104:50;39173:80;39245:7;39236:6;39225:9;39221:22;39173:80;:::i;40343:245::-;40422:6;40430;40483:2;40471:9;40462:7;40458:23;40454:32;40451:52;;;40499:1;40496;40489:12;40451:52;-1:-1:-1;;40522:16:49;;40578:2;40563:18;;;40557:25;40522:16;;40557:25;;-1:-1:-1;40343:245:49:o;41232:306::-;41320:6;41328;41336;41389:2;41377:9;41368:7;41364:23;41360:32;41357:52;;;41405:1;41402;41395:12;41357:52;41434:9;41428:16;41418:26;;41484:2;41473:9;41469:18;41463:25;41453:35;;41528:2;41517:9;41513:18;41507:25;41497:35;;41232:306;;;;;:::o;41889:1576::-;42108:13;;42090:32;;42169:4;42157:17;;;42151:24;42077:3;42062:19;;;42184:54;;42217:20;;42151:24;-1:-1:-1;;;;;12113:31:49;12101:44;;12047:104;42184:54;;42287:4;42279:6;42275:17;42269:24;42302:59;42355:4;42344:9;42340:20;42324:14;42302:59;:::i;:::-;;42410:4;42402:6;42398:17;42392:24;42425:54;42473:4;42462:9;42458:20;42442:14;12593:4;12582:16;12570:29;;12526:75;42425:54;;42535:4;42527:6;42523:17;42517:24;42510:4;42499:9;42495:20;42488:54;42591:4;42583:6;42579:17;42573:24;42606:55;42655:4;42644:9;42640:20;42624:14;-1:-1:-1;;;;;14184:30:49;14172:43;;14119:102;42606:55;;42710:4;42702:6;42698:17;42692:24;42725:55;42774:4;42763:9;42759:20;42743:14;-1:-1:-1;;;;;14184:30:49;14172:43;;14119:102;42725:55;;42829:4;42821:6;42817:17;42811:24;42844:55;42893:4;42882:9;42878:20;42862:14;-1:-1:-1;;;;;14184:30:49;14172:43;;14119:102;42844:55;-1:-1:-1;42918:6:49;42961:15;;;42955:22;-1:-1:-1;;;;;14184:30:49;;;43020:18;;;14172:43;;;;43058:6;43101:15;;;43095:22;14184:30;;43160:18;;;14172:43;43198:6;43241:15;;;43235:22;14184:30;;43300:18;;;14172:43;43338:6;43381:15;;;43375:22;14184:30;;;43440:18;;;14172:43;43338:6;43406:53;14119:102;44240:402;44509:2;44498:9;44491:21;44472:4;44529:64;44589:2;44578:9;44574:18;44566:6;44529:64;:::i;:::-;44521:72;;44629:6;44624:2;44613:9;44609:18;44602:34;44240:402;;;;;:::o;44647:384::-;44735:5;44729:12;44724:3;44717:25;44791:4;44784:5;44780:16;44774:23;44767:4;44762:3;44758:14;44751:47;44847:4;44840:5;44836:16;44830:23;44823:4;44818:3;44814:14;44807:47;44699:3;44900:4;44893:5;44889:16;44883:23;44938:4;44931;44926:3;44922:14;44915:28;44959:66;45019:4;45014:3;45010:14;44996:12;44959:66;:::i;45036:1570::-;45621:3;45610:9;45603:22;45584:4;45648:65;45708:3;45697:9;45693:19;45685:6;45648:65;:::i;:::-;45749:6;45744:2;45733:9;45729:18;45722:34;45804:9;45796:6;45792:22;45787:2;45776:9;45772:18;45765:50;45845:6;45839:13;45831:6;45824:29;45904:2;45896:6;45892:15;45886:22;45881:2;45873:6;45869:15;45862:47;45960:2;45952:6;45948:15;45942:22;45937:2;45929:6;45925:15;45918:47;46032:4;46024:6;46020:17;46014:24;46007:32;46000:40;45993:4;45985:6;45981:17;45974:67;46108:4;46100:6;46096:17;46090:24;46083:32;46076:40;46069:4;46061:6;46057:17;46050:67;46169:3;46161:6;46157:16;46151:23;46145:3;46137:6;46133:16;46126:49;46222:4;46214:6;46210:17;46204:24;46263:4;46256;46248:6;46244:17;46237:31;46288:61;46343:4;46335:6;46331:17;46317:12;46288:61;:::i;:::-;46277:72;;;46396:9;46391:3;46387:19;46380:4;46369:9;46365:20;46358:49;46430:40;46466:3;46458:6;46430:40;:::i;:::-;46416:54;;46520:9;46512:6;46508:22;46501:4;46490:9;46486:20;46479:52;46548;46593:6;46585;46548:52;:::i;:::-;46540:60;45036:1570;-1:-1:-1;;;;;;;;45036:1570:49:o;46611:583::-;46775:6;46783;46791;46844:3;46832:9;46823:7;46819:23;46815:33;46812:53;;;46861:1;46858;46851:12;46812:53;46894:9;46888:16;-1:-1:-1;;;;;46919:6:49;46916:30;46913:50;;;46959:1;46956;46949:12;46913:50;46982:80;47054:7;47045:6;47034:9;47030:22;46982:80;:::i;:::-;46972:90;;;47102:2;47091:9;47087:18;47081:25;47071:35;;47125:63;47180:7;47175:2;47164:9;47160:18;47125:63;:::i;:::-;47115:73;;46611:583;;;;;:::o;47199:331::-;47440:2;47429:9;47422:21;47403:4;47460:64;47520:2;47509:9;47505:18;47497:6;47460:64;:::i;47535:308::-;47638:6;47646;47699:3;47687:9;47678:7;47674:23;47670:33;47667:53;;;47716:1;47713;47706:12;47667:53;47745:9;47739:16;47729:26;;47774:63;47829:7;47824:2;47813:9;47809:18;47774:63;:::i;:::-;47764:73;;47535:308;;;;;:::o;49384:434::-;49645:2;49634:9;49627:21;49608:4;49665:61;49722:2;49711:9;49707:18;49699:6;49665:61;:::i;:::-;49757:2;49742:18;;49735:34;;;;-1:-1:-1;49800:2:49;49785:18;49778:34;49657:69;49384:434;-1:-1:-1;49384:434:49:o;49823:377::-;49927:6;49980:2;49968:9;49959:7;49955:23;49951:32;49948:52;;;49996:1;49993;49986:12;49948:52;50029:9;50023:16;-1:-1:-1;;;;;50054:6:49;50051:30;50048:50;;;50094:1;50091;50084:12;50048:50;50117:77;50186:7;50177:6;50166:9;50162:22;50117:77;:::i;50205:402::-;50474:2;50463:9;50456:21;50437:4;50494:64;50554:2;50543:9;50539:18;50531:6;50494:64;:::i;50612:897::-;51109:3;51098:9;51091:22;51072:4;51136:62;51193:3;51182:9;51178:19;51170:6;51136:62;:::i;:::-;51246:9;51238:6;51234:22;51229:2;51218:9;51214:18;51207:50;51280:52;51325:6;51317;51280:52;:::i;:::-;51266:66;;51368:6;51363:2;51352:9;51348:18;51341:34;51423:9;51415:6;51411:22;51406:2;51395:9;51391:18;51384:50;51451:52;51496:6;51488;51451:52;:::i;51514:663::-;51679:6;51687;51740:2;51728:9;51719:7;51715:23;51711:32;51708:52;;;51756:1;51753;51746:12;51708:52;51789:9;51783:16;-1:-1:-1;;;;;51859:2:49;51851:6;51848:14;51845:34;;;51875:1;51872;51865:12;51845:34;51898:77;51967:7;51958:6;51947:9;51943:22;51898:77;:::i;:::-;51888:87;;52021:2;52010:9;52006:18;52000:25;51984:41;;52050:2;52040:8;52037:16;52034:36;;;52066:1;52063;52056:12;52034:36;;52089:82;52163:7;52152:8;52141:9;52137:24;52089:82;:::i;:::-;52079:92;;;51514:663;;;;;:::o;52182:136::-;52221:3;52249:5;52239:39;;52258:18;;:::i;:::-;-1:-1:-1;;;52294:18:49;;52182:136::o;52323:1077::-;52405:12;;52393:25;;52461:4;52450:16;;52444:23;-1:-1:-1;;;;;52495:35:49;;52541:4;52532:14;;12101:44;52556:69;52619:4;52614:3;52610:14;52603:4;52591:9;52586:3;52582:19;52578:30;52556:69;:::i;:::-;52659:3;52655:19;52676:4;52651:30;52692:4;52683:14;;12570:29;52747:4;52736:16;;52730:23;52723:4;52714:14;;52707:47;52799:4;52788:16;;52782:23;-1:-1:-1;;;;;52869:20:49;;;52900:3;52891:13;;14172:43;52940:4;52936:22;;;52932:31;;52974:4;52965:14;;14172:43;52989:66;53049:4;53044:3;53040:14;53035:2;53021:11;53015:4;53011:22;53007:31;-1:-1:-1;;;;;14184:30:49;14172:43;;14119:102;52989:66;53086:4;53082:22;;;53115:6;53106:16;;14172:43;53168:4;53157:16;;53151:23;-1:-1:-1;;;;;53201:20:49;;;14184:30;53232:6;53223:16;;14172:43;53151:23;-1:-1:-1;53249:68:49;53309:6;53304:3;53300:16;53295:2;53281:11;53275:4;53271:22;53267:31;-1:-1:-1;;;;;14184:30:49;14172:43;;14119:102;53249:68;53326;53386:6;53381:3;53377:16;53372:2;53358:11;53352:4;53348:22;53344:31;-1:-1:-1;;;;;14184:30:49;14172:43;;14119:102;53326:68;;;52323:1077;;:::o;53405:261::-;53594:3;53579:19;;53607:53;53583:9;53642:6;53607:53;:::i;53671:804::-;53888:4;53917:3;53958:2;53947:9;53943:18;53970:53;54013:9;54005:6;53970:53;:::i;:::-;54054:3;54039:19;;54032:31;;;;54112:13;;54134:22;;;;54187:3;54172:19;;;54210:4;;54237:15;;;54270:1;54280:169;54294:6;54291:1;54288:13;54280:169;;;54355:13;;54343:26;;54389:12;;;;54424:15;;;;54316:1;54309:9;54280:169;", "language": "Solidity", "natspec": {"methods": {"ownerOf()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "supportsInterface(bytes4)": {"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "kind": "dev", "version": 1}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x854BA99D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xCCBD1637 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE4B16144 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE4B16144 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xE9F14CE6 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xFEAB4454 EQ PUSH2 0x49F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xCCBD1637 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xCCC07959 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xD6935858 EQ PUSH2 0x45E JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xAF640D0F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xAF640D0F EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xB03FD40D EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xB9B38745 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xBD0ADE2B EQ PUSH2 0x411 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x854BA99D EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x97962076 EQ PUSH2 0x3B5 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2203616D GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6B2B091A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6B2B091A EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x72EA61BF EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x7AF6649A EQ PUSH2 0x361 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2203616D EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x5F5C5BAA EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x62965141 EQ PUSH2 0x306 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x5D6BD9C EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x9252F02 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xA3550AA EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x1EF4590D EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x21603F43 EQ PUSH2 0x2B6 JUMPI JUMPDEST PUSH2 0x1B1 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1 PUSH1 0x24 PUSH1 0x4 CALLDATASIZE DUP5 PUSH2 0x47EB JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x20 DUP6 ADD MLOAD SWAP5 SWAP6 POP SWAP3 POP POP CALLDATASIZE PUSH1 0x23 NOT DUP2 ADD SWAP2 POP PUSH1 0x1F NOT ADD PUSH1 0x4 DUP4 DUP1 CALLDATACOPY DUP2 PUSH1 0x24 PUSH1 0x4 CALLDATACOPY PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP8 GAS DELEGATECALL SWAP3 POP POP POP PUSH2 0x229 DUP2 PUSH2 0x693 JUMP JUMPDEST POP POP POP STOP JUMPDEST PUSH2 0x241 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x4815 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH2 0x6E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x4A51 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BA6 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP3 SWAP2 SWAP1 PUSH2 0x4C9F JUMP JUMPDEST PUSH2 0x241 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DDC JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DFE JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x4E4F JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DFE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24D JUMP JUMPDEST PUSH2 0x25E PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x319 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DFE JUMP JUMPDEST PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24D JUMP JUMPDEST PUSH2 0x344 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x4DFE JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x4F00 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x113A JUMP JUMPDEST PUSH2 0x25E PUSH2 0x114C JUMP JUMPDEST PUSH2 0x374 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x4F62 JUMP JUMPDEST PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24D JUMP JUMPDEST PUSH2 0x241 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x241 JUMP JUMPDEST PUSH32 0xDCF6913C74762E0B3C7F94F504BB2BE7445BBD8D11ABEE9960F04EBF85E7A7B2 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F8A JUMP JUMPDEST PUSH2 0x119D JUMP JUMPDEST PUSH2 0x295 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x4A51 JUMP JUMPDEST PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x295 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FB3 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x39D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x5016 JUMP JUMPDEST PUSH2 0x189F JUMP JUMPDEST PUSH2 0x273 PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FB3 JUMP JUMPDEST PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x503C JUMP JUMPDEST PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x4DFE JUMP JUMPDEST PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x10000 SWAP1 SWAP2 DIV AND CALLER EQ DUP1 PUSH2 0x57C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x16279055 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x558 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST DUP1 PUSH2 0x61A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x6D70F7AE CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E63653A2063616C6C6572206D757374206265205265706F7369 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F727920436F6E7472616374206F72204F70657261746F7200000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x6A4 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6DA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x15D37895 PUSH1 0xE3 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x691 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x71F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x27BCDBC9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE PUSH2 0x84E SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x4F79B792 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x27BCDBC9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x4F79B792 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x823 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x847 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST DUP8 DUP8 PUSH2 0x18B6 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP7 POP SWAP7 POP SWAP7 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x868 PUSH2 0x461E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 JUMPDEST PUSH2 0x879 PUSH1 0x8 DUP3 PUSH2 0x50A5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x8C2 JUMPI DUP6 DUP6 PUSH2 0x88D DUP5 PUSH1 0x8 PUSH2 0x50BC JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x89C JUMPI PUSH2 0x89C PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 EQ ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8C2 JUMP JUMPDEST DUP2 PUSH2 0x8BA DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP3 POP POP PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8DC PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x905 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x965 JUMPI DUP8 DUP8 PUSH2 0x920 DUP4 PUSH1 0x8 PUSH2 0x50BC JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x92F JUMPI PUSH2 0x92F PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x948 JUMPI PUSH2 0x948 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x95D DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90B JUMP JUMPDEST POP PUSH2 0xB11 DUP10 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP11 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x98E JUMPI PUSH2 0x98E PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP11 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x9AD JUMPI PUSH2 0x9AD PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP11 PUSH1 0x2 DUP2 DUP2 LT PUSH2 0x9CC JUMPI PUSH2 0x9CC PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 EQ ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP11 PUSH1 0x3 DUP2 DUP2 LT PUSH2 0x9F1 JUMPI PUSH2 0x9F1 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 EQ ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP11 PUSH1 0x7 DUP2 DUP2 LT PUSH2 0xA16 JUMPI PUSH2 0xA16 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP12 PUSH1 0x5 DUP2 DUP2 LT PUSH2 0xA44 JUMPI PUSH2 0xA44 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP12 PUSH1 0x6 DUP2 DUP2 LT PUSH2 0xA63 JUMPI PUSH2 0xA63 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP12 PUSH1 0x4 DUP2 DUP2 LT PUSH2 0xA82 JUMPI PUSH2 0xA82 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xACB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAB8 PUSH2 0x4668 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAB0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAE4 JUMPI SWAP1 POP JUMPDEST POP PUSH2 0x1C39 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH4 0x2BE5DB23 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x57CBB646 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xB88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBBB PUSH2 0x46A1 JUMP JUMPDEST PUSH2 0x6DA DUP3 PUSH1 0x0 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA PUSH5 0xE8D4A51000 DUP4 PUSH2 0x5105 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x10000 SWAP1 SWAP2 DIV AND CALLER EQ DUP1 PUSH2 0xC8A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x6D70F7AE CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E63653A2063616C6C6572206D757374206265205265706F7369 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3A37B93C9027B832B930BA37B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCFE PUSH5 0x2540BE400 DUP5 PUSH2 0x5105 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xD10 DUP3 PUSH5 0x2540BE400 PUSH2 0x5127 JUMP JUMPDEST GT ISZERO PUSH2 0x6DA JUMPI PUSH2 0x6DA PUSH2 0x5146 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD73 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD5F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDC6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDB1 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x10E7 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38A699A4 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE17 JUMPI PUSH2 0xE17 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST PUSH2 0xE87 JUMPI PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x27EE9DC2 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xECA JUMPI PUSH2 0xECA PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF35 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x51B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xF82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x5F706174684C69737420706174682E6C656E6774683E3 PUSH1 0x4C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x108D JUMPI PUSH2 0x1072 PUSH20 0x0 PUSH4 0x76254FF9 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFC9 JUMPI PUSH2 0xFC9 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 PUSH1 0x1 PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x50BC JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xFEF JUMPI PUSH2 0xFEF PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x103A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x107B JUMPI PUSH2 0x108D JUMP JUMPDEST DUP1 PUSH2 0x1085 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0x109B SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10A9 JUMPI POP POP PUSH2 0x10D5 JUMP JUMPDEST DUP2 DUP7 DUP6 PUSH2 0x10B5 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0x10C7 JUMPI PUSH2 0x10C7 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST DUP1 PUSH2 0x10DF DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDCD JUMP JUMPDEST POP DUP1 DUP4 MSTORE PUSH1 0x0 DUP2 GT PUSH2 0x1133 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5F6C6973745061746846726F6D20636F756E743E3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1142 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x691 PUSH1 0x0 PUSH2 0x2E31 JUMP JUMPDEST PUSH2 0x1154 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x691 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA PUSH6 0xFFFFFFFFFFFF DUP4 AND PUSH5 0x174876E800 PUSH2 0x5127 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1198 JUMPI POP PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH5 0x2540BE400 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x11BF PUSH2 0x461E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x27BCDBC9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 SWAP2 PUSH2 0x12EF SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x4F79B792 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1233 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x27BCDBC9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x4F79B792 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E8 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST DUP7 DUP7 PUSH2 0x15A8 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1326 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1334 PUSH1 0x8 DUP8 PUSH2 0x50A5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1381 JUMPI DUP7 DUP7 PUSH2 0x134C DUP5 PUSH1 0x8 PUSH2 0x50BC JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x135B JUMPI PUSH2 0x135B PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 EQ ISZERO PUSH2 0x136F JUMPI PUSH2 0x1381 JUMP JUMPDEST DUP2 PUSH2 0x1379 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x139B JUMPI PUSH2 0x139B PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13C4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1424 JUMPI DUP9 DUP9 PUSH2 0x13DF DUP4 PUSH1 0x8 PUSH2 0x50BC JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x13EE JUMPI PUSH2 0x13EE PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1407 JUMPI PUSH2 0x1407 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x141C DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13CA JUMP JUMPDEST POP PUSH2 0x1594 DUP11 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP12 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x144D JUMPI PUSH2 0x144D PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP12 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x146C JUMPI PUSH2 0x146C PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP12 PUSH1 0x2 DUP2 DUP2 LT PUSH2 0x148B JUMPI PUSH2 0x148B PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 EQ ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP12 PUSH1 0x3 DUP2 DUP2 LT PUSH2 0x14B0 JUMPI PUSH2 0x14B0 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 EQ ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP12 PUSH1 0x7 DUP2 DUP2 LT PUSH2 0x14D5 JUMPI PUSH2 0x14D5 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP13 PUSH1 0x5 DUP2 DUP2 LT PUSH2 0x1503 JUMPI PUSH2 0x1503 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP13 PUSH1 0x6 DUP2 DUP2 LT PUSH2 0x1522 JUMPI PUSH2 0x1522 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP13 PUSH1 0x4 DUP2 DUP2 LT PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x158A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1577 PUSH2 0x4668 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x156F JUMPI SWAP1 POP JUMPDEST POP SWAP1 MSTORE PUSH1 0x0 PUSH2 0x2E8C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B0 PUSH2 0x461E JUMP JUMPDEST DUP2 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 GT ISZERO PUSH2 0x1606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C6976657279206172726179206D61782073697A65206973203332000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x160E PUSH2 0x4730 JUMP JUMPDEST DUP6 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH2 0x162C JUMPI PUSH1 0x0 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x1647 JUMPI PUSH1 0x0 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP7 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1699 JUMPI PUSH2 0x1699 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ PUSH2 0x16E6 JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x16BA JUMPI PUSH2 0x16BA PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP1 PUSH2 0x16CE SWAP1 PUSH2 0x50EA JUMP JUMPDEST SWAP5 POP PUSH1 0x28 DUP2 LT PUSH2 0x16E0 JUMPI PUSH2 0x16E0 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE JUMPDEST DUP1 PUSH2 0x16F0 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x167F JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x23AA9AB PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x2E7A327EF83C2AF7579C6634F2F5604519800C5F07626F27BD602FD11ED8E6EC PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8EAA6AC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x51EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA3550AABEEA45F9D515C45EA5DADCD6EFBE5A3C73AB07644F630DE564C6515A ADDRESS DUP12 DUP12 PUSH1 0x60 PUSH1 0x28 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17EC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x182A SWAP2 SWAP1 PUSH2 0x526B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1865 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x186A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH2 0x1877 DUP2 PUSH2 0x693 JUMP JUMPDEST POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x188B PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x691 PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA PUSH4 0xFFFFFFFF DUP4 AND PUSH5 0xE8D4A51000 PUSH2 0x5127 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x18DE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP2 GT ISZERO PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C6976657279206172726179206D61782073697A65206973203332000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x1939 PUSH2 0x4730 JUMP JUMPDEST DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x1957 JUMPI PUSH1 0x0 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH2 0x1972 JUMPI PUSH1 0x0 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP8 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP9 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP9 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 DUP1 DUP9 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A23 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x19C4 JUMPI PUSH2 0x19C4 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ PUSH2 0x1A11 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x19E5 JUMPI PUSH2 0x19E5 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP1 PUSH2 0x19F9 SWAP1 PUSH2 0x50EA JUMP JUMPDEST SWAP5 POP PUSH1 0x28 DUP2 LT PUSH2 0x1A0B JUMPI PUSH2 0x1A0B PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE JUMPDEST DUP1 PUSH2 0x1A1B DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19AA JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x23AA9AB PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x2E7A327EF83C2AF7579C6634F2F5604519800C5F07626F27BD602FD11ED8E6EC PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8EAA6AC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD0 SWAP2 SWAP1 PUSH2 0x51EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBD0ADE2BCAE368FCA26BB02146561A2830136BF30C4A34C648255FCCEBBE2254 ADDRESS DUP13 DUP13 PUSH1 0x60 PUSH1 0x28 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B17 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1B55 SWAP2 SWAP1 PUSH2 0x526B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH2 0x1BA2 DUP2 PUSH2 0x693 JUMP JUMPDEST POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB7 PUSH2 0x2DD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x1C25 DUP2 PUSH2 0x2E31 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA PUSH5 0x174876E800 DUP4 PUSH2 0x5105 JUMP JUMPDEST PUSH2 0x1C41 PUSH2 0x461E JUMP JUMPDEST DUP2 PUSH2 0x1C4A PUSH2 0x461E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5A DUP9 DUP9 PUSH1 0x0 ADD MLOAD PUSH2 0x3472 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1C72 PUSH2 0x474F JUMP JUMPDEST PUSH2 0x1CFE DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C87 JUMPI PUSH2 0x1C87 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1CA3 JUMPI PUSH2 0x1CA3 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD PUSH2 0x1CB6 SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1CC6 JUMPI PUSH2 0x1CC6 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x2E8C JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE ISZERO ISZERO SWAP1 POP PUSH2 0x1D18 JUMPI POP PUSH2 0x1DF6 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D2A JUMPI PUSH2 0x1D2A PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD DUP2 MSTORE PUSH20 0x0 PUSH4 0x7513CE1B DUP7 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D8E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D7B PUSH2 0x4668 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D73 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5465 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1DCA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1DF2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5692 JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 PUSH2 0x1E00 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C62 JUMP JUMPDEST POP POP POP PUSH1 0x40 DUP2 ADD MLOAD MLOAD DUP1 PUSH2 0x1E1D JUMPI POP POP PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x1E25 PUSH2 0x47A7 JUMP JUMPDEST DUP8 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP10 ADD MLOAD DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP11 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP12 ADD MLOAD ISZERO ISZERO DUP2 DUP6 ADD MSTORE PUSH1 0x80 DUP1 DUP13 ADD MLOAD ISZERO ISZERO DUP2 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP14 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP14 ADD MLOAD SWAP1 DUP7 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP6 ADD DUP2 DUP2 MSTORE DUP3 DUP6 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP6 DUP2 MSTORE DUP15 MLOAD DUP6 MSTORE SWAP7 DUP15 ADD MLOAD SWAP1 SWAP2 MSTORE SWAP4 DUP13 ADD MLOAD SWAP1 SWAP4 MSTORE SWAP1 DUP11 ADD MLOAD SWAP1 SWAP3 MSTORE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EB8 JUMPI PUSH2 0x1EB8 PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EF1 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1EDE PUSH2 0x461E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1ED6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP10 MLOAD DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1FF6 JUMPI PUSH2 0x1F3A DUP8 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F26 JUMPI PUSH2 0x1F26 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP7 DUP12 PUSH2 0x3866 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F4C JUMPI PUSH2 0x1F4C PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F6B JUMPI PUSH2 0x1F6B PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD MLOAD GT ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x504152414E4F4941205F5F73656172636843466F6C6C6F77506174682073686F PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x756C642072657475726E206D617820312064657363 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST DUP1 PUSH2 0x1FEE DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F05 JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x2157 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2019 JUMPI PUSH2 0x2019 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2032 JUMPI PUSH2 0x2145 JUMP JUMPDEST PUSH1 0x0 NOT DUP5 EQ DUP1 PUSH2 0x2062 JUMPI POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x204F JUMPI PUSH2 0x204F PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 GT JUMPDEST ISZERO PUSH2 0x20F7 JUMPI PUSH1 0x0 NOT DUP5 EQ ISZERO DUP1 ISZERO PUSH2 0x2099 JUMPI POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2086 JUMPI PUSH2 0x2086 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP4 LT JUMPDEST ISZERO PUSH2 0x20A6 JUMPI DUP3 SWAP2 POP PUSH2 0x20CB JUMP JUMPDEST DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20B8 JUMPI PUSH2 0x20B8 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP2 POP JUMPDEST DUP1 SWAP4 POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20E0 JUMPI PUSH2 0x20E0 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP3 POP PUSH2 0x2145 JUMP JUMPDEST DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2109 JUMPI PUSH2 0x2109 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 GT ISZERO PUSH2 0x2145 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2132 JUMPI PUSH2 0x2132 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x214F DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FFF JUMP JUMPDEST POP PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x216A JUMPI POP POP POP PUSH2 0x2658 JUMP JUMPDEST DUP6 MSTORE POP PUSH2 0x2175 PUSH2 0x461E JUMP JUMPDEST PUSH2 0x21A2 DUP9 PUSH1 0x40 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x218E JUMPI PUSH2 0x218E PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP8 DUP8 DUP13 PUSH2 0x3866 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD MLOAD PUSH1 0x1 EQ PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x504152414E4F4941205F5F73656172636843466F6C6C6F77506174682073686F PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x756C642072657475726E20312064657363 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6966202873656C65637465642E717479203D3D3029 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9FAB220F PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x9FAB220F SWAP1 PUSH2 0x2292 SWAP1 DUP14 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x57AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x22AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x22D7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5692 JUMP JUMPDEST SWAP10 POP DUP1 PUSH1 0x60 ADD MLOAD MLOAD DUP4 PUSH2 0x22EA SWAP2 SWAP1 PUSH2 0x50BC JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2303 JUMPI PUSH2 0x2303 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD MLOAD MLOAD PUSH1 0x0 EQ PUSH2 0x2390 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x232E JUMPI PUSH2 0x232E PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2353 JUMPI PUSH2 0x2353 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD MLOAD MLOAD PUSH2 0x236A SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x237A JUMPI PUSH2 0x237A PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x238D SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP9 PUSH20 0x0 PUSH4 0x7071133E SWAP1 SWAP2 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23C4 JUMPI PUSH2 0x23C4 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23EF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x57D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x240C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2434 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x57E4 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP8 ADD MLOAD SWAP1 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xBF07928F PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP12 POP PUSH20 0x0 SWAP3 PUSH4 0xBF07928F SWAP3 PUSH2 0x2478 SWAP3 SWAP1 SWAP2 PUSH1 0x4 ADD PUSH2 0x5899 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x24BD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x58BE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE DUP12 MLOAD DUP6 MSTORE PUSH1 0xA0 DUP14 ADD MLOAD ISZERO PUSH2 0x2539 JUMPI DUP13 PUSH1 0xA0 ADD MLOAD DUP4 LT PUSH2 0x2523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696620286D6178636F756E743E3D7461726765745F2E6D6178636F756E742900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST DUP3 DUP14 PUSH1 0xA0 ADD MLOAD PUSH2 0x2533 SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MSTORE JUMPDEST PUSH1 0x40 DUP14 ADD MLOAD ISZERO PUSH2 0x25AE JUMPI PUSH1 0x40 DUP14 ADD MLOAD DUP2 MLOAD LT PUSH2 0x2597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6966202873656C65637465642E7174793E3D7461726765745F2E717479290000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP15 ADD MLOAD PUSH2 0x25A8 SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMPDEST PUSH1 0x40 DUP13 ADD MLOAD ISZERO PUSH2 0x2651 JUMPI PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0x25DB SWAP2 SWAP1 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x25E5 SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST SWAP1 POP DUP13 PUSH1 0x40 ADD MLOAD DUP2 LT PUSH2 0x263A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x69662028746F74616C3E3D7365617263686172675F2E6D6178746F74616C2900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST DUP1 DUP14 PUSH1 0x40 ADD MLOAD PUSH2 0x264A SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE POP JUMPDEST POP POP PUSH2 0x1EF7 JUMP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x266F PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x26C4 PUSH2 0x4E17 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x26D5 JUMPI PUSH2 0x26D5 PUSH2 0x4E17 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH9 0x10000000000000000 DUP1 DUP4 DIV DUP3 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP5 DIV DUP4 AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP4 DIV DUP3 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x4 SWAP6 DUP7 ADD SLOAD DUP1 DUP4 AND PUSH1 0xE0 DUP8 ADD MSTORE SWAP1 DUP2 DIV DUP3 AND PUSH2 0x100 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP2 DIV AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD SWAP1 MLOAD PUSH4 0x657C7E09 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x657C7E09 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F1 SWAP2 SWAP1 PUSH2 0x58F2 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP3 DUP1 PUSH2 0x288A JUMPI POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x36181B67 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x6C3036CE SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2888 SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2D0D JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x28AD SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x2B2076E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x5640EDC6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x290A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x292E SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST ISZERO PUSH2 0x2942 JUMPI PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO PUSH2 0x296E JUMPI PUSH2 0x2964 DUP2 PUSH2 0x120 ADD MLOAD PUSH2 0x119D JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2A8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23AA9AB PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0xCD775F2396F9F13F12BCF8CA32E21DF66559A8ADC3944D0591127E7731F7AB85 PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8EAA6AC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A16 SWAP2 SWAP1 PUSH2 0x51EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9BF9858 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A47 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A88 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMPDEST PUSH2 0x2A9B DUP2 PUSH1 0xC0 ADD MLOAD PUSH2 0x119D JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x2AAE SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B7D0F69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0xB6FA1ED2 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2B0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2F SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST ISZERO PUSH2 0x2CF8 JUMPI PUSH2 0x2B42 DUP2 PUSH2 0x140 ADD MLOAD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x2B57 SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x23AA9AB PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x3CB99135F7A7C088D9085B446345038A22A85F4E8FE072B0E1B66D97243E7458 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8EAA6AC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C08 SWAP2 SWAP1 PUSH2 0x51EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6464B68A DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C46 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C87 SWAP2 SWAP1 PUSH2 0x5916 JUMP JUMPDEST POP SWAP2 POP POP DUP1 PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x145D5BDD194E88139BDD081C5D5BDD1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x2CDC SWAP1 DUP3 PUSH2 0x5105 JUMP JUMPDEST DUP4 PUSH2 0x120 ADD MLOAD PUSH2 0x2CEC SWAP2 SWAP1 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE POP PUSH2 0x2D0D JUMP JUMPDEST PUSH2 0x2D06 DUP2 PUSH2 0x100 ADD MLOAD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x212D6CB PUSH1 0xE2 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x84B5B2C SWAP1 PUSH2 0x2D44 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x5944 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2D61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D85 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x180 DUP4 ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2DA7 JUMPI PUSH2 0x2DA7 PUSH2 0x4E17 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2DBA JUMPI PUSH2 0x2DBA PUSH2 0x4E17 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1A0 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x10000 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E63653A2063616C6C6572206D757374206265204F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2EB4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x2ECA DUP8 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 DUP1 PUSH2 0x4165 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2EE9 JUMPI PUSH2 0x2EE9 PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2F22 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x2F0F PUSH2 0x4668 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2F07 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3274 JUMPI DUP10 PUSH1 0x0 ADD MLOAD DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F48 JUMPI PUSH2 0x2F48 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD EQ PUSH2 0x2FB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F5F736561726368206F75745F5B695D2E61646472203D3D207461726765745F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2E63757272656E6379 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST DUP9 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2FE3 JUMPI POP DUP9 PUSH1 0x0 ADD MLOAD DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2FD5 JUMPI PUSH2 0x2FD5 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x2FED JUMPI PUSH2 0x3262 JUMP JUMPDEST DUP10 PUSH1 0x20 ADD MLOAD DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3004 JUMPI PUSH2 0x3004 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x301B JUMPI PUSH2 0x3262 JUMP JUMPDEST DUP9 PUSH1 0x60 ADD MLOAD PUSH20 0x0 PUSH4 0x5640453D SWAP1 SWAP2 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x304E JUMPI PUSH2 0x304E PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3077 SWAP3 SWAP2 SWAP1 PUSH2 0x5A33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3094 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30B8 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x30CA JUMPI PUSH2 0x30CA PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x30E1 JUMPI PUSH2 0x3262 JUMP JUMPDEST DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x30F3 JUMPI PUSH2 0x30F3 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD PUSH20 0x0 PUSH4 0x5640453D SWAP1 SWAP2 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3132 JUMPI PUSH2 0x3132 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315B SWAP3 SWAP2 SWAP1 PUSH2 0x5A33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3178 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x319C SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x31AE JUMPI PUSH2 0x31AE PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x31C4 SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST LT ISZERO PUSH2 0x31CF JUMPI PUSH2 0x3262 JUMP JUMPDEST DUP10 PUSH1 0xA0 ADD MLOAD PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x31E6 JUMPI POP PUSH1 0x20 DUP10 ADD MLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3212 JUMPI POP DUP9 PUSH1 0x20 ADD MLOAD DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3204 JUMPI PUSH2 0x3204 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x321C JUMPI PUSH2 0x3262 JUMP JUMPDEST DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x322E JUMPI PUSH2 0x322E PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3248 JUMPI PUSH2 0x3248 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x325E SWAP1 PUSH2 0x50EA JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x326C DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F29 JUMP JUMPDEST POP DUP2 MSTORE SWAP4 POP PUSH20 0x0 SWAP1 POP PUSH4 0xB51B8E82 DUP5 PUSH1 0x0 DUP10 DUP10 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x32D4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x32C1 PUSH2 0x4668 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x32B9 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32F5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5A88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3312 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x333A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5B31 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP4 PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7BF5CDDB PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0xF7EB9BB6 SWAP1 PUSH2 0x337D SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x339A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x33C2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x58BE JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x33DD JUMPI POP DUP6 PUSH1 0xA0 ADD MLOAD DUP4 MLOAD GT JUMPDEST ISZERO PUSH2 0x159E JUMPI PUSH1 0xA0 DUP7 ADD MLOAD DUP1 DUP5 MSTORE PUSH1 0x40 MLOAD PUSH4 0x742228D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x742228D7 SWAP1 PUSH2 0x3421 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B88 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x343E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3462 SWAP2 SWAP1 PUSH2 0x5B9B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x34C7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x34B3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x351F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F706174684C6973742066726F6D706174682E6C656E6774683E300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3538 JUMPI PUSH2 0x3538 PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x356B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3556 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3816 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38A699A4 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x35BC JUMPI PUSH2 0x35BC PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35E2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3623 SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST PUSH2 0x362C JUMPI PUSH2 0x3804 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x27EE9DC2 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x366F JUMPI PUSH2 0x366F PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3695 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x36DA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x51B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x5F706174684C69737420706174682E6C656E6774683E3 PUSH1 0x4C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST DUP6 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x3737 SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3747 JUMPI PUSH2 0x3747 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ PUSH2 0x375A JUMPI POP PUSH2 0x3804 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0x376B SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x37BC JUMPI PUSH2 0x37A1 PUSH20 0x0 PUSH4 0x76254FF9 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFC9 JUMPI PUSH2 0xFC9 PUSH2 0x50D4 JUMP JUMPDEST PUSH2 0x37AA JUMPI PUSH2 0x37BC JUMP JUMPDEST DUP1 PUSH2 0x37B4 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x375D JUMP JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0x37CA SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x37D8 JUMPI POP POP PUSH2 0x3804 JUMP JUMPDEST DUP2 DUP7 DUP6 PUSH2 0x37E4 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0x37F6 JUMPI PUSH2 0x37F6 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST DUP1 PUSH2 0x380E DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3572 JUMP JUMPDEST POP DUP1 DUP4 MSTORE PUSH1 0x0 DUP2 GT PUSH2 0x385E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5F706174684C69737420636F756E743E3 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x386E PUSH2 0x461E JUMP JUMPDEST PUSH1 0x2 DUP6 MLOAD LT ISZERO PUSH2 0x38CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F5F73656172636843466F6C6C6F775061746820706174685F2E6C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1F1E99 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST DUP4 MLOAD DUP6 MLOAD DUP7 SWAP1 PUSH2 0x38DE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x38EE JUMPI PUSH2 0x38EE PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ PUSH2 0x3969 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F5F73656172636843466F6C6C6F775061746820706174685F5B706174685F2E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C656E677468202D20315D3D3D7461726765745F2E63757272656E6379000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3973 PUSH2 0x474F JUMP JUMPDEST DUP7 MLOAD PUSH1 0x2 EQ ISZERO PUSH2 0x3A79 JUMPI PUSH2 0x39B0 DUP8 PUSH1 0x2 DUP10 MLOAD PUSH2 0x398F SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x399F JUMPI PUSH2 0x399F PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP8 PUSH1 0x0 PUSH2 0x2E8C JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP8 MLOAD SWAP1 SWAP3 POP PUSH20 0x0 SWAP1 PUSH4 0x2FBF1F93 SWAP1 DUP4 SWAP1 DUP11 SWAP1 PUSH2 0x39F2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3A02 JUMPI PUSH2 0x3A02 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3A4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3A72 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5BED JUMP JUMPDEST SWAP1 POP PUSH2 0x40D8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP10 MLOAD PUSH2 0x3A8F SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3C4C JUMPI PUSH1 0x0 PUSH2 0x3B84 DUP11 PUSH2 0x3AA7 PUSH1 0x1 DUP6 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3AB7 JUMPI PUSH2 0x3AB7 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP14 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x3ADC JUMPI PUSH2 0x3ADC PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B29 JUMPI PUSH2 0x3B29 PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3B52 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x2E8C JUMP JUMPDEST POP SWAP2 POP POP DUP1 PUSH2 0x3B97 JUMPI POP POP POP POP POP PUSH2 0x415D JUMP JUMPDEST DUP7 PUSH20 0x0 PUSH4 0xE23EDBEF SWAP1 SWAP2 DUP13 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3BC6 JUMPI PUSH2 0x3BC6 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BEB SWAP3 SWAP2 SWAP1 PUSH2 0x5C21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3C08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C2C SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST PUSH2 0x3C36 SWAP1 DUP3 PUSH2 0x50BC JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x3C44 SWAP1 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A81 JUMP JUMPDEST POP PUSH2 0x3CA6 DUP9 PUSH1 0x2 DUP11 MLOAD PUSH2 0x3C5F SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3C6F JUMPI PUSH2 0x3C6F PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x2E8C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH2 0x3CC1 JUMPI POP POP POP PUSH2 0x415D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP8 MLOAD PUSH20 0x0 SWAP1 PUSH4 0x2FBF1F93 SWAP1 DUP5 SWAP1 DUP12 SWAP1 PUSH2 0x3CF6 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3D06 JUMPI PUSH2 0x3D06 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D31 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3D4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3D76 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5BED JUMP JUMPDEST SWAP2 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x3D99 SWAP2 SWAP1 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x3DA3 SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP10 MLOAD PUSH2 0x3DB5 SWAP2 SWAP1 PUSH2 0x50A5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x40D5 JUMPI PUSH1 0x60 PUSH2 0x3DC8 PUSH2 0x474F JUMP JUMPDEST PUSH2 0x3DD0 PUSH2 0x47A7 JUMP JUMPDEST PUSH2 0x3DFB PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP13 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3E0D JUMPI PUSH2 0x3E0D PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP10 PUSH20 0x0 PUSH4 0xE23EDBEF SWAP1 SWAP2 DUP16 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x3E4D JUMPI PUSH2 0x3E4D PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E72 SWAP3 SWAP2 SWAP1 PUSH2 0x5C21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3E8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EB3 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST PUSH2 0x3EBD SWAP1 DUP8 PUSH2 0x50A5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP13 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x3F05 SWAP1 DUP15 SWAP1 PUSH2 0x3EE4 SWAP1 DUP9 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3EF4 JUMPI PUSH2 0x3EF4 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 PUSH1 0x0 PUSH2 0x2E8C JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP5 POP ISZERO ISZERO SWAP2 POP PUSH2 0x3F29 SWAP1 POP JUMPI POP POP POP POP POP POP PUSH2 0x415D JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x3F4A SWAP2 SWAP1 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x3F54 SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST SWAP4 POP PUSH20 0x0 PUSH4 0x50308EDE DUP7 DUP9 DUP15 PUSH2 0x3F7E PUSH1 0x1 DUP10 PUSH2 0x50A5 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3F8E JUMPI PUSH2 0x3F8E PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5C34 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3FD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3FFB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5C73 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP5 ADD MLOAD MLOAD SWAP1 DUP4 ADD MLOAD MLOAD SWAP2 SWAP9 POP SWAP2 SWAP7 POP PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x4020 SWAP2 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x402A SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP8 ADD DUP1 MLOAD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP2 ADD MLOAD DUP2 ADD MLOAD SWAP2 MLOAD ADD MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x4053 SWAP2 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x405D SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x4090 SWAP2 SWAP1 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x409A SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x40AD SWAP2 SWAP1 PUSH2 0x5127 JUMP JUMPDEST PUSH2 0x40B7 SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x20 ADD MSTORE POP DUP2 SWAP1 POP PUSH2 0x40CD DUP2 PUSH2 0x5CD6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DB8 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7513CE1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x7513CE1B SWAP1 PUSH2 0x4113 SWAP1 DUP7 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x5465 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x4130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4158 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5692 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH20 0x0 PUSH4 0x76254FF9 DUP13 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41B2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x41CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F3 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP DUP6 PUSH2 0x4211 JUMPI DUP1 SWAP6 POP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4229 JUMPI PUSH2 0x4229 PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4262 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x424F PUSH2 0x4668 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4247 JUMPI SWAP1 POP JUMPDEST POP SWAP5 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x460F JUMPI DUP7 DUP5 LT PUSH2 0x427C JUMPI PUSH2 0x460F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4294 JUMPI PUSH2 0x4294 PUSH2 0x50D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH20 0x0 PUSH4 0x84B5B2C DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42E6 SWAP2 SWAP1 PUSH2 0x5DC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x4303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4327 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST ISZERO DUP1 PUSH2 0x43AB JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x212D6CB PUSH1 0xE2 SHL DUP2 MSTORE TIMESTAMP SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x84B5B2C SWAP1 PUSH2 0x4367 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x5DC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x4384 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43A8 SWAP2 SWAP1 PUSH2 0x5076 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x44C8 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x23AA9AB PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x33FFBDFF3A4282DF4353F3593B78D26AAF4C28B5786164F828858505BC5E301C PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8EAA6AC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4436 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x445A SWAP2 SWAP1 PUSH2 0x51EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5ACA1641 DUP3 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4487 SWAP3 SWAP2 SWAP1 PUSH2 0x5DD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44C8 SWAP2 SWAP1 PUSH2 0x5059 JUMP JUMPDEST ISZERO PUSH2 0x45FB JUMPI DUP6 PUSH2 0x44D7 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP7 POP POP DUP9 DUP7 GT PUSH2 0x44E7 JUMPI POP PUSH2 0x45FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4510 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x44FE JUMPI PUSH2 0x44FE PUSH2 0x50D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH2 0x2667 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA0 ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD LT ISZERO PUSH2 0x4529 JUMPI POP POP PUSH2 0x45FD JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x4540 JUMPI PUSH2 0x4540 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x4567 JUMPI PUSH2 0x4567 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xA0 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x458E JUMPI PUSH2 0x458E PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x80 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x45B5 JUMPI PUSH2 0x45B5 PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x100 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x45DD JUMPI PUSH2 0x45DD PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 ADD MSTORE DUP6 PUSH2 0x45F6 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP7 POP POP POP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x4607 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4268 JUMP JUMPDEST POP POP POP DUP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4654 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4723 JUMPI PUSH2 0x4723 PUSH2 0x4E17 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x500 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x478C PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x47FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x4808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x488C JUMPI PUSH2 0x488C PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x488C JUMPI PUSH2 0x488C PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x488C JUMPI PUSH2 0x488C PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x48FE JUMPI PUSH2 0x48FE PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x491F DUP2 PUSH2 0x4906 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x495A JUMPI PUSH2 0x495A PUSH2 0x4854 JUMP JUMPDEST PUSH1 0x40 SWAP2 DUP3 MSTORE DUP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 POP DUP3 ADD CALLDATALOAD DUP2 PUSH2 0x497C DUP3 PUSH2 0x4906 JUMP JUMPDEST DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x498E PUSH1 0x60 DUP6 ADD PUSH2 0x4914 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP5 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x49DC JUMPI PUSH2 0x49DC PUSH2 0x4854 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x49F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4A0C PUSH2 0x4A07 DUP4 PUSH2 0x49C3 JUMP JUMPDEST PUSH2 0x48D6 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x4A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x4A46 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x4A2F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1A0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4A6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x4A76 DUP2 PUSH2 0x483F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x4A8D DUP2 PUSH2 0x483F JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH2 0x4AA3 DUP9 PUSH1 0x80 DUP10 ADD PUSH2 0x4924 JUMP JUMPDEST SWAP2 POP PUSH2 0x180 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4ACB DUP10 DUP3 DUP11 ADD PUSH2 0x49E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B08 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4AEC JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP4 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4B99 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 SWAP2 DUP7 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x4B85 DUP2 DUP8 ADD DUP4 PUSH2 0x4AD8 JUMP JUMPDEST SWAP11 DUP8 ADD SWAP11 SWAP6 POP POP POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4B31 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4BB9 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4B13 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x415D PUSH1 0x40 DUP4 ADD DUP5 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B08 JUMPI DUP2 MLOAD DUP1 MLOAD DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4C78 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP1 DUP4 MSTORE PUSH2 0x100 DUP1 DUP5 ADD DUP7 MLOAD DUP4 DUP7 ADD MSTORE PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH1 0x60 PUSH2 0x4CDA DUP2 DUP10 ADD DUP4 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST DUP6 DUP11 ADD MLOAD PUSH1 0xC0 DUP10 DUP2 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD SWAP6 DUP7 SWAP1 MSTORE PUSH2 0x120 PUSH1 0x5 DUP8 SWAP1 SHL DUP12 ADD DUP2 ADD SWAP7 SWAP3 DUP7 ADD SWAP5 POP SWAP1 SWAP2 SWAP1 DUP11 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4D9C JUMPI DUP12 DUP9 SUB PUSH2 0x11F NOT ADD DUP4 MSTORE DUP6 MLOAD DUP1 MLOAD DUP11 DUP11 MSTORE PUSH2 0x4D2C DUP12 DUP12 ADD DUP3 PUSH2 0x4AD8 JUMP JUMPDEST SWAP1 POP DUP9 DUP3 ADD MLOAD DUP10 DUP12 ADD MSTORE DUP12 DUP3 ADD MLOAD PUSH2 0x4D5A DUP14 DUP13 ADD DUP3 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST POP DUP2 DUP8 ADD MLOAD PUSH1 0xA0 DUP12 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP8 DUP13 ADD MSTORE SWAP1 SWAP2 ADD MLOAD DUP10 DUP3 SUB PUSH1 0xE0 DUP12 ADD MSTORE SWAP1 PUSH2 0x4D88 DUP2 DUP4 PUSH2 0x4AD8 JUMP JUMPDEST SWAP10 POP POP POP SWAP5 DUP7 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4D07 JUMP JUMPDEST POP POP POP POP DUP10 ADD MLOAD DUP8 DUP5 SUB PUSH1 0x3F NOT ADD PUSH1 0xE0 DUP10 ADD MSTORE SWAP5 POP PUSH2 0x4DBD SWAP1 POP DUP3 DUP6 PUSH2 0x4B13 JUMP JUMPDEST SWAP4 POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE POP POP POP PUSH2 0x4DD3 DUP2 DUP6 PUSH2 0x4C64 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x4E4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x1C0 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x180 DUP1 DUP5 ADD MLOAD PUSH2 0x4EEA DUP3 DUP6 ADD DUP3 PUSH2 0x4E2D JUMP JUMPDEST POP POP PUSH2 0x1A0 DUP4 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP5 DUP4 ADD MSTORE PUSH2 0x385E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4F55 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x4F43 DUP6 DUP4 MLOAD PUSH2 0x4AD8 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4F27 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x160 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4FCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x4FE2 DUP7 PUSH1 0x40 DUP8 ADD PUSH2 0x4924 JUMP JUMPDEST SWAP2 POP PUSH2 0x140 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x500A DUP8 DUP3 DUP9 ADD PUSH2 0x49E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x504E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBAC DUP2 PUSH2 0x483F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x506B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBAC DUP2 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x50B7 JUMPI PUSH2 0x50B7 PUSH2 0x508F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x50CF JUMPI PUSH2 0x50CF PUSH2 0x508F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x50FE JUMPI PUSH2 0x50FE PUSH2 0x508F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5122 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5141 JUMPI PUSH2 0x5141 PUSH2 0x508F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x516D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x517D PUSH2 0x4A07 DUP4 PUSH2 0x49C3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x519C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x4A46 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x51DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x415D DUP5 DUP3 DUP6 ADD PUSH2 0x515C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBAC DUP2 PUSH2 0x483F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE PUSH2 0x5A0 DUP3 ADD SWAP1 PUSH1 0xA0 DUP4 ADD DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x28 DUP2 LT ISZERO PUSH2 0x525C JUMPI DUP2 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x523F JUMP JUMPDEST POP POP POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x528C JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x5272 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x529B JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x100 DUP1 DUP5 MSTORE DUP2 MLOAD SWAP1 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x120 DUP6 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x52E3 JUMPI DUP3 MLOAD DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x52C7 JUMP JUMPDEST POP POP POP DUP4 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP1 MLOAD DUP3 DUP8 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE SWAP1 DUP2 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x4DD3 DUP3 DUP3 PUSH2 0x4AD8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP4 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4B99 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 SWAP2 DUP7 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x53AB DUP2 DUP8 ADD DUP4 PUSH2 0x4AD8 JUMP JUMPDEST SWAP11 DUP8 ADD SWAP11 SWAP6 POP POP POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5357 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH2 0x53EF DUP3 DUP8 ADD DUP3 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP8 ADD MSTORE DUP3 DUP2 MLOAD DUP1 DUP6 MSTORE PUSH1 0xE0 DUP9 ADD SWAP2 POP PUSH1 0xE0 DUP2 PUSH1 0x5 SHL DUP10 ADD ADD SWAP5 POP DUP4 DUP4 ADD SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5449 JUMPI PUSH1 0xDF NOT DUP10 DUP8 SUB ADD DUP4 MSTORE PUSH2 0x5437 DUP7 DUP6 MLOAD PUSH2 0x52A6 JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x541B JUMP JUMPDEST POP POP POP POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x4DD3 DUP3 DUP3 PUSH2 0x5339 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5478 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x53BF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x548A DUP2 DUP7 PUSH2 0x52A6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x549E DUP2 DUP6 PUSH2 0x5339 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x54DC JUMPI PUSH2 0x54DC PUSH2 0x4854 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x551E PUSH2 0x486A JUMP JUMPDEST SWAP1 POP DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5543 DUP6 DUP4 DUP7 ADD PUSH2 0x515C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x555C DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x54A8 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5596 DUP5 DUP3 DUP6 ADD PUSH2 0x515C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x55C3 PUSH2 0x4A07 DUP4 PUSH2 0x49C3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x55E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x4A46 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5606 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP1 DUP9 ADD SWAP1 PUSH1 0xC0 DUP3 DUP12 SUB PUSH1 0x1F NOT ADD DUP2 SGT ISZERO PUSH2 0x5620 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5628 PUSH2 0x486A JUMP JUMPDEST DUP8 DUP5 ADD MLOAD DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD DUP10 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 POP DUP2 DUP7 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP1 DUP7 ADD MLOAD DUP3 DUP5 ADD MSTORE DUP4 DUP7 ADD MLOAD SWAP4 POP DUP5 DUP5 GT ISZERO PUSH2 0x566F JUMPI PUSH1 0x0 SWAP2 POP DUP2 DUP3 REVERT JUMPDEST PUSH2 0x567D DUP15 DUP12 DUP7 DUP10 ADD ADD PUSH2 0x515C JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE POP DUP7 MSTORE POP POP POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x55E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x56A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x56BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x56D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56D8 PUSH2 0x4892 JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH2 0x56E8 DUP8 DUP6 DUP6 ADD PUSH2 0x54A8 JUMP JUMPDEST DUP5 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x56FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x570F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x571D PUSH2 0x4A07 DUP3 PUSH2 0x49C3 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP7 ADD SWAP1 DUP7 DUP2 ADD SWAP1 DUP11 DUP4 GT ISZERO PUSH2 0x573C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5774 JUMPI DUP1 MLOAD DUP8 DUP2 GT ISZERO PUSH2 0x5758 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5766 DUP14 DUP12 DUP4 DUP10 ADD ADD PUSH2 0x5503 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0x5740 JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MSTORE POP POP POP PUSH1 0xA0 DUP4 ADD MLOAD SWAP4 POP DUP2 DUP5 GT ISZERO PUSH2 0x5791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x579D DUP8 DUP6 DUP6 ADD PUSH2 0x55A2 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x57BF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x53BF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4DD3 DUP2 DUP6 PUSH2 0x53BF JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5478 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4C64 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x57F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x580D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x581E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x582C PUSH2 0x4A07 DUP3 PUSH2 0x49C3 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x584B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x588E JUMPI PUSH1 0x40 DUP5 DUP10 SUB SLT ISZERO PUSH2 0x5869 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5871 PUSH2 0x48B4 JUMP JUMPDEST DUP5 MLOAD DUP2 MSTORE DUP6 DUP6 ADD MLOAD DUP7 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x5850 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x58AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5339 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4DD3 DUP2 DUP6 PUSH2 0x5339 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x58E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x415D DUP5 DUP3 DUP6 ADD PUSH2 0x55A2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x592B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH2 0x180 DUP4 ADD SWAP2 PUSH2 0x5968 SWAP1 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x597B PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x4E2D JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x5990 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x59B5 PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x59D0 PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x59EB PUSH1 0xE0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH2 0x140 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH2 0x160 DUP1 DUP6 ADD MLOAD SWAP2 DUP3 AND DUP2 DUP6 ADD MSTORE SWAP1 PUSH2 0x385E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5A46 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5339 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x415D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x5339 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5A9B PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x5339 JUMP JUMPDEST DUP7 PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE DUP6 MLOAD DUP2 MSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x5AFC PUSH1 0xE0 DUP4 ADD DUP3 PUSH2 0x4AD8 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5B11 DUP2 DUP7 PUSH2 0x5A55 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5B25 DUP2 DUP6 PUSH2 0x5339 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5B46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5B5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B68 DUP7 DUP3 DUP8 ADD PUSH2 0x55A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH2 0x5B7F DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x54A8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBAC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5339 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH2 0x5BBF DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x54A8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5BDB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x52A6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5C15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x415D DUP5 DUP3 DUP6 ADD PUSH2 0x5503 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5A46 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4C64 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5C47 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x52A6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5C59 DUP2 DUP8 PUSH2 0x5339 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x588E DUP2 DUP6 PUSH2 0x5339 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5C86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5CA9 DUP7 DUP4 DUP8 ADD PUSH2 0x5503 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5CBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CCC DUP6 DUP3 DUP7 ADD PUSH2 0x55A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x5CE5 JUMPI PUSH2 0x5CE5 PUSH2 0x508F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5D18 PUSH1 0x40 DUP5 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0xA8 SHR PUSH1 0xFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x40 DUP3 SWAP1 SHR DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x5D68 PUSH1 0xE0 DUP6 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP3 SWAP1 SHR PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP3 AND AND PUSH2 0x120 DUP7 ADD MSTORE SWAP2 POP PUSH2 0x5DA7 PUSH2 0x140 DUP6 ADD DUP3 DUP5 PUSH1 0x40 SHR AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x5DC2 PUSH2 0x160 DUP6 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 ADD PUSH2 0x6DA DUP3 DUP5 PUSH2 0x5CED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP1 DUP4 ADD PUSH2 0x5DE9 DUP5 DUP8 PUSH2 0x5CED JUMP JUMPDEST PUSH2 0x180 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD SWAP1 DUP2 SWAP1 MSTORE PUSH2 0x1C0 DUP4 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4F55 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5E07 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN EXP PUSH6 0xD0E2D793A1E6 ISZERO SWAP15 PUSH21 0x8A9ABA561DBA27D9DA6042B2A6D4F4BDD3D90F8764 PUSH20 0x6F6C634300080B00330000000000000000000000 ", "sha1": "afee29c64ccbc12f65b80ae1241a2aaa77c2e817", "source": "// SPDX-License-Identifier: MIT\n// Beef MarketPlace Contracts v0.0.0 hello@mcdu.com\n\npragma solidity ^0.8.0;\n\nimport \"../Market.sol\";\nimport \"./SearchLib.sol\";\n\nbytes32 constant MARKETSEARCH = keccak256(\"MarketSearch\");\n\ncontract MarketSearch is Market, MarketPathReader {\n    using Array for address[];\n    using Array for uint64[];\n    using Array for uint256[];\n    using Array for bytes32[];\n    using MarketLib for address[];\n    using MarketLib for SolutionSetDesc;\n    using MarketLib for SolutionSet;\n    using MarketLib for Remainer[];\n    using MarketLib for Solution[];\n\n    function id() public view virtual override (Market) returns (bytes32) {return MARKETSEARCH;}\n\n    constructor(Repository rep_) Market(rep_) {}\n\n    uint256 constant MAXRECURSECALL = 20;\n\n    struct SearchArgTarget {\n        bytes32 currency;\n        uint256 mingranularity;\n        uint256 qty;\n        bool qtyismin;\n        bool qtyismax;\n        uint256 maxcount;\n        uint256[] delivery;\n    }\n    struct SearchArg {\n        uint256 maxquote;\n        uint256 maxavgquote;\n        uint256 maxtotal;\n        Solution[] used;\n    }\n    struct SearchPublicArgs {\n        uint256 granularity;\n        uint256 qty;\n        bool qtyismin;\n        bool qtyismax;\n        uint256 maxtotal;\n        uint256 maxquote;\n        uint256 maxavgquote;\n        uint256 maxcount;\n    }\n\n/*\n    function listPathFrom(\n        bytes32 from_\n    )\n        public\n        view\n        returns (bytes32[][] memory out_)\n    {\n        (bool _result, ) = rep.get(MARKET).staticcall(\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"d_listPathFrom(bytes32)\")),\n                address(this),\n                from_            )\n        );\n        _return(_result);\n    }\n    function d_listPathFrom(\n        bytes32 from_\n    )\n        public\n        view\n        returns (bytes32[][] memory out_)\n    {\n        return\n            _listPathFrom(from_);\n    }\n*/\n/*\n    function __fromToQty(bytes32 from_, bytes32 to_)\n        public\n        view\n        returns (uint256)\n    {\n        return __fromToQtyEx(from_, to_, new uint256[](0));\n    }\n\n    function __fromToQtyEx(\n        bytes32 from_,\n        bytes32 to_,\n        uint256[] memory delivery_\n    ) private view returns (uint256 qty_) {\n        uint256[] storage orderids = _fromtoorders[BytesAndKeccakLib.pureBytes32Bytes32(from_, to_)];\n        uint len = orderids.length;\n        for (uint256 i = 0; i < len; i++) {\n            Order.Info storage order = _orders[orderids[i]];\n            if (\n                (Order.isExpired(order) == 0 ||\n                    Order.isExpired(order) >= block.timestamp) &&\n                Delivery(rep.get(DELIVERY)).orderDeliveryCompatible(order, delivery_)\n            ) {\n                Order.InfoPublic memory _orderpub = __order(orderids[i], true);\n                if (_orderpub.qty < _orderpub.granularity) continue;\n                qty_ += _orderpub.qty - (_orderpub.qty % _orderpub.granularity);\n            }\n        }\n    }\n\n    function __fromToExist(bytes32 from_, bytes32 to_)\n        public\n        view\n        returns (bool)\n    {\n        return __fromToExistEx(from_, to_, new uint256[](0));\n    }\n*/\n/*\n    function __fromToExistEx(\n        bytes32 from_,\n        bytes32 to_,\n        uint256[] memory delivery_\n    ) private view returns (bool) {\n        uint256[] storage orderids = _fromtoorders[BytesAndKeccakLib.pureBytes32Bytes32(from_, to_)];\n\n        uint len = orderids.length;\n        for (uint256 i = 0; i < len; i++) {\n            Order.Info storage order = _orders[orderids[i]];\n            if (\n                (Order.isExpired(order) == 0 ||\n                    Order.isExpired(order) >= block.timestamp) &&\n                Delivery(rep.get(DELIVERY)).orderDeliveryCompatible(order, delivery_)\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n*/\n    function __fromToListEx(\n        bytes32 from_,\n        bytes32 to_,\n        uint256[] memory delivery_,\n        uint256 start_,\n        uint256 count_\n    ) private view returns (Solution[] memory out_) {\n        uint256 startcount = 0;\n        uint256 outcount = 0;\n        uint256[] storage orderids = _fromtoorders[BytesAndKeccakLib.pureBytes32Bytes32(from_, to_)];\n\n        uint len = orderids.length;\n        if (count_ == 0) count_ = len;\n        out_ = new Solution[](count_);\n\n        for (uint256 i = 0; i < len; i++) {\n            if (outcount >= count_) break;\n            Order.Info storage order = _orders[orderids[i]];\n           if (\n                (Order.isExpired(order) == 0 ||\n                    Order.isExpired(order) >= block.timestamp) &&\n                Delivery(rep.get(DELIVERY)).orderDeliveryCompatible(order, delivery_)\n            ) {\n                startcount++;\n                if (startcount <= start_) continue;\n                Order.InfoPublic memory _orderpub = __order(orderids[i], true);\n                if (_orderpub.qty < _orderpub.granularity) continue;\n                out_[outcount].orderid = _orderpub.orderid;\n                out_[outcount].addr = _orderpub.to;\n                out_[outcount].granularity = _orderpub.granularity;\n                out_[outcount].qty = _orderpub.qty;\n                out_[outcount].quote = _orderpub.quote;\n                outcount++;\n            }\n        }\n        assembly {\n            mstore(out_, outcount)\n        }\n    }\n\n    function d_search(\n        bytes32 from_,\n        bytes32 to_,\n        uint256[] calldata args_\n    )\n        public\n        view\n        returns (\n            Solution[] memory out_,\n            uint256 qty_,\n            Quote memory\n        )\n    {\n        //args_[0] = mingranularity_;\n        //args_[1] = qty_;\n        //args_[2] = qtyismin_;\n        //args_[2] = qtyismax_;\n        //args[3] = maxtotal;\n        //args_[4] = maxquote_;\n        //args_[5] = maxavgquote_;\n        //args_[6] = maxcount_;\n        uint256 deliverycount = 0;\n        uint len = args_.length-8;\n        for (; deliverycount < len; deliverycount++)\n            if (args_[8 + deliverycount] == 0) break;\n\n        uint256[] memory delivery = new uint256[](deliverycount);\n        for (uint256 i = 0; i < deliverycount; i++)\n            delivery[i] = args_[i + 8];\n\n        return\n            __search(\n                from_,\n                SearchArgTarget(\n                    to_,\n                    args_[0],\n                    args_[1],\n                    args_[2] != 0,\n                    args_[3] != 0,\n                    args_[7],\n                    delivery\n                ),\n                SearchArg(args_[5], args_[6], args_[4], new Solution[](0)),\n                false\n            );\n    }\n\n    function searchEx(\n        address from_,\n        uint256 fromid_,\n        address to_,\n        uint256 toid_,\n        SearchPublicArgs memory args_,\n        uint256[] memory delivery_\n    )\n        public\n        view\n        returns (\n            Solution[] memory,\n            uint256,\n            Quote memory\n        )\n    {\n        return\n            search(\n                rep.roCurrency(from_, fromid_),\n                rep.roCurrency(to_, toid_),\n                args_,\n                delivery_\n            );\n    }\n\n    function search(\n        bytes32 from_,\n        bytes32 to_,\n        SearchPublicArgs memory args_,\n        uint256[] memory delivery_\n    )\n        public\n        view\n        returns (\n            Solution[] memory,\n            uint256,\n            Quote memory\n        )\n    {\n        uint len = delivery_.length;\n        require(len <= 32, \"delivery array max size is 32\");\n\n        // stack to deep hack\n        uint256[40] memory args;\n        args[0] = args_.granularity;\n        args[1] = args_.qty;\n        args[2] = args_.qtyismin ? 1 : 0;\n        args[3] = args_.qtyismax ? 1 : 0;\n        args[4] = args_.maxtotal;\n        args[5] = args_.maxquote;\n        args[6] = args_.maxavgquote;\n        args[7] = args_.maxcount;\n        {\n            uint256 argptr = 8;\n            for (uint256 i = 0; i < len; i++)\n                if (delivery_[i] != 0) args[argptr++] = delivery_[i];\n        }\n        (bool _result, ) = rep.get(MARKET).staticcall(\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"d_search(bytes32,bytes32,uint256[])\")),\n                address(this),\n                from_,\n                to_,\n                uint256(32 * 3),\n                uint256(args.length),\n                args\n            )\n        );\n        _return(_result);\n    }\n\n    /**\n     * @dev we search for direct solution from_ to target_.addr\n     * from_ is the source currency , from_ directly filtered by fromToListEx\n     * target_\n     *      target_.addr                    is the searched dest currency\n     *                                          addr is directly filtered by fromToListEx\n     *      target_.mingranularity          is the minimum granularity we are searching for\n     *                                          is used by the first filter\n     *      target_.qty                     is the qty we are search, it can be overshoot is cheaper to buy more\n     *      target_.delivery                is the filter for target delivery\n     *                                          delivery is directly filtered by fromToListEx\n     * searcharg_\n     *      searcharg_.maxquote                 is used by the first filter\n     *      searcharg_.maxavgquote\n     *      searcharg_.maxcount\n     *      searcharg_.used                 memorize the used of order\n     *      searcharg_.remainer IGNORED     should be removed from target_.qty before call\n     */\n    function __search(\n        bytes32 currency_,\n        SearchArgTarget memory target_,\n        SearchArg memory searcharg_,\n        bool rawoutput_\n    )\n        private\n        view\n        returns (\n            Solution[] memory out_,\n            uint256 qty_,\n            Quote memory quote_\n        )\n    {\n        // get all orders fromTo\n        out_ = __fromToListEx(\n            currency_,\n            target_.currency,\n            target_.delivery,\n            0,\n            0\n        );\n        // filters max quote and mingranularity\n        {\n            uint len = out_.length;\n            Solution[] memory filtered = new Solution[](len);\n            uint256 count = 0;\n            for (uint256 i; i < len; i++) {\n                //testing maxquote\n                require(out_[i].addr == target_.currency,\"__search out_[i].addr == target_.currency\");\n                if (\n                    (searcharg_.maxquote != 0) &&\n                    (out_[i].quote > searcharg_.maxquote)\n                ) continue;\n                if (out_[i].granularity < target_.mingranularity) continue;\n                //if (out_[i].qty < out_[i].granularity) continue;\n                if (out_[i].qty < searcharg_.used.getIdQty(out_[i].orderid))\n                    continue;\n                if (\n                    (out_[i].qty - searcharg_.used.getIdQty(out_[i].orderid)) <\n                    out_[i].granularity\n                ) continue;\n                if (\n                    target_.maxcount == 1 &&\n                    searcharg_.maxavgquote != 0 &&\n                    out_[i].quote > searcharg_.maxavgquote\n                ) continue;\n\n                filtered[count] = out_[i];\n                count++;\n            }\n            assembly {\n                mstore(filtered, count)\n            }\n            out_ = filtered;\n        }\n\n        /*out_ = out_.orderGranularity();\n        if (target_.qty != 0 && target_.qtyismin && (!target_.qtyismax))\n        {\n            target_.qty = MarketSearchLib.recurseSearchBestQty(\n                out_,\n                0,\n                target_,\n                searcharg_,\n                0\n            );\n        }*/\n        //return (out_, target_.qty, quote_);\n        (out_, qty_, quote_) = MarketSearchLib.recurseSearch(\n            out_,\n            0,\n            target_,\n            searcharg_,\n            new Solution[](0)\n        );\n        if (!rawoutput_) {\n            // aplying searcharg_.maxcount\n            out_ = out_.order();\n            if (target_.maxcount != 0 && out_.length > target_.maxcount) {\n                uint256 count = target_.maxcount;\n                assembly {\n                    mstore(out_, count)\n                }\n                (qty_, quote_) = out_.getQtyQuote();\n            }\n        }\n    }\n\n    function d_searchC(\n        bytes32 fromcurrency_,\n        bytes32 tocurrency_,\n        uint256[] calldata args_\n    ) public view returns (SolutionSet memory out_,Remainer[] memory remainerout_) {\n        //args_[0] = mingranularity_;\n        //args_[1] = qty_;\n        //args_[2] = qtyismin_;\n        //args_[2] = qtyismax_;\n        //args_[3] = maxtotal;\n        //args_[4] = maxquote_;\n        //args_[5] = maxavgquote_;\n        //args_[6] = maxcount_;\n        uint256 deliverycount = 0;\n        uint len = args_.length;\n        for (; deliverycount < len - 8; deliverycount++)\n            if (args_[8 + deliverycount] == 0) break;\n\n        uint256[] memory delivery = new uint256[](deliverycount);\n        for (uint256 i = 0; i < deliverycount; i++)\n            delivery[i] = args_[i + 8];\n\n        return\n            __searchC(\n                fromcurrency_,\n                MarketSearch.SearchArgTarget(\n                    tocurrency_,\n                    args_[0],\n                    args_[1],\n                    args_[2] != 0,\n                    args_[3] != 0,\n                    args_[7],\n                    delivery\n                ),\n                MarketSearch.SearchArg(\n                    args_[5],\n                    args_[6],\n                    args_[4],\n                    new Solution[](0)\n                ),\n                new Remainer[](0)\n            );\n    }\n\n    function searchCEx(\n        address from_,\n        uint256 fromid_,\n        address to_,\n        uint256 toid_,\n        SearchPublicArgs memory args_,\n        uint256[] memory delivery_\n    )\n        public\n        view\n        returns (\n            SolutionSet memory,Remainer[] memory\n        )\n    {\n        return\n            searchC(\n                rep.roCurrency(from_, fromid_),\n                rep.roCurrency(to_, toid_),\n                args_,\n                delivery_\n            );\n    }\n\n    function searchC(\n        bytes32 fromcurrency_,\n        bytes32 tocurrency_,\n        SearchPublicArgs memory args_,\n        uint256[] memory delivery_\n    )\n        public\n        view\n        returns (\n            SolutionSet memory,Remainer[] memory\n        )\n    {\n        uint len = delivery_.length;\n        require(len <= 32, \"delivery array max size is 32\");\n\n        // stack to deep hack\n        uint256[40] memory args;\n        args[0] = args_.granularity;\n        args[1] = args_.qty;\n        args[2] = args_.qtyismin ? 1 : 0;\n        args[3] = args_.qtyismax ? 1 : 0;\n        args[4] = args_.maxtotal;\n        args[5] = args_.maxquote;\n        args[6] = args_.maxavgquote;\n        args[7] = args_.maxcount;\n        {\n            uint256 argptr = 8;\n            for (uint256 i = 0; i < len; i++)\n                if (delivery_[i] != 0) args[argptr++] = delivery_[i];\n        }\n        (bool _result, ) = rep.get(MARKET).staticcall(\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"d_searchC(bytes32,bytes32,uint256[])\")),\n                address(this),\n                fromcurrency_,\n                tocurrency_,\n                uint256(32 * 3),\n                uint256(args.length),\n                args\n            )\n        );\n        _return(_result);\n    }\n\n    function __searchCFollowPath(\n        bytes32[] memory path_,\n        MarketSearch.SearchArgTarget memory target_,\n        MarketSearch.SearchArg memory searcharg_,\n        Remainer[] memory remainer_\n    ) private view returns (SolutionSet memory out_) {\n        //uint len = path_.length;\n        require(path_.length >= 2, \"__searchCFollowPath path_.length>=2\");\n        require(path_[path_.length - 1]==target_.currency, \"__searchCFollowPath path_[path_.length - 1]==target_.currency\");\n\n        Solution[] memory solutions;\n        SolutionSetDesc memory desc;\n            \n        if (path_.length==2)\n        {\n            // no swap ->direct offer\n            (solutions, desc.qty, desc.quote) = __search(\n                path_[path_.length - 2],\n                target_,\n                searcharg_,\n                false\n            );\n            desc.count = solutions.length;\n            desc = desc.descCreateFromTo(\n                path_[path_.length - 2],\n                target_.currency\n            );\n        }\n        else\n        {\n            // get total swap qty\n            uint256 total = searcharg_.maxtotal; //+remainer_.get(path_[0]);\n            for (uint256 i = 1; i < path_.length - 1; i++) {\n                uint256 swapqty;\n                //Quote memory swapquote;\n                (, swapqty, ) = __search(\n                    path_[i - 1],\n                    MarketSearch.SearchArgTarget(\n                        path_[i],\n                        0,\n                        0,\n                        false,\n                        false,\n                        0,\n                        new uint256[](0) //TODO only virtual\n                    ),\n                    MarketSearch.SearchArg(0, 0, total, searcharg_.used),\n                    true\n                );\n                if (swapqty == 0) return out_;\n                total = swapqty +remainer_.get(path_[i]);\n            }\n\n            //get target \n            // searcharg.maxquote ignored\n            // searcharg.maxavgquote ignored\n            {\n                (solutions, desc.qty, desc.quote) = __search(\n                    path_[path_.length - 2],\n                    target_,\n                    MarketSearch.SearchArg(0, 0, total, searcharg_.used),\n                    false\n                );\n            }\n            if (desc.qty == 0) return out_;\n\n            //creating set\n            {\n                desc.count = solutions.length;\n                desc = desc.descCreateFromTo(\n                    path_[path_.length - 2],\n                    target_.currency\n                );\n            }\n            // treating swaps\n            total = (desc.qty*desc.quote.quoteavg) / 10**18; \n            for (uint256 i = path_.length - 2; i >0 ; i--) \n            {\n                Solution[] memory swapsolutions;\n                SolutionSetDesc memory swapdesc;\n                {\n                    MarketSearch.SearchArgTarget memory target;\n                    MarketSearch.SearchArg memory search;\n                    {\n                        //target = MarketSearch.SearchArgTarget(\n                        //    path_[i],\n                        //    0,\n                        //    total-remainer_.get(path_[i - 1]),\n                        //    true,\n                        //    false,\n                        //    0,\n                        //    new uint256[](0) //TODO only virtual\n                        //);\n                        //require(total>0,\"total>0\");\n                        target.currency = path_[i];\n                        target.qty = total - remainer_.get(path_[i]);\n                        //if (i>1)\n                        //    target.qty -= remainer_.get(path_[i - 1]);\n                        target.qtyismin = true;\n                        //search = MarketSearch.SearchArg(0, 0, 0, searcharg_.used);\n                        search.used = searcharg_.used;\n                    }\n                        \n                    (swapsolutions, swapdesc.qty, swapdesc.quote) = __search(\n                        path_[i - 1],\n                        target,\n                        search,\n                        false\n                    );\n                }\n                if (swapdesc.qty == 0) return out_;\n                total = (swapdesc.qty*swapdesc.quote.quoteavg) / 10**18; \n\n                (desc, solutions) = desc.descAddOffset(solutions,path_[i - 1],swapsolutions);\n                desc.quote.quotemin = (desc.quote.quotemin*swapdesc.quote.quotemin)/10**18;\n                desc.quote.quotemax = (desc.quote.quotemax*swapdesc.quote.quotemax)/10**18;\n                desc.quote.quoteavg = (desc.quote.quoteavg*((swapdesc.qty*swapdesc.quote.quoteavg)/desc.qty))/10**18;\n            }\n\n            //resulting out\n        }\n        out_ = out_.add(desc, solutions);\n    }\n\n    function __searchC(\n        bytes32 from_,\n        MarketSearch.SearchArgTarget memory target_,\n        MarketSearch.SearchArg memory searcharg_,\n        Remainer[] memory remainer_\n    ) private view returns (SolutionSet memory out_,Remainer[] memory remainerout_) {\n        remainerout_ = remainer_;\n        SolutionSet memory solpath;\n        {\n            bytes32[][] memory paths = _listPath(from_, target_.currency);\n            uint len = paths.length;\n            for (uint256 i; i < len; i++) {\n                SolutionSetDesc memory desc;\n                (, desc.qty, desc.quote) = __search(\n                    paths[i][paths[i].length - 2],\n                    target_,\n                    MarketSearch.SearchArg(0, 0, 0, searcharg_.used),\n                    false\n                );\n                if (desc.qty == 0) continue;\n                desc.path = paths[i];\n                solpath = solpath.add(desc, new Solution[](0));\n            }\n        }\n        uint pathlen = solpath.descs.length;\n        if (pathlen==0)\n            return (out_,remainerout_);\n        //return (solpath,remainerout_);\n\n        SearchArgTarget memory target;\n        {\n            target.currency = target_.currency;\n            target.mingranularity = target_.mingranularity;\n            target.qty = target_.qty;\n            target.qtyismin = target_.qtyismin;\n            target.qtyismax = target_.qtyismax;\n            target.maxcount = target_.maxcount; \n            target.delivery = target_.delivery;\n        }\n        SearchArg memory searcharg;\n        {\n            searcharg.maxquote = searcharg_.maxquote;\n            searcharg.maxavgquote = searcharg_.maxavgquote;\n            searcharg.maxtotal = searcharg_.maxtotal;\n            searcharg.used = searcharg_.used;\n        }\n        SolutionSet[] memory pathsolutions = new SolutionSet[](pathlen);\n\n        uint maxcount;\n        while (true)\n        {\n            searcharg.maxquote = searcharg_.maxquote;\n            target.maxcount = 1;\n            for (uint i; i < pathlen; i++) {\n                pathsolutions[i] = __searchCFollowPath(\n                    solpath.descs[i].path,\n                    target,\n                    searcharg,\n                    remainerout_\n                );\n                require(pathsolutions[i].descs.length<=1,\"PARANOIA __searchCFollowPath should return max 1 desc\");\n            }\n\n            uint quotebest=type(uint).max;\n            {\n                uint256 quotemin;\n                uint256 quotemax;\n\n\n                for (uint i; i < pathlen; i++) {\n                    if (pathsolutions[i].qty==0)\n                        continue;\n                    \n                    if (quotebest==type(uint).max || quotemin>pathsolutions[i].quote.quotemin)\n                    {\n                        if (quotebest!=type(uint).max && quotemin<pathsolutions[i].quote.quotemax)\n                            quotemax = quotemin;\n                        else\n                            quotemax = pathsolutions[i].quote.quotemax;\n                        quotebest = i;\n                        quotemin = pathsolutions[i].quote.quotemin;\n                    }\n                    else if (quotemax>pathsolutions[i].quote.quotemin)\n                        quotemax = pathsolutions[i].quote.quotemin;\n                }\n                if (quotebest==type(uint).max)\n                {\n                    //require(false,\"if (quotebest==type(uint).max)\");\n                    break;\n                }\n\n                searcharg.maxquote = quotemax; \n            }\n            SolutionSet memory selected;\n            //if (searcharg.maxquote>=pathsolutions[quotebest].quote.quotemax)\n            //    selected = pathsolutions[quotebest];\n            //else\n            {\n                selected = __searchCFollowPath(\n                    solpath.descs[quotebest].path,\n                    target,\n                    searcharg,\n                    remainerout_\n                );\n                require(selected.descs.length==1,\"PARANOIA __searchCFollowPath should return 1 desc\");\n            }\n            if (selected.qty ==0)\n            {\n                require(false,\"if (selected.qty ==0)\");\n                break;\n            }\n            out_ = out_.add(selected);\n            maxcount +=selected.solutions.length;\n            if (selected.descs[0].offset.length!=0)\n                maxcount -= selected.descs[0].offset[selected.descs[0].offset.length-1];\n            remainerout_ = remainerout_.update(selected.descs[0],selected.solutions);\n\n            searcharg.used = searcharg.used.add(selected.solutions);\n            searcharg.maxquote = searcharg_.maxquote;\n\n\n            if (target_.maxcount!=0)\n            {\n                if (maxcount>=target_.maxcount)\n                {\n                    require(false,\"if (maxcount>=target_.maxcount)\");\n                    break;\n                }\n                target.maxcount = target_.maxcount-maxcount;\n            }\n            if (target_.qty!=0)\n            {\n                if (selected.qty>=target_.qty)\n                {\n                    require(false,\"if (selected.qty>=target_.qty)\");\n                    break;\n                }\n                target.qty = target_.qty-selected.qty;\n            }\n            if (searcharg_.maxtotal!=0)\n            {\n                uint256 total = (out_.qty*out_.quote.quoteavg)/10**18;\n                if (total>=searcharg_.maxtotal)\n                {\n                    require(false,\"if (total>=searcharg_.maxtotal)\");\n                    break;\n                }\n                searcharg.maxtotal = searcharg_.maxtotal-total;\n            }\n            if (searcharg_.maxavgquote!=0)\n            {\n                /*if (\n                    searcharg_.maxavgquote != 0 &&\n                    in_[i].quote > searcharg_.maxavgquote\n                ) {\n                    uint256 deltaqty = ((((stack.getQty(stackcount) *\n                        searcharg_.maxavgquote) / 10**18) -\n                        stack.getTotal(stackcount)) * 10**18) /\n                        (in_[i].quote - searcharg_.maxavgquote);\n\n                    if (qty > deltaqty)\n                        qty = deltaqty - (deltaqty % in_[i].granularity);\n                }*/\n\n            }\n            //break;\n\n        }\n\n\n    }\n}\n", "sourceMap": "221:26616:16:-:0;;;684:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:4;;1021:32:32;666:10:3;1021:18:32;:32::i;:::-;-1:-1:-1;;;;;1358:10:23;;;-1:-1:-1;221:26616:16;;-1:-1:-1;221:26616:16;2668:187:32;2741:16;2760:6;;-1:-1:-1;;;;;2776:17:32;;;2760:6;2776:17;;;-1:-1:-1;;;;;;2776:17:32;;;;;2808:40;;2760:6;;;;;;;2776:17;;2760:6;;2808:40;;;2731:124;2668:187;:::o;14:310:49:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:49;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:49:o;:::-;221:26616:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/Market/Reader/Search.sol", "deployment": {"address": "0x6DF3c13330BB77E582b7044fb0AD1450EE2a75d3", "chainid": "9997", "blockHeight": 1163}}