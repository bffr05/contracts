{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "assets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "nft",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct SPackedTokenAsset[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "nft",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "15": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "51": "contracts/agnostic/Token/PackedToken.sol",
    "65": "interfaces/IPackedToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/agnostic/Token/PackedToken.sol",
    "exportedSymbols": {
      "IERC165": [
        22386
      ],
      "IPackedToken": [
        25674
      ],
      "PackedToken": [
        21140
      ],
      "SPackedTokenAsset": [
        25632
      ]
    },
    "id": 21141,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20931,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "85:23:51"
      },
      {
        "absolutePath": "interfaces/IPackedToken.sol",
        "file": "../../../interfaces/IPackedToken.sol",
        "id": 20932,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21141,
        "sourceUnit": 25675,
        "src": "109:46:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20933,
              "name": "IPackedToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25674,
              "src": "181:12:51"
            },
            "id": 20934,
            "nodeType": "InheritanceSpecifier",
            "src": "181:12:51"
          }
        ],
        "canonicalName": "PackedToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21140,
        "linearizedBaseContracts": [
          21140,
          25674,
          22386
        ],
        "name": "PackedToken",
        "nameLocation": "166:11:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              25641
            ],
            "body": {
              "id": 20948,
              "nodeType": "Block",
              "src": "281:82:51",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 20946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20941,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20936,
                      "src": "310:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 20943,
                            "name": "IPackedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25674,
                            "src": "330:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPackedToken_$25674_$",
                              "typeString": "type(contract IPackedToken)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IPackedToken_$25674_$",
                              "typeString": "type(contract IPackedToken)"
                            }
                          ],
                          "id": 20942,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "325:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 20944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "325:18:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IPackedToken_$25674",
                          "typeString": "type(contract IPackedToken)"
                        }
                      },
                      "id": 20945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "325:30:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "310:45:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 20940,
                  "id": 20947,
                  "nodeType": "Return",
                  "src": "291:64:51"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 20949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "210:17:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20936,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "235:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 20949,
                  "src": "228:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 20935,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "227:20:51"
            },
            "returnParameters": {
              "id": 20940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20949,
                  "src": "271:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20938,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "270:6:51"
            },
            "scope": 21140,
            "src": "201:162:51",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 20955,
            "mutability": "mutable",
            "name": "_assets",
            "nameLocation": "417:7:51",
            "nodeType": "VariableDeclaration",
            "scope": 21140,
            "src": "369:55:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct SPackedTokenAsset[])"
            },
            "typeName": {
              "id": 20954,
              "keyType": {
                "id": 20950,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "369:39:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct SPackedTokenAsset[])"
              },
              "valueType": {
                "baseType": {
                  "id": 20952,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 20951,
                    "name": "SPackedTokenAsset",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25632,
                    "src": "388:17:51"
                  },
                  "referencedDeclaration": 25632,
                  "src": "388:17:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SPackedTokenAsset_$25632_storage_ptr",
                    "typeString": "struct SPackedTokenAsset"
                  }
                },
                "id": 20953,
                "nodeType": "ArrayTypeName",
                "src": "388:19:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage_ptr",
                  "typeString": "struct SPackedTokenAsset[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20959,
            "mutability": "mutable",
            "name": "_nft",
            "nameLocation": "463:4:51",
            "nodeType": "VariableDeclaration",
            "scope": 21140,
            "src": "430:37:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 20958,
              "keyType": {
                "id": 20956,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "438:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "430:24:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 20957,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "449:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20965,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "529:9:51",
            "nodeType": "VariableDeclaration",
            "scope": 21140,
            "src": "473:65:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 20964,
              "keyType": {
                "id": 20960,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "481:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "473:47:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 20963,
                "keyType": {
                  "id": 20961,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:7:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "492:27:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 20962,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "511:7:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20969,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "580:12:51",
            "nodeType": "VariableDeclaration",
            "scope": 21140,
            "src": "544:48:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 20968,
              "keyType": {
                "id": 20966,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "552:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "544:27:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 20967,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              25657
            ],
            "body": {
              "id": 20982,
              "nodeType": "Block",
              "src": "688:40:51",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 20978,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20955,
                      "src": "705:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct SPackedTokenAsset storage ref[] storage ref)"
                      }
                    },
                    "id": 20980,
                    "indexExpression": {
                      "id": 20979,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20971,
                      "src": "713:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "705:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage",
                      "typeString": "struct SPackedTokenAsset storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 20977,
                  "id": 20981,
                  "nodeType": "Return",
                  "src": "698:23:51"
                }
              ]
            },
            "functionSelector": "cf35bdd0",
            "id": 20983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assets",
            "nameLocation": "609:6:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20971,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "624:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 20983,
                  "src": "616:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "615:17:51"
            },
            "returnParameters": {
              "id": 20977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20983,
                  "src": "656:26:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SPackedTokenAsset_$25632_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SPackedTokenAsset[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20974,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 20973,
                        "name": "SPackedTokenAsset",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25632,
                        "src": "656:17:51"
                      },
                      "referencedDeclaration": 25632,
                      "src": "656:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SPackedTokenAsset_$25632_storage_ptr",
                        "typeString": "struct SPackedTokenAsset"
                      }
                    },
                    "id": 20975,
                    "nodeType": "ArrayTypeName",
                    "src": "656:19:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage_ptr",
                      "typeString": "struct SPackedTokenAsset[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:28:51"
            },
            "scope": 21140,
            "src": "600:128:51",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              25648
            ],
            "body": {
              "id": 21020,
              "nodeType": "Block",
              "src": "794:190:51",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 20990,
                      "name": "_nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20959,
                      "src": "808:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 20992,
                    "indexExpression": {
                      "id": 20991,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20985,
                      "src": "813:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "808:13:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20995,
                  "nodeType": "IfStatement",
                  "src": "804:30:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 20993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "830:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 20989,
                    "id": 20994,
                    "nodeType": "Return",
                    "src": "823:11:51"
                  }
                },
                {
                  "body": {
                    "condition": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 21008,
                            "name": "_assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20955,
                            "src": "903:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct SPackedTokenAsset storage ref[] storage ref)"
                            }
                          },
                          "id": 21010,
                          "indexExpression": {
                            "id": 21009,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20985,
                            "src": "911:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "903:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage",
                            "typeString": "struct SPackedTokenAsset storage ref[] storage ref"
                          }
                        },
                        "id": 21012,
                        "indexExpression": {
                          "id": 21011,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20997,
                          "src": "920:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "903:19:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SPackedTokenAsset_$25632_storage",
                          "typeString": "struct SPackedTokenAsset storage ref"
                        }
                      },
                      "id": 21013,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25629,
                      "src": "903:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 21016,
                    "nodeType": "IfStatement",
                    "src": "899:56:51",
                    "trueBody": {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 21014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 20989,
                      "id": 21015,
                      "nodeType": "Return",
                      "src": "944:11:51"
                    }
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20999,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20997,
                      "src": "856:1:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 21000,
                          "name": "_assets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20955,
                          "src": "858:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct SPackedTokenAsset storage ref[] storage ref)"
                          }
                        },
                        "id": 21002,
                        "indexExpression": {
                          "id": 21001,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20985,
                          "src": "866:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "858:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SPackedTokenAsset_$25632_storage_$dyn_storage",
                          "typeString": "struct SPackedTokenAsset storage ref[] storage ref"
                        }
                      },
                      "id": 21003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "858:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "856:25:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21017,
                  "initializationExpression": {
                    "assignments": [
                      20997
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 20997,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "854:1:51",
                        "nodeType": "VariableDeclaration",
                        "scope": 21017,
                        "src": "849:6:51",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 20996,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "849:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 20998,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "849:6:51"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 21006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "882:3:51",
                      "subExpression": {
                        "id": 21005,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20997,
                        "src": "882:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21007,
                    "nodeType": "ExpressionStatement",
                    "src": "882:3:51"
                  },
                  "nodeType": "ForStatement",
                  "src": "844:111:51"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 21018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "972:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 20989,
                  "id": 21019,
                  "nodeType": "Return",
                  "src": "965:12:51"
                }
              ]
            },
            "functionSelector": "9d0214cb",
            "id": 21021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nft",
            "nameLocation": "742:3:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20985,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "754:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21021,
                  "src": "746:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "745:17:51"
            },
            "returnParameters": {
              "id": 20989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21021,
                  "src": "784:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:6:51"
            },
            "scope": 21140,
            "src": "733:251:51",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21100,
              "nodeType": "Block",
              "src": "1132:568:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21033,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21023,
                          "src": "1150:6:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1168:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1160:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1160:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1160:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1150:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061636b3a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 21039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:38:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45857b74f8c737130a78c138962a7b4c9bfeff9a3ad0c3fc58123f9144f405df",
                          "typeString": "literal_string \"Pack: transfer from the zero address\""
                        },
                        "value": "Pack: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45857b74f8c737130a78c138962a7b4c9bfeff9a3ad0c3fc58123f9144f405df",
                          "typeString": "literal_string \"Pack: transfer from the zero address\""
                        }
                      ],
                      "id": 21032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1142:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:69:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21041,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:69:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21043,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21025,
                          "src": "1229:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1250:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1242:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21044,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1242:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1242:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1229:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061636b3a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 21049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1254:36:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92ae09f462ca6b682a6861b3e71557ebf8c743bb7bbbd429804fb38bf680c6e2",
                          "typeString": "literal_string \"Pack: transfer to the zero address\""
                        },
                        "value": "Pack: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92ae09f462ca6b682a6861b3e71557ebf8c743bb7bbbd429804fb38bf680c6e2",
                          "typeString": "literal_string \"Pack: transfer to the zero address\""
                        }
                      ],
                      "id": 21042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1221:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:70:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21051,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:70:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 21062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1309:13:51",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 21054,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21027,
                                "src": "1314:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 21053,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21021,
                              "src": "1310:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 21055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1310:12:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21057,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21029,
                            "src": "1326:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 21058,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20969,
                              "src": "1334:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 21060,
                            "indexExpression": {
                              "id": 21059,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21027,
                              "src": "1347:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1334:21:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1326:29:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1309:46:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061636b3a20746f6b656e206973206e667420616e6420616d6f756e742069736e7420746f74616c537570706c79",
                        "id": 21063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1356:48:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3924cba3354eb13c68efaf85de78d861030e33e661f526257794bae1e73d4c29",
                          "typeString": "literal_string \"Pack: token is nft and amount isnt totalSupply\""
                        },
                        "value": "Pack: token is nft and amount isnt totalSupply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3924cba3354eb13c68efaf85de78d861030e33e661f526257794bae1e73d4c29",
                          "typeString": "literal_string \"Pack: token is nft and amount isnt totalSupply\""
                        }
                      ],
                      "id": 21052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1301:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:104:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21065,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:104:51"
                },
                {
                  "assignments": [
                    21067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21067,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "1424:13:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 21100,
                      "src": "1416:21:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21066,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1416:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21073,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 21068,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20965,
                        "src": "1440:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 21070,
                      "indexExpression": {
                        "id": 21069,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21027,
                        "src": "1450:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1440:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 21072,
                    "indexExpression": {
                      "id": 21071,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21023,
                      "src": "1459:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1440:26:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1416:50:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21075,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21067,
                          "src": "1484:13:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 21076,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21029,
                          "src": "1501:6:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1484:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061636b3a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 21078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1509:39:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f114828d3d908929002b5708f356b28104aaaacbae1661e4f970f90d19eca4f5",
                          "typeString": "literal_string \"Pack: transfer amount exceeds balance\""
                        },
                        "value": "Pack: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f114828d3d908929002b5708f356b28104aaaacbae1661e4f970f90d19eca4f5",
                          "typeString": "literal_string \"Pack: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 21074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1476:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:73:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21080,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:73:51"
                },
                {
                  "id": 21091,
                  "nodeType": "UncheckedBlock",
                  "src": "1559:86:51",
                  "statements": [
                    {
                      "expression": {
                        "id": 21089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 21081,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20965,
                              "src": "1583:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 21084,
                            "indexExpression": {
                              "id": 21082,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21027,
                              "src": "1593:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1583:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 21085,
                          "indexExpression": {
                            "id": 21083,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21023,
                            "src": "1602:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1583:26:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21086,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21067,
                            "src": "1612:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 21087,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21029,
                            "src": "1628:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1612:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1583:51:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 21090,
                      "nodeType": "ExpressionStatement",
                      "src": "1583:51:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 21098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 21092,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20965,
                          "src": "1654:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 21095,
                        "indexExpression": {
                          "id": 21093,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21027,
                          "src": "1664:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1654:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21096,
                      "indexExpression": {
                        "id": 21094,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21025,
                        "src": "1673:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1654:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 21097,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21029,
                      "src": "1687:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1654:39:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21099,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:39:51"
                }
              ]
            },
            "id": 21101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "999:9:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21023,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1026:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21101,
                  "src": "1018:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21025,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1050:9:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21101,
                  "src": "1042:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21027,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1077:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21101,
                  "src": "1069:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21029,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1102:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21101,
                  "src": "1094:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1008:106:51"
            },
            "returnParameters": {
              "id": 21031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:51"
            },
            "scope": 21140,
            "src": "990:710:51",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              25664
            ],
            "body": {
              "id": 21112,
              "nodeType": "Block",
              "src": "1779:46:51",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 21108,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20969,
                      "src": "1796:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 21110,
                    "indexExpression": {
                      "id": 21109,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21103,
                      "src": "1809:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1796:21:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21107,
                  "id": 21111,
                  "nodeType": "Return",
                  "src": "1789:28:51"
                }
              ]
            },
            "functionSelector": "bd85b039",
            "id": 21113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1714:11:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21103,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1734:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21113,
                  "src": "1726:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1725:17:51"
            },
            "returnParameters": {
              "id": 21107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21113,
                  "src": "1766:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:9:51"
            },
            "scope": 21140,
            "src": "1705:120:51",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              25673
            ],
            "body": {
              "id": 21138,
              "nodeType": "Block",
              "src": "1918:135:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21123,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21115,
                          "src": "1936:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1955:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1947:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1947:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1947:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1936:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061636b3a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 21129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1959:42:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00a695b8e38eb56fb5e6c3a74b238d1d40951b7f87f6c36acbf4940b04990590",
                          "typeString": "literal_string \"Pack: balance query for the zero address\""
                        },
                        "value": "Pack: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00a695b8e38eb56fb5e6c3a74b238d1d40951b7f87f6c36acbf4940b04990590",
                          "typeString": "literal_string \"Pack: balance query for the zero address\""
                        }
                      ],
                      "id": 21122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1928:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:74:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21131,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:74:51"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 21132,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20965,
                        "src": "2019:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 21134,
                      "indexExpression": {
                        "id": 21133,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21117,
                        "src": "2029:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2019:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 21136,
                    "indexExpression": {
                      "id": 21135,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21115,
                      "src": "2038:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2019:27:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21121,
                  "id": 21137,
                  "nodeType": "Return",
                  "src": "2012:34:51"
                }
              ]
            },
            "functionSelector": "00fdd58e",
            "id": 21139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1839:9:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21115,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1857:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21139,
                  "src": "1849:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21117,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1873:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 21139,
                  "src": "1865:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1848:33:51"
            },
            "returnParameters": {
              "id": 21121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21139,
                  "src": "1905:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:9:51"
            },
            "scope": 21140,
            "src": "1830:223:51",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 21141,
        "src": "157:1899:51",
        "usedErrors": []
      }
    ],
    "src": "85:1972:51"
  },
  "bytecode": "608060405234801561001057600080fd5b50610432806100206000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c8062fdd58e1461005b57806301ffc9a7146100815780639d0214cb146100b5578063bd85b039146100c8578063cf35bdd0146100e8575b600080fd5b61006e6100693660046102ce565b610108565b6040519081526020015b60405180910390f35b6100a561008f366004610306565b6001600160e01b03191663eeb0050b60e01b1490565b6040519015158152602001610078565b6100a56100c3366004610337565b61019d565b61006e6100d6366004610337565b60009081526003602052604090205490565b6100fb6100f6366004610337565b610235565b6040516100789190610350565b60006001600160a01b0383166101755760405162461bcd60e51b815260206004820152602860248201527f5061636b3a2062616c616e636520717565727920666f7220746865207a65726f604482015267206164647265737360c01b606482015260840160405180910390fd5b5060009081526002602090815260408083206001600160a01b03949094168352929052205490565b60008181526001602052604081205460ff16156101bc57506001919050565b60005b60008381526020819052604090205481101561022c5760008381526020819052604090208054829081106101f5576101f56103bf565b600091825260209091206002600490920201015460ff161561021a5750600192915050565b80610224816103d5565b9150506101bf565b50600092915050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156102c3576000848152602090819020604080516080810182526004860290920180546001600160a01b0316835260018082015484860152600282015460ff161515928401929092526003015460608301529083529092019101610261565b505050509050919050565b600080604083850312156102e157600080fd5b82356001600160a01b03811681146102f857600080fd5b946020939093013593505050565b60006020828403121561031857600080fd5b81356001600160e01b03198116811461033057600080fd5b9392505050565b60006020828403121561034957600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b828110156103b257815180516001600160a01b03168552868101518786015285810151151586860152606090810151908501526080909301929085019060010161036d565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016103f557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220bf81465b46bb6dae67c98b3b0bdc14497490206102e9f44b65c436a3ee188b0064736f6c634300080d0033",
  "bytecodeSha1": "da98a06bec22e3ddf1fa425fd4869f28d82bb14e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "PackedToken",
  "coverageMap": {
    "branches": {
      "15": {},
      "51": {
        "PackedToken.balanceOf": {
          "9": [
            1936,
            1957,
            true
          ]
        },
        "PackedToken.nft": {
          "10": [
            808,
            821,
            false
          ],
          "11": [
            903,
            926,
            false
          ]
        }
      },
      "65": {}
    },
    "statements": {
      "15": {},
      "51": {
        "PackedToken.assets": {
          "8": [
            698,
            721
          ]
        },
        "PackedToken.balanceOf": {
          "2": [
            1928,
            2002
          ],
          "3": [
            2012,
            2046
          ]
        },
        "PackedToken.nft": {
          "4": [
            823,
            834
          ],
          "5": [
            944,
            955
          ],
          "6": [
            882,
            885
          ],
          "7": [
            965,
            977
          ]
        },
        "PackedToken.supportsInterface": {
          "0": [
            291,
            355
          ]
        },
        "PackedToken.totalSupply": {
          "1": [
            1789,
            1817
          ]
        }
      },
      "65": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "IPackedToken"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100565760003560e01c8062fdd58e1461005b57806301ffc9a7146100815780639d0214cb146100b5578063bd85b039146100c8578063cf35bdd0146100e8575b600080fd5b61006e6100693660046102ce565b610108565b6040519081526020015b60405180910390f35b6100a561008f366004610306565b6001600160e01b03191663eeb0050b60e01b1490565b6040519015158152602001610078565b6100a56100c3366004610337565b61019d565b61006e6100d6366004610337565b60009081526003602052604090205490565b6100fb6100f6366004610337565b610235565b6040516100789190610350565b60006001600160a01b0383166101755760405162461bcd60e51b815260206004820152602860248201527f5061636b3a2062616c616e636520717565727920666f7220746865207a65726f604482015267206164647265737360c01b606482015260840160405180910390fd5b5060009081526002602090815260408083206001600160a01b03949094168352929052205490565b60008181526001602052604081205460ff16156101bc57506001919050565b60005b60008381526020819052604090205481101561022c5760008381526020819052604090208054829081106101f5576101f56103bf565b600091825260209091206002600490920201015460ff161561021a5750600192915050565b80610224816103d5565b9150506101bf565b50600092915050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156102c3576000848152602090819020604080516080810182526004860290920180546001600160a01b0316835260018082015484860152600282015460ff161515928401929092526003015460608301529083529092019101610261565b505050509050919050565b600080604083850312156102e157600080fd5b82356001600160a01b03811681146102f857600080fd5b946020939093013593505050565b60006020828403121561031857600080fd5b81356001600160e01b03198116811461033057600080fd5b9392505050565b60006020828403121561034957600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b828110156103b257815180516001600160a01b03168552868101518786015285810151151586860152606090810151908501526080909301929085019060010161036d565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016103f557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220bf81465b46bb6dae67c98b3b0bdc14497490206102e9f44b65c436a3ee188b0064736f6c634300080d0033",
  "deployedSourceMap": "157:1899:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:223;;;;;;:::i;:::-;;:::i;:::-;;;519:25:72;;;507:2;492:18;1830:223:51;;;;;;;;201:162;;;;;;:::i;:::-;-1:-1:-1;;;;;;310:45:51;-1:-1:-1;;;310:45:51;;201:162;;;;1011:14:72;;1004:22;986:41;;974:2;959:18;201:162:51;846:187:72;733:251:51;;;;;;:::i;:::-;;:::i;1705:120::-;;;;;;:::i;:::-;1766:7;1796:21;;;:12;:21;;;;;;;1705:120;600:128;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1830:223::-;1905:7;-1:-1:-1;;;;;1936:21:51;;1928:74;;;;-1:-1:-1;;;1928:74:51;;2417:2:72;1928:74:51;;;2399:21:72;2456:2;2436:18;;;2429:30;2495:34;2475:18;;;2468:62;-1:-1:-1;;;2546:18:72;;;2539:38;2594:19;;1928:74:51;;;;;;;;-1:-1:-1;2019:18:51;;;;:9;:18;;;;;;;;-1:-1:-1;;;;;2019:27:51;;;;;;;;;;;;1830:223::o;733:251::-;784:4;808:13;;;:4;:13;;;;;;;;804:30;;;-1:-1:-1;830:4:51;;733:251;-1:-1:-1;733:251:51:o;804:30::-;849:6;844:111;858:7;:16;;;;;;;;;;:23;856:25;;844:111;;;903:7;:16;;;;;;;;;;:19;;920:1;;903:19;;;;;;:::i;:::-;;;;;;;;;:23;:19;;;;;:23;;;;899:56;;;-1:-1:-1;951:4:51;;733:251;-1:-1:-1;;733:251:51:o;899:56::-;882:3;;;;:::i;:::-;;;;844:111;;;-1:-1:-1;972:5:51;;733:251;-1:-1:-1;;733:251:51:o;600:128::-;705:7;:16;;;;;;;;;;;698:23;;;;;;;;;;;;;;;;;656:26;;698:23;;705:16;;698:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;698:23:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:128;;;:::o;14:354:72:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:72;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;358:2;343:18;;;;330:32;;-1:-1:-1;;;14:354:72:o;555:286::-;613:6;666:2;654:9;645:7;641:23;637:32;634:52;;;682:1;679;672:12;634:52;708:23;;-1:-1:-1;;;;;;760:32:72;;750:43;;740:71;;807:1;804;797:12;740:71;830:5;555:286;-1:-1:-1;;;555:286:72:o;1038:180::-;1097:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:52;;;1166:1;1163;1156:12;1118:52;-1:-1:-1;1189:23:72;;1038:180;-1:-1:-1;1038:180:72:o;1223:987::-;1466:2;1518:21;;;1588:13;;1491:18;;;1610:22;;;1437:4;;1466:2;1651;;1669:18;;;;1710:15;;;1437:4;1753:431;1767:6;1764:1;1761:13;1753:431;;;1826:13;;1868:9;;-1:-1:-1;;;;;1864:35:72;1852:48;;1940:11;;;1934:18;1920:12;;;1913:40;2007:11;;;2001:18;1994:26;1987:34;1973:12;;;1966:56;2045:4;2089:11;;;2083:18;2069:12;;;2062:40;2131:4;2122:14;;;;2159:15;;;;1896:1;1782:9;1753:431;;;-1:-1:-1;2201:3:72;;1223:987;-1:-1:-1;;;;;;;1223:987:72:o;2624:127::-;2685:10;2680:3;2676:20;2673:1;2666:31;2716:4;2713:1;2706:15;2740:4;2737:1;2730:15;2756:232;2795:3;2816:17;;;2813:140;;2875:10;2870:3;2866:20;2863:1;2856:31;2910:4;2907:1;2900:15;2938:4;2935:1;2928:15;2813:140;-1:-1:-1;2980:1:72;2969:13;;2756:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "offset": [
    157,
    2056
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x9D0214CB EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xCF35BDD0 EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xEEB0050B PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xA5 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH2 0x6E PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061636B3A2062616C616E636520717565727920666F7220746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BC JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1F5 JUMPI PUSH2 0x1F5 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x224 DUP2 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BF JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x261 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD ISZERO ISZERO DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x36D JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DUP2 CHAINID JUMPDEST CHAINID 0xBB PUSH14 0xAE67C98B3B0BDC14497490206102 0xE9 DELEGATECALL 0x4B PUSH6 0xC436A3EE188B STOP PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        157,
        2056
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "5": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "CALLVALUE",
      "path": "51"
    },
    "6": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "7": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "8": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "12": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "REVERT",
      "path": "51"
    },
    "16": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "17": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "POP",
      "path": "51"
    },
    "18": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "21": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "LT",
      "path": "51"
    },
    "22": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x56"
    },
    "25": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "26": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "CALLDATALOAD",
      "path": "51"
    },
    "29": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "SHR",
      "path": "51"
    },
    "32": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "33": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH3",
      "path": "51",
      "value": "0xFDD58E"
    },
    "37": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "EQ",
      "path": "51"
    },
    "38": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x5B"
    },
    "41": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "42": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "43": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0x1FFC9A7"
    },
    "48": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "EQ",
      "path": "51"
    },
    "49": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x81"
    },
    "52": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "53": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "54": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0x9D0214CB"
    },
    "59": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "EQ",
      "path": "51"
    },
    "60": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xB5"
    },
    "63": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "64": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "65": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0xBD85B039"
    },
    "70": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "EQ",
      "path": "51"
    },
    "71": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xC8"
    },
    "74": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "75": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "76": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0xCF35BDD0"
    },
    "81": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "EQ",
      "path": "51"
    },
    "82": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xE8"
    },
    "85": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "86": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "87": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "DUP1",
      "path": "51"
    },
    "90": {
      "first_revert": true,
      "fn": null,
      "offset": [
        157,
        2056
      ],
      "op": "REVERT",
      "path": "51"
    },
    "91": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "92": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x6E"
    },
    "95": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x69"
    },
    "98": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "99": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "101": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x2CE"
    },
    "104": {
      "fn": "PackedToken.balanceOf",
      "jump": "i",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMP",
      "path": "51"
    },
    "105": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "106": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x108"
    },
    "109": {
      "fn": "PackedToken.balanceOf",
      "jump": "i",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMP",
      "path": "51"
    },
    "110": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "111": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "113": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "114": {
      "op": "SWAP1"
    },
    "115": {
      "op": "DUP2"
    },
    "116": {
      "op": "MSTORE"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "119": {
      "op": "ADD"
    },
    "120": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "121": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "123": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "124": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "DUP1",
      "path": "51"
    },
    "125": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "126": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "SUB",
      "path": "51"
    },
    "127": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "128": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "RETURN",
      "path": "51"
    },
    "129": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "130": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xA5"
    },
    "133": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x8F"
    },
    "136": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "137": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "139": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x306"
    },
    "142": {
      "fn": "PackedToken.supportsInterface",
      "jump": "i",
      "offset": [
        201,
        363
      ],
      "op": "JUMP",
      "path": "51"
    },
    "143": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "148": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "150": {
      "op": "SHL"
    },
    "151": {
      "op": "SUB"
    },
    "152": {
      "op": "NOT"
    },
    "153": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        310,
        355
      ],
      "op": "AND",
      "path": "51",
      "statement": 0
    },
    "154": {
      "op": "PUSH4",
      "value": "0xEEB0050B"
    },
    "159": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "161": {
      "op": "SHL"
    },
    "162": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        310,
        355
      ],
      "op": "EQ",
      "path": "51"
    },
    "163": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        310,
        355
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "164": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "JUMP",
      "path": "51"
    },
    "165": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "166": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "168": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "169": {
      "op": "SWAP1"
    },
    "170": {
      "op": "ISZERO"
    },
    "171": {
      "op": "ISZERO"
    },
    "172": {
      "op": "DUP2"
    },
    "173": {
      "op": "MSTORE"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "176": {
      "op": "ADD"
    },
    "177": {
      "fn": "PackedToken.supportsInterface",
      "offset": [
        201,
        363
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x78"
    },
    "180": {
      "op": "JUMP"
    },
    "181": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "182": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xA5"
    },
    "185": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xC3"
    },
    "188": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "189": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "191": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x337"
    },
    "194": {
      "fn": "PackedToken.nft",
      "jump": "i",
      "offset": [
        733,
        984
      ],
      "op": "JUMP",
      "path": "51"
    },
    "195": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "196": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x19D"
    },
    "199": {
      "fn": "PackedToken.nft",
      "jump": "i",
      "offset": [
        733,
        984
      ],
      "op": "JUMP",
      "path": "51"
    },
    "200": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "201": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x6E"
    },
    "204": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xD6"
    },
    "207": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "208": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "210": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x337"
    },
    "213": {
      "fn": "PackedToken.totalSupply",
      "jump": "i",
      "offset": [
        1705,
        1825
      ],
      "op": "JUMP",
      "path": "51"
    },
    "214": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "215": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1766,
        1773
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "217": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "SWAP1",
      "path": "51",
      "statement": 1
    },
    "218": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "DUP2",
      "path": "51"
    },
    "219": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "220": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1808
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x3"
    },
    "222": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "224": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "225": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "227": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "228": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "229": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "230": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1796,
        1817
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "231": {
      "fn": "PackedToken.totalSupply",
      "offset": [
        1705,
        1825
      ],
      "op": "JUMP",
      "path": "51"
    },
    "232": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "233": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xFB"
    },
    "236": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xF6"
    },
    "239": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "240": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "242": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x337"
    },
    "245": {
      "fn": "PackedToken.assets",
      "jump": "i",
      "offset": [
        600,
        728
      ],
      "op": "JUMP",
      "path": "51"
    },
    "246": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "247": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x235"
    },
    "250": {
      "fn": "PackedToken.assets",
      "jump": "i",
      "offset": [
        600,
        728
      ],
      "op": "JUMP",
      "path": "51"
    },
    "251": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "252": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "254": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "255": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x78"
    },
    "258": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "259": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "260": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x350"
    },
    "263": {
      "fn": "PackedToken.assets",
      "jump": "i",
      "offset": [
        600,
        728
      ],
      "op": "JUMP",
      "path": "51"
    },
    "264": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "265": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1905,
        1912
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "op": "SUB"
    },
    "275": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1936,
        1957
      ],
      "op": "DUP4",
      "path": "51",
      "statement": 2
    },
    "276": {
      "branch": 9,
      "fn": "PackedToken.balanceOf",
      "offset": [
        1936,
        1957
      ],
      "op": "AND",
      "path": "51"
    },
    "277": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x175"
    },
    "280": {
      "branch": 9,
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "281": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "283": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "DUP2",
      "path": "51"
    },
    "292": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "295": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "297": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "DUP3",
      "path": "51"
    },
    "298": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "ADD",
      "path": "51"
    },
    "299": {
      "op": "MSTORE"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "304": {
      "op": "DUP3"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "op": "MSTORE"
    },
    "307": {
      "op": "PUSH32",
      "value": "0x5061636B3A2062616C616E636520717565727920666F7220746865207A65726F"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "342": {
      "op": "DUP3"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH8",
      "value": "0x2061646472657373"
    },
    "354": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "356": {
      "op": "SHL"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "359": {
      "op": "DUP3"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "367": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "368": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "DUP1",
      "path": "51"
    },
    "369": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "370": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "SUB",
      "path": "51"
    },
    "371": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "372": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "51"
    },
    "373": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        1928,
        2002
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "374": {
      "op": "POP"
    },
    "375": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 3,
      "value": "0x0"
    },
    "377": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "378": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "DUP2",
      "path": "51"
    },
    "379": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "380": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2028
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x2"
    },
    "382": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "384": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "385": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "DUP2",
      "path": "51"
    },
    "386": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "387": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "389": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "DUP1",
      "path": "51"
    },
    "390": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "DUP4",
      "path": "51"
    },
    "391": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2037
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "SWAP5",
      "path": "51"
    },
    "401": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "402": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "SWAP5",
      "path": "51"
    },
    "403": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "AND",
      "path": "51"
    },
    "404": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "DUP4",
      "path": "51"
    },
    "405": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "406": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "407": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "408": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "409": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "410": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "411": {
      "fn": "PackedToken.balanceOf",
      "offset": [
        2019,
        2046
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "412": {
      "fn": "PackedToken.balanceOf",
      "jump": "o",
      "offset": [
        1830,
        2053
      ],
      "op": "JUMP",
      "path": "51"
    },
    "413": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "414": {
      "fn": "PackedToken.nft",
      "offset": [
        784,
        788
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "416": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "DUP2",
      "path": "51"
    },
    "417": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "DUP2",
      "path": "51"
    },
    "418": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "419": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        812
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1"
    },
    "421": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "423": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "424": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "426": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "DUP2",
      "path": "51"
    },
    "427": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "428": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "429": {
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0xFF"
    },
    "431": {
      "branch": 10,
      "fn": "PackedToken.nft",
      "offset": [
        808,
        821
      ],
      "op": "AND",
      "path": "51"
    },
    "432": {
      "fn": "PackedToken.nft",
      "offset": [
        804,
        834
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "433": {
      "fn": "PackedToken.nft",
      "offset": [
        804,
        834
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1BC"
    },
    "436": {
      "branch": 10,
      "fn": "PackedToken.nft",
      "offset": [
        804,
        834
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "437": {
      "op": "POP"
    },
    "438": {
      "fn": "PackedToken.nft",
      "offset": [
        830,
        834
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 4,
      "value": "0x1"
    },
    "440": {
      "fn": "PackedToken.nft",
      "offset": [
        830,
        834
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "441": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "fn": "PackedToken.nft",
      "jump": "o",
      "offset": [
        733,
        984
      ],
      "op": "JUMP",
      "path": "51"
    },
    "444": {
      "fn": "PackedToken.nft",
      "offset": [
        804,
        834
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "445": {
      "fn": "PackedToken.nft",
      "offset": [
        849,
        855
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "447": {
      "fn": "PackedToken.nft",
      "offset": [
        844,
        955
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "448": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        865
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "450": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "DUP4",
      "path": "51"
    },
    "451": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "DUP2",
      "path": "51"
    },
    "452": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "453": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "455": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "DUP2",
      "path": "51"
    },
    "456": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "457": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "458": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "460": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "461": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        874
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "462": {
      "fn": "PackedToken.nft",
      "offset": [
        858,
        881
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "463": {
      "fn": "PackedToken.nft",
      "offset": [
        856,
        881
      ],
      "op": "DUP2",
      "path": "51"
    },
    "464": {
      "fn": "PackedToken.nft",
      "offset": [
        856,
        881
      ],
      "op": "LT",
      "path": "51"
    },
    "465": {
      "fn": "PackedToken.nft",
      "offset": [
        844,
        955
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "466": {
      "fn": "PackedToken.nft",
      "offset": [
        844,
        955
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x22C"
    },
    "469": {
      "fn": "PackedToken.nft",
      "offset": [
        844,
        955
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "470": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        910
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "472": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "DUP4",
      "path": "51"
    },
    "473": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "DUP2",
      "path": "51"
    },
    "474": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "475": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "477": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "DUP2",
      "path": "51"
    },
    "478": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "479": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "480": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "482": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "483": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        919
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "484": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "DUP1",
      "path": "51"
    },
    "485": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "486": {
      "fn": "PackedToken.nft",
      "offset": [
        920,
        921
      ],
      "op": "DUP3",
      "path": "51"
    },
    "487": {
      "fn": "PackedToken.nft",
      "offset": [
        920,
        921
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "488": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "DUP2",
      "path": "51"
    },
    "489": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "LT",
      "path": "51"
    },
    "490": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1F5"
    },
    "493": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "494": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1F5"
    },
    "497": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x3BF"
    },
    "500": {
      "fn": "PackedToken.nft",
      "jump": "i",
      "offset": [
        903,
        922
      ],
      "op": "JUMP",
      "path": "51"
    },
    "501": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "502": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "504": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "505": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "DUP3",
      "path": "51"
    },
    "506": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "507": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "509": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "510": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "511": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "512": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        926
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x2"
    },
    "514": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "516": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "517": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "518": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "MUL",
      "path": "51"
    },
    "519": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        922
      ],
      "op": "ADD",
      "path": "51"
    },
    "520": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        926
      ],
      "op": "ADD",
      "path": "51"
    },
    "521": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        926
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "522": {
      "fn": "PackedToken.nft",
      "offset": [
        903,
        926
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0xFF"
    },
    "524": {
      "branch": 11,
      "fn": "PackedToken.nft",
      "offset": [
        903,
        926
      ],
      "op": "AND",
      "path": "51"
    },
    "525": {
      "fn": "PackedToken.nft",
      "offset": [
        899,
        955
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "526": {
      "fn": "PackedToken.nft",
      "offset": [
        899,
        955
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x21A"
    },
    "529": {
      "branch": 11,
      "fn": "PackedToken.nft",
      "offset": [
        899,
        955
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "530": {
      "op": "POP"
    },
    "531": {
      "fn": "PackedToken.nft",
      "offset": [
        951,
        955
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 5,
      "value": "0x1"
    },
    "533": {
      "fn": "PackedToken.nft",
      "offset": [
        951,
        955
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "534": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "535": {
      "op": "POP"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "fn": "PackedToken.nft",
      "jump": "o",
      "offset": [
        733,
        984
      ],
      "op": "JUMP",
      "path": "51"
    },
    "538": {
      "fn": "PackedToken.nft",
      "offset": [
        899,
        955
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "539": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "DUP1",
      "path": "51",
      "statement": 6
    },
    "540": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x224"
    },
    "543": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "DUP2",
      "path": "51"
    },
    "544": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x3D5"
    },
    "547": {
      "fn": "PackedToken.nft",
      "jump": "i",
      "offset": [
        882,
        885
      ],
      "op": "JUMP",
      "path": "51"
    },
    "548": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "549": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "550": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "POP",
      "path": "51"
    },
    "551": {
      "fn": "PackedToken.nft",
      "offset": [
        882,
        885
      ],
      "op": "POP",
      "path": "51"
    },
    "552": {
      "fn": "PackedToken.nft",
      "offset": [
        844,
        955
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1BF"
    },
    "555": {
      "fn": "PackedToken.nft",
      "offset": [
        844,
        955
      ],
      "op": "JUMP",
      "path": "51"
    },
    "556": {
      "fn": "PackedToken.nft",
      "offset": [
        844,
        955
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "fn": "PackedToken.nft",
      "offset": [
        972,
        977
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 7,
      "value": "0x0"
    },
    "560": {
      "fn": "PackedToken.nft",
      "offset": [
        972,
        977
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "561": {
      "fn": "PackedToken.nft",
      "offset": [
        733,
        984
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "562": {
      "op": "POP"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "fn": "PackedToken.nft",
      "jump": "o",
      "offset": [
        733,
        984
      ],
      "op": "JUMP",
      "path": "51"
    },
    "565": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "566": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        712
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 8,
      "value": "0x0"
    },
    "568": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "569": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "570": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "571": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "573": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "574": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "575": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "576": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "578": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "DUP1",
      "path": "51"
    },
    "579": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "DUP4",
      "path": "51"
    },
    "580": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "581": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP1",
      "path": "51"
    },
    "582": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "583": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP3",
      "path": "51"
    },
    "584": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "585": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "586": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP6",
      "path": "51"
    },
    "587": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MUL",
      "path": "51"
    },
    "588": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "589": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "590": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP6",
      "path": "51"
    },
    "591": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "592": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "593": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP4",
      "path": "51"
    },
    "594": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "595": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP1",
      "path": "51"
    },
    "596": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP4",
      "path": "51"
    },
    "597": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "598": {
      "fn": "PackedToken.assets",
      "offset": [
        656,
        682
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x60"
    },
    "600": {
      "fn": "PackedToken.assets",
      "offset": [
        656,
        682
      ],
      "op": "SWAP5",
      "path": "51"
    },
    "601": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "602": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP4",
      "path": "51"
    },
    "603": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "604": {
      "fn": "PackedToken.assets",
      "offset": [
        705,
        721
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "605": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "606": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "607": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP5",
      "path": "51"
    },
    "608": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "609": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "610": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP3",
      "path": "51"
    },
    "611": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP3",
      "path": "51"
    },
    "612": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "LT",
      "path": "51"
    },
    "613": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "614": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x2C3"
    },
    "617": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "618": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "620": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP5",
      "path": "51"
    },
    "621": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "622": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "623": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "625": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "626": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "627": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "628": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "KECCAK256",
      "path": "51"
    },
    "629": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "631": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP1",
      "path": "51"
    },
    "632": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "633": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x80"
    },
    "635": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP2",
      "path": "51"
    },
    "636": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "637": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP3",
      "path": "51"
    },
    "638": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "639": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "641": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP7",
      "path": "51"
    },
    "642": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MUL",
      "path": "51"
    },
    "643": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "644": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "645": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "646": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP1",
      "path": "51"
    },
    "647": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "op": "SUB"
    },
    "656": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "AND",
      "path": "51"
    },
    "657": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP4",
      "path": "51"
    },
    "658": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "659": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1"
    },
    "661": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP1",
      "path": "51"
    },
    "662": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP3",
      "path": "51"
    },
    "663": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "664": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "665": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP5",
      "path": "51"
    },
    "666": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP7",
      "path": "51"
    },
    "667": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "668": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "669": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x2"
    },
    "671": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP3",
      "path": "51"
    },
    "672": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "673": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "674": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0xFF"
    },
    "676": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "AND",
      "path": "51"
    },
    "677": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "678": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "679": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "680": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP5",
      "path": "51"
    },
    "681": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "682": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "683": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "684": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "685": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "686": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x3"
    },
    "688": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "689": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SLOAD",
      "path": "51"
    },
    "690": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x60"
    },
    "692": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP4",
      "path": "51"
    },
    "693": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "694": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "695": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "696": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "DUP4",
      "path": "51"
    },
    "697": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "698": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "699": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "700": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "701": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "702": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "ADD",
      "path": "51"
    },
    "703": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x261"
    },
    "706": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "JUMP",
      "path": "51"
    },
    "707": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "708": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "POP",
      "path": "51"
    },
    "709": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "POP",
      "path": "51"
    },
    "710": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "POP",
      "path": "51"
    },
    "711": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "POP",
      "path": "51"
    },
    "712": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "713": {
      "fn": "PackedToken.assets",
      "offset": [
        698,
        721
      ],
      "op": "POP",
      "path": "51"
    },
    "714": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "715": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "716": {
      "fn": "PackedToken.assets",
      "offset": [
        600,
        728
      ],
      "op": "POP",
      "path": "51"
    },
    "717": {
      "fn": "PackedToken.assets",
      "jump": "o",
      "offset": [
        600,
        728
      ],
      "op": "JUMP",
      "path": "51"
    },
    "718": {
      "op": "JUMPDEST"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "721": {
      "op": "DUP1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "724": {
      "op": "DUP4"
    },
    "725": {
      "op": "DUP6"
    },
    "726": {
      "op": "SUB"
    },
    "727": {
      "op": "SLT"
    },
    "728": {
      "op": "ISZERO"
    },
    "729": {
      "op": "PUSH2",
      "value": "0x2E1"
    },
    "732": {
      "op": "JUMPI"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "735": {
      "op": "DUP1"
    },
    "736": {
      "op": "REVERT"
    },
    "737": {
      "op": "JUMPDEST"
    },
    "738": {
      "op": "DUP3"
    },
    "739": {
      "op": "CALLDATALOAD"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "746": {
      "op": "SHL"
    },
    "747": {
      "op": "SUB"
    },
    "748": {
      "op": "DUP2"
    },
    "749": {
      "op": "AND"
    },
    "750": {
      "op": "DUP2"
    },
    "751": {
      "op": "EQ"
    },
    "752": {
      "op": "PUSH2",
      "value": "0x2F8"
    },
    "755": {
      "op": "JUMPI"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "758": {
      "op": "DUP1"
    },
    "759": {
      "op": "REVERT"
    },
    "760": {
      "op": "JUMPDEST"
    },
    "761": {
      "op": "SWAP5"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "764": {
      "op": "SWAP4"
    },
    "765": {
      "op": "SWAP1"
    },
    "766": {
      "op": "SWAP4"
    },
    "767": {
      "op": "ADD"
    },
    "768": {
      "op": "CALLDATALOAD"
    },
    "769": {
      "op": "SWAP4"
    },
    "770": {
      "op": "POP"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "jump": "o",
      "op": "JUMP"
    },
    "774": {
      "op": "JUMPDEST"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "779": {
      "op": "DUP3"
    },
    "780": {
      "op": "DUP5"
    },
    "781": {
      "op": "SUB"
    },
    "782": {
      "op": "SLT"
    },
    "783": {
      "op": "ISZERO"
    },
    "784": {
      "op": "PUSH2",
      "value": "0x318"
    },
    "787": {
      "op": "JUMPI"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "790": {
      "op": "DUP1"
    },
    "791": {
      "op": "REVERT"
    },
    "792": {
      "op": "JUMPDEST"
    },
    "793": {
      "op": "DUP2"
    },
    "794": {
      "op": "CALLDATALOAD"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "799": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "801": {
      "op": "SHL"
    },
    "802": {
      "op": "SUB"
    },
    "803": {
      "op": "NOT"
    },
    "804": {
      "op": "DUP2"
    },
    "805": {
      "op": "AND"
    },
    "806": {
      "op": "DUP2"
    },
    "807": {
      "op": "EQ"
    },
    "808": {
      "op": "PUSH2",
      "value": "0x330"
    },
    "811": {
      "op": "JUMPI"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "814": {
      "op": "DUP1"
    },
    "815": {
      "op": "REVERT"
    },
    "816": {
      "op": "JUMPDEST"
    },
    "817": {
      "op": "SWAP4"
    },
    "818": {
      "op": "SWAP3"
    },
    "819": {
      "op": "POP"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "jump": "o",
      "op": "JUMP"
    },
    "823": {
      "op": "JUMPDEST"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "828": {
      "op": "DUP3"
    },
    "829": {
      "op": "DUP5"
    },
    "830": {
      "op": "SUB"
    },
    "831": {
      "op": "SLT"
    },
    "832": {
      "op": "ISZERO"
    },
    "833": {
      "op": "PUSH2",
      "value": "0x349"
    },
    "836": {
      "op": "JUMPI"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "839": {
      "op": "DUP1"
    },
    "840": {
      "op": "REVERT"
    },
    "841": {
      "op": "JUMPDEST"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "op": "CALLDATALOAD"
    },
    "844": {
      "op": "SWAP2"
    },
    "845": {
      "op": "SWAP1"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "jump": "o",
      "op": "JUMP"
    },
    "848": {
      "op": "JUMPDEST"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "851": {
      "op": "DUP1"
    },
    "852": {
      "op": "DUP3"
    },
    "853": {
      "op": "MSTORE"
    },
    "854": {
      "op": "DUP3"
    },
    "855": {
      "op": "MLOAD"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "DUP3"
    },
    "858": {
      "op": "ADD"
    },
    "859": {
      "op": "DUP2"
    },
    "860": {
      "op": "SWAP1"
    },
    "861": {
      "op": "MSTORE"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "864": {
      "op": "SWAP2"
    },
    "865": {
      "op": "SWAP1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "868": {
      "op": "SWAP1"
    },
    "869": {
      "op": "DUP2"
    },
    "870": {
      "op": "DUP6"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "SWAP1"
    },
    "873": {
      "op": "DUP7"
    },
    "874": {
      "op": "DUP5"
    },
    "875": {
      "op": "ADD"
    },
    "876": {
      "op": "DUP6"
    },
    "877": {
      "op": "JUMPDEST"
    },
    "878": {
      "op": "DUP3"
    },
    "879": {
      "op": "DUP2"
    },
    "880": {
      "op": "LT"
    },
    "881": {
      "op": "ISZERO"
    },
    "882": {
      "op": "PUSH2",
      "value": "0x3B2"
    },
    "885": {
      "op": "JUMPI"
    },
    "886": {
      "op": "DUP2"
    },
    "887": {
      "op": "MLOAD"
    },
    "888": {
      "op": "DUP1"
    },
    "889": {
      "op": "MLOAD"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "SUB"
    },
    "898": {
      "op": "AND"
    },
    "899": {
      "op": "DUP6"
    },
    "900": {
      "op": "MSTORE"
    },
    "901": {
      "op": "DUP7"
    },
    "902": {
      "op": "DUP2"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "op": "MLOAD"
    },
    "905": {
      "op": "DUP8"
    },
    "906": {
      "op": "DUP7"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "DUP6"
    },
    "910": {
      "op": "DUP2"
    },
    "911": {
      "op": "ADD"
    },
    "912": {
      "op": "MLOAD"
    },
    "913": {
      "op": "ISZERO"
    },
    "914": {
      "op": "ISZERO"
    },
    "915": {
      "op": "DUP7"
    },
    "916": {
      "op": "DUP7"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "921": {
      "op": "SWAP1"
    },
    "922": {
      "op": "DUP2"
    },
    "923": {
      "op": "ADD"
    },
    "924": {
      "op": "MLOAD"
    },
    "925": {
      "op": "SWAP1"
    },
    "926": {
      "op": "DUP6"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "931": {
      "op": "SWAP1"
    },
    "932": {
      "op": "SWAP4"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "SWAP3"
    },
    "935": {
      "op": "SWAP1"
    },
    "936": {
      "op": "DUP6"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "op": "SWAP1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "PUSH2",
      "value": "0x36D"
    },
    "945": {
      "op": "JUMP"
    },
    "946": {
      "op": "JUMPDEST"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "SWAP2"
    },
    "949": {
      "op": "SWAP8"
    },
    "950": {
      "op": "SWAP7"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "op": "POP"
    },
    "953": {
      "op": "POP"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "op": "POP"
    },
    "958": {
      "jump": "o",
      "op": "JUMP"
    },
    "959": {
      "op": "JUMPDEST"
    },
    "960": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "970": {
      "op": "MSTORE"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "975": {
      "op": "MSTORE"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "980": {
      "op": "REVERT"
    },
    "981": {
      "op": "JUMPDEST"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "PUSH2",
      "value": "0x3F5"
    },
    "991": {
      "op": "JUMPI"
    },
    "992": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1007": {
      "op": "MSTORE"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1012": {
      "op": "REVERT"
    },
    "1013": {
      "op": "JUMPDEST"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "op": "SWAP1"
    },
    "1019": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0bb2f6ac46d6ec4612c0344cf45769ec54ca61cc",
  "source": "// SPDX-License-Identifier: MIT\n// Beef MarketPlace Contracts v0.0.0 hello@mcdu.com\n\npragma solidity ^0.8.0;\nimport \"../../../interfaces/IPackedToken.sol\";\n\ncontract PackedToken is IPackedToken {\n\n    function supportsInterface(bytes4 interfaceId) external pure returns (bool)\n    {\n        return\n            interfaceId == type(IPackedToken).interfaceId ;\n    }\n\n    mapping(uint256 => SPackedTokenAsset[]) private _assets;\n    mapping(uint256 => bool) private _nft;\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n    mapping(uint256 => uint256) private _totalSupply;\n\n\n    function assets(uint256 tokenId) external view returns (SPackedTokenAsset[] memory)\n    {\n        return _assets[tokenId];\n    }\n    function nft(uint256 tokenId) public view returns (bool)\n    {\n        if (_nft[tokenId]) return true;\n        for (uint i;i<_assets[tokenId].length;i++)\n            if (_assets[tokenId][i].nft)\n                return true;\n        return false;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 tokenId,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"Pack: transfer from the zero address\");\n        require(recipient != address(0), \"Pack: transfer to the zero address\");\n        require(!nft(tokenId) || amount==_totalSupply[tokenId],\"Pack: token is nft and amount isnt totalSupply\");\n\n        uint256 senderBalance = _balances[tokenId][sender];\n        require(senderBalance >= amount, \"Pack: transfer amount exceeds balance\");\n        unchecked {\n            _balances[tokenId][sender] = senderBalance - amount;\n        }\n        _balances[tokenId][recipient] += amount;\n    }\n    function totalSupply(uint256 tokenId) external view returns (uint256)\n    {\n        return _totalSupply[tokenId];\n\n    }\n    function balanceOf(address account,uint256 tokenId) external view returns (uint256)\n    {\n        require(account != address(0), \"Pack: balance query for the zero address\");\n        return _balances[tokenId][account];\n    }\n\n}\n",
  "sourceMap": "157:1899:51:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/agnostic/Token/PackedToken.sol",
  "type": "contract"
}