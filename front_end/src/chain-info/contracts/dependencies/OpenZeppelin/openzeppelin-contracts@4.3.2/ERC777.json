{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators_",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "10": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/IERC777Sender.sol",
    "11": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "12": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "16": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC1820Registry.sol",
    "7": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/ERC777.sol",
    "8": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/IERC777.sol",
    "9": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/IERC777Recipient.sol"
  },
  "ast": {
    "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/ERC777.sol",
    "exportedSymbols": {
      "Address": [
        26255
      ],
      "Context": [
        23414
      ],
      "ERC777": [
        25368
      ],
      "IERC1820Registry": [
        26568
      ],
      "IERC20": [
        22374
      ],
      "IERC777": [
        26438
      ],
      "IERC777Recipient": [
        26458
      ],
      "IERC777Sender": [
        26478
      ]
    },
    "id": 25369,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24233,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/IERC777.sol",
        "file": "./IERC777.sol",
        "id": 24234,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25369,
        "sourceUnit": 26439,
        "src": "58:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "./IERC777Recipient.sol",
        "id": 24235,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25369,
        "sourceUnit": 26459,
        "src": "82:32:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/IERC777Sender.sol",
        "file": "./IERC777Sender.sol",
        "id": 24236,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25369,
        "sourceUnit": 26479,
        "src": "115:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 24237,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25369,
        "sourceUnit": 22375,
        "src": "145:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 24238,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25369,
        "sourceUnit": 26256,
        "src": "175:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 24239,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25369,
        "sourceUnit": 23415,
        "src": "209:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC1820Registry.sol",
        "file": "../../utils/introspection/IERC1820Registry.sol",
        "id": 24240,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25369,
        "sourceUnit": 26569,
        "src": "243:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24242,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23414,
              "src": "1033:7:7"
            },
            "id": 24243,
            "nodeType": "InheritanceSpecifier",
            "src": "1033:7:7"
          },
          {
            "baseName": {
              "id": 24244,
              "name": "IERC777",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26438,
              "src": "1042:7:7"
            },
            "id": 24245,
            "nodeType": "InheritanceSpecifier",
            "src": "1042:7:7"
          },
          {
            "baseName": {
              "id": 24246,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22374,
              "src": "1051:6:7"
            },
            "id": 24247,
            "nodeType": "InheritanceSpecifier",
            "src": "1051:6:7"
          }
        ],
        "canonicalName": "ERC777",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 24241,
          "nodeType": "StructuredDocumentation",
          "src": "301:712:7",
          "text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
        },
        "fullyImplemented": true,
        "id": 25368,
        "linearizedBaseContracts": [
          25368,
          22374,
          26438,
          23414
        ],
        "name": "ERC777",
        "nameLocation": "1023:6:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 24250,
            "libraryName": {
              "id": 24248,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26255,
              "src": "1070:7:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1064:26:7",
            "typeName": {
              "id": 24249,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1082:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 24256,
            "mutability": "constant",
            "name": "_ERC1820_REGISTRY",
            "nameLocation": "1131:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1096:115:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$26568",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "id": 24252,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24251,
                "name": "IERC1820Registry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26568,
                "src": "1096:16:7"
              },
              "referencedDeclaration": 26568,
              "src": "1096:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$26568",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 24254,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1168:42:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 24253,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 26568,
                "src": "1151:16:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$26568_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 24255,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1151:60:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$26568",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24260,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1254:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1218:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 24259,
              "keyType": {
                "id": 24257,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1226:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1218:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 24258,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1237:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24262,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1286:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1270:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24261,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1270:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24264,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1320:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1305:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24263,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1305:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24266,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1346:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1331:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24265,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1331:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 24271,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nameLocation": "1385:29:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1360:88:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24267,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 24269,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1427:20:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 24268,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1417:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24270,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1417:31:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 24276,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nameLocation": "1479:32:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1454:94:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24272,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1454:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 24274,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1524:23:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 24273,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1514:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24275,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1514:34:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24279,
            "mutability": "mutable",
            "name": "_defaultOperatorsArray",
            "nameLocation": "1665:22:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1647:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 24277,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1647:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 24278,
              "nodeType": "ArrayTypeName",
              "src": "1647:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24283,
            "mutability": "mutable",
            "name": "_defaultOperators",
            "nameLocation": "1814:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1781:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 24282,
              "keyType": {
                "id": 24280,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1789:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1781:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 24281,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1800:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24289,
            "mutability": "mutable",
            "name": "_operators",
            "nameLocation": "1974:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1921:63:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 24288,
              "keyType": {
                "id": 24284,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1929:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1921:44:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 24287,
                "keyType": {
                  "id": 24285,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1948:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1940:24:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 24286,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1959:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24295,
            "mutability": "mutable",
            "name": "_revokedDefaultOperators",
            "nameLocation": "2043:24:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "1990:77:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 24294,
              "keyType": {
                "id": 24290,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1998:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1990:44:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 24293,
                "keyType": {
                  "id": 24291,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2017:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2009:24:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 24292,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2028:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24301,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "2154:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 25368,
            "src": "2098:67:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 24300,
              "keyType": {
                "id": 24296,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2106:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2098:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 24299,
                "keyType": {
                  "id": 24297,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2125:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2117:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 24298,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2136:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 24377,
              "nodeType": "Block",
              "src": "2364:490:7",
              "statements": [
                {
                  "expression": {
                    "id": 24314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24312,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24264,
                      "src": "2374:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24313,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24304,
                      "src": "2382:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2374:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 24315,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:13:7"
                },
                {
                  "expression": {
                    "id": 24318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24316,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24266,
                      "src": "2397:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24317,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24306,
                      "src": "2407:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2397:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 24319,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:17:7"
                },
                {
                  "expression": {
                    "id": 24322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24320,
                      "name": "_defaultOperatorsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24279,
                      "src": "2425:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24321,
                      "name": "defaultOperators_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24309,
                      "src": "2450:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2425:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24323,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:42:7"
                },
                {
                  "body": {
                    "id": 24343,
                    "nodeType": "Block",
                    "src": "2532:71:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 24341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24335,
                              "name": "_defaultOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24283,
                              "src": "2546:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24339,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 24336,
                                "name": "defaultOperators_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24309,
                                "src": "2564:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24338,
                              "indexExpression": {
                                "id": 24337,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24325,
                                "src": "2582:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2564:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2546:39:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2588:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2546:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24342,
                        "nodeType": "ExpressionStatement",
                        "src": "2546:46:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24328,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24325,
                      "src": "2497:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24329,
                        "name": "defaultOperators_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24309,
                        "src": "2501:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2501:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2497:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24344,
                  "initializationExpression": {
                    "assignments": [
                      24325
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24325,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2490:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 24344,
                        "src": "2482:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2482:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24327,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2494:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2482:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2527:3:7",
                      "subExpression": {
                        "id": 24332,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24325,
                        "src": "2527:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24334,
                    "nodeType": "ExpressionStatement",
                    "src": "2527:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2477:126:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24350,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2694:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2686:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2686:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2686:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "455243373737546f6b656e",
                            "id": 24353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2711:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            },
                            "value": "ERC777Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            }
                          ],
                          "id": 24352,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2701:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 24354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2701:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24357,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2735:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2727:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24355,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2727:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2727:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24345,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24256,
                        "src": "2644:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26568",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 24347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26507,
                      "src": "2644:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 24359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:97:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24360,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:97:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24366,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2801:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2793:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24364,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2793:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2793:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4552433230546f6b656e",
                            "id": 24369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2818:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            },
                            "value": "ERC20Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            }
                          ],
                          "id": 24368,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2808:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 24370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2808:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24373,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2841:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25368",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2833:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24371,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2833:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2833:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24361,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24256,
                        "src": "2751:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26568",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 24363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26507,
                      "src": "2751:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 24375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24376,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:96:7"
                }
              ]
            },
            "documentation": {
              "id": 24302,
              "nodeType": "StructuredDocumentation",
              "src": "2172:65:7",
              "text": " @dev `defaultOperators` may be an empty array."
            },
            "id": 24378,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24304,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2277:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24378,
                  "src": "2263:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24303,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24306,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2306:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24378,
                  "src": "2292:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24309,
                  "mutability": "mutable",
                  "name": "defaultOperators_",
                  "nameLocation": "2340:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24378,
                  "src": "2323:34:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24307,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2323:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24308,
                    "nodeType": "ArrayTypeName",
                    "src": "2323:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:110:7"
            },
            "returnParameters": {
              "id": 24311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2364:0:7"
            },
            "scope": 25368,
            "src": "2242:612:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26288
            ],
            "body": {
              "id": 24387,
              "nodeType": "Block",
              "src": "2977:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 24385,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24264,
                    "src": "2994:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 24384,
                  "id": 24386,
                  "nodeType": "Return",
                  "src": "2987:12:7"
                }
              ]
            },
            "documentation": {
              "id": 24379,
              "nodeType": "StructuredDocumentation",
              "src": "2860:43:7",
              "text": " @dev See {IERC777-name}."
            },
            "functionSelector": "06fdde03",
            "id": 24388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2917:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24381,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2944:8:7"
            },
            "parameters": {
              "id": 24380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2921:2:7"
            },
            "returnParameters": {
              "id": 24384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24388,
                  "src": "2962:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24382,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2961:15:7"
            },
            "scope": 25368,
            "src": "2908:98:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26294
            ],
            "body": {
              "id": 24397,
              "nodeType": "Block",
              "src": "3133:31:7",
              "statements": [
                {
                  "expression": {
                    "id": 24395,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24266,
                    "src": "3150:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 24394,
                  "id": 24396,
                  "nodeType": "Return",
                  "src": "3143:14:7"
                }
              ]
            },
            "documentation": {
              "id": 24389,
              "nodeType": "StructuredDocumentation",
              "src": "3012:45:7",
              "text": " @dev See {IERC777-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 24398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3071:6:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24391,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3100:8:7"
            },
            "parameters": {
              "id": 24390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:2:7"
            },
            "returnParameters": {
              "id": 24394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24398,
                  "src": "3118:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3117:15:7"
            },
            "scope": 25368,
            "src": "3062:102:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24406,
              "nodeType": "Block",
              "src": "3404:26:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 24404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3421:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 24403,
                  "id": 24405,
                  "nodeType": "Return",
                  "src": "3414:9:7"
                }
              ]
            },
            "documentation": {
              "id": 24399,
              "nodeType": "StructuredDocumentation",
              "src": "3170:173:7",
              "text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
            },
            "functionSelector": "313ce567",
            "id": 24407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3357:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3365:2:7"
            },
            "returnParameters": {
              "id": 24403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24407,
                  "src": "3397:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 24401,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3396:7:7"
            },
            "scope": 25368,
            "src": "3348:82:7",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26300
            ],
            "body": {
              "id": 24416,
              "nodeType": "Block",
              "src": "3615:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 24414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3632:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 24413,
                  "id": 24415,
                  "nodeType": "Return",
                  "src": "3625:8:7"
                }
              ]
            },
            "documentation": {
              "id": 24408,
              "nodeType": "StructuredDocumentation",
              "src": "3436:104:7",
              "text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
            },
            "functionSelector": "556f0dc7",
            "id": 24417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "3554:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24410,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3588:8:7"
            },
            "parameters": {
              "id": 24409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:2:7"
            },
            "returnParameters": {
              "id": 24413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24417,
                  "src": "3606:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3605:9:7"
            },
            "scope": 25368,
            "src": "3545:95:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22305,
              26306
            ],
            "body": {
              "id": 24428,
              "nodeType": "Block",
              "src": "3788:36:7",
              "statements": [
                {
                  "expression": {
                    "id": 24426,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24262,
                    "src": "3805:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24425,
                  "id": 24427,
                  "nodeType": "Return",
                  "src": "3798:19:7"
                }
              ]
            },
            "documentation": {
              "id": 24418,
              "nodeType": "StructuredDocumentation",
              "src": "3646:50:7",
              "text": " @dev See {IERC777-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 24429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3710:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24422,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 24420,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22374,
                  "src": "3753:6:7"
                },
                {
                  "id": 24421,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "3761:7:7"
                }
              ],
              "src": "3744:25:7"
            },
            "parameters": {
              "id": 24419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3721:2:7"
            },
            "returnParameters": {
              "id": 24425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24424,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24429,
                  "src": "3779:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3779:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3778:9:7"
            },
            "scope": 25368,
            "src": "3701:123:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22313,
              26314
            ],
            "body": {
              "id": 24444,
              "nodeType": "Block",
              "src": "4028:46:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24440,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24260,
                      "src": "4045:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24442,
                    "indexExpression": {
                      "id": 24441,
                      "name": "tokenHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24432,
                      "src": "4055:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4045:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24439,
                  "id": 24443,
                  "nodeType": "Return",
                  "src": "4038:29:7"
                }
              ]
            },
            "documentation": {
              "id": 24430,
              "nodeType": "StructuredDocumentation",
              "src": "3830:89:7",
              "text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
            },
            "functionSelector": "70a08231",
            "id": 24445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3933:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24436,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 24434,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22374,
                  "src": "3993:6:7"
                },
                {
                  "id": 24435,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "4001:7:7"
                }
              ],
              "src": "3984:25:7"
            },
            "parameters": {
              "id": 24433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24432,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "3951:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24445,
                  "src": "3943:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3943:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3942:21:7"
            },
            "returnParameters": {
              "id": 24439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24445,
                  "src": "4019:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4018:9:7"
            },
            "scope": 25368,
            "src": "3924:150:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26324
            ],
            "body": {
              "id": 24466,
              "nodeType": "Block",
              "src": "4326:71:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24457,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23404,
                          "src": "4342:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4342:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24459,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24448,
                        "src": "4356:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24460,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24450,
                        "src": "4367:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24461,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24452,
                        "src": "4375:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4381:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4385:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24456,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25047,
                      "src": "4336:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24465,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:54:7"
                }
              ]
            },
            "documentation": {
              "id": 24446,
              "nodeType": "StructuredDocumentation",
              "src": "4080:119:7",
              "text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "9bd9bbc6",
            "id": 24467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "4213:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24454,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4317:8:7"
            },
            "parameters": {
              "id": 24453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24448,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4235:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24467,
                  "src": "4227:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4227:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24450,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4262:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24467,
                  "src": "4254:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24452,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4291:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24467,
                  "src": "4278:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24451,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4217:84:7"
            },
            "returnParameters": {
              "id": 24455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:7"
            },
            "scope": 25368,
            "src": "4204:193:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22323
            ],
            "body": {
              "id": 24523,
              "nodeType": "Block",
              "src": "4720:347:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24479,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24470,
                          "src": "4738:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4759:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4751:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24480,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4751:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4751:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4738:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 24485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4763:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 24478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4730:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24487,
                  "nodeType": "ExpressionStatement",
                  "src": "4730:72:7"
                },
                {
                  "assignments": [
                    24489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24489,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4821:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 24523,
                      "src": "4813:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24488,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4813:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24492,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24490,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23404,
                      "src": "4828:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 24491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:27:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24494,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24489,
                        "src": "4869:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24495,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24489,
                        "src": "4875:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24496,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24470,
                        "src": "4881:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24497,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24472,
                        "src": "4892:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4900:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 24499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4904:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 24493,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25296,
                      "src": "4851:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4851:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24501,
                  "nodeType": "ExpressionStatement",
                  "src": "4851:56:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24503,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24489,
                        "src": "4924:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24504,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24489,
                        "src": "4930:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24505,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24470,
                        "src": "4936:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24506,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24472,
                        "src": "4947:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4955:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 24508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4959:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 24502,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25206,
                      "src": "4918:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24510,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24512,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24489,
                        "src": "4993:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24513,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24489,
                        "src": "4999:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24514,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24470,
                        "src": "5005:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24515,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24472,
                        "src": "5016:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5024:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 24517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5028:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 24518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5032:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24511,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25354,
                      "src": "4973:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4973:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24520,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:65:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 24521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5056:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 24477,
                  "id": 24522,
                  "nodeType": "Return",
                  "src": "5049:11:7"
                }
              ]
            },
            "documentation": {
              "id": 24468,
              "nodeType": "StructuredDocumentation",
              "src": "4403:220:7",
              "text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
            },
            "functionSelector": "a9059cbb",
            "id": 24524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4637:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24474,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4696:8:7"
            },
            "parameters": {
              "id": 24473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24470,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4654:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24524,
                  "src": "4646:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4646:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24472,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4673:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24524,
                  "src": "4665:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4645:35:7"
            },
            "returnParameters": {
              "id": 24477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24524,
                  "src": "4714:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24475,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4714:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4713:6:7"
            },
            "scope": 25368,
            "src": "4628:439:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26332
            ],
            "body": {
              "id": 24541,
              "nodeType": "Block",
              "src": "5270:54:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24534,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23404,
                          "src": "5286:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5286:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24536,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24527,
                        "src": "5300:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24537,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24529,
                        "src": "5308:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5314:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 24533,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25140,
                      "src": "5280:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5280:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24540,
                  "nodeType": "ExpressionStatement",
                  "src": "5280:37:7"
                }
              ]
            },
            "documentation": {
              "id": 24525,
              "nodeType": "StructuredDocumentation",
              "src": "5073:119:7",
              "text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "fe9d9303",
            "id": 24542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5206:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24531,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5261:8:7"
            },
            "parameters": {
              "id": 24530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24527,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5219:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24542,
                  "src": "5211:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24529,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5240:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24542,
                  "src": "5227:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24528,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5227:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5210:35:7"
            },
            "returnParameters": {
              "id": 24532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5270:0:7"
            },
            "scope": 25368,
            "src": "5197:127:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26342
            ],
            "body": {
              "id": 24575,
              "nodeType": "Block",
              "src": "5493:205:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 24573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 24567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24553,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24545,
                          "src": "5522:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24554,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24547,
                          "src": "5534:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5522:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 24565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 24556,
                                "name": "_defaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24283,
                                "src": "5562:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 24558,
                              "indexExpression": {
                                "id": 24557,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24545,
                                "src": "5580:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5562:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 24564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5593:48:7",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 24559,
                                    "name": "_revokedDefaultOperators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24295,
                                    "src": "5594:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 24561,
                                  "indexExpression": {
                                    "id": 24560,
                                    "name": "tokenHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24547,
                                    "src": "5619:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5594:37:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 24563,
                                "indexExpression": {
                                  "id": 24562,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24545,
                                  "src": "5632:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5594:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5562:79:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 24566,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5561:81:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5522:120:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 24568,
                          "name": "_operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24289,
                          "src": "5658:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 24570,
                        "indexExpression": {
                          "id": 24569,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24547,
                          "src": "5669:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5658:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24572,
                      "indexExpression": {
                        "id": 24571,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24545,
                        "src": "5682:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5658:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5522:169:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 24552,
                  "id": 24574,
                  "nodeType": "Return",
                  "src": "5503:188:7"
                }
              ]
            },
            "documentation": {
              "id": 24543,
              "nodeType": "StructuredDocumentation",
              "src": "5330:52:7",
              "text": " @dev See {IERC777-isOperatorFor}."
            },
            "functionSelector": "d95b6371",
            "id": 24576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "5396:13:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24549,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5469:8:7"
            },
            "parameters": {
              "id": 24548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24545,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5418:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24576,
                  "src": "5410:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5410:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24547,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "5436:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24576,
                  "src": "5428:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5428:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5409:39:7"
            },
            "returnParameters": {
              "id": 24552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24576,
                  "src": "5487:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5486:6:7"
            },
            "scope": 25368,
            "src": "5387:311:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26348
            ],
            "body": {
              "id": 24620,
              "nodeType": "Block",
              "src": "5834:343:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24584,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23404,
                            "src": "5852:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 24585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5852:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 24586,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24579,
                          "src": "5868:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5852:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
                        "id": 24588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5878:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        },
                        "value": "ERC777: authorizing self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        }
                      ],
                      "id": 24583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5844:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:73:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24590,
                  "nodeType": "ExpressionStatement",
                  "src": "5844:73:7"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 24591,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24283,
                      "src": "5932:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 24593,
                    "indexExpression": {
                      "id": 24592,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24579,
                      "src": "5950:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5932:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24612,
                    "nodeType": "Block",
                    "src": "6047:66:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 24610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24603,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24289,
                                "src": "6061:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24607,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24604,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23404,
                                  "src": "6072:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6072:12:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6061:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24608,
                            "indexExpression": {
                              "id": 24606,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24579,
                              "src": "6086:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6061:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6098:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6061:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24611,
                        "nodeType": "ExpressionStatement",
                        "src": "6061:41:7"
                      }
                    ]
                  },
                  "id": 24613,
                  "nodeType": "IfStatement",
                  "src": "5928:185:7",
                  "trueBody": {
                    "id": 24602,
                    "nodeType": "Block",
                    "src": "5961:80:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 24600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5975:55:7",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24594,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24295,
                                "src": "5982:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24597,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24595,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23404,
                                  "src": "6007:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6007:12:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5982:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24599,
                            "indexExpression": {
                              "id": 24598,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24579,
                              "src": "6021:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5982:48:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24601,
                        "nodeType": "ExpressionStatement",
                        "src": "5975:55:7"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24615,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24579,
                        "src": "6147:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24616,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23404,
                          "src": "6157:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6157:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24614,
                      "name": "AuthorizedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26431,
                      "src": "6128:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6128:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24619,
                  "nodeType": "EmitStatement",
                  "src": "6123:47:7"
                }
              ]
            },
            "documentation": {
              "id": 24577,
              "nodeType": "StructuredDocumentation",
              "src": "5704:56:7",
              "text": " @dev See {IERC777-authorizeOperator}."
            },
            "functionSelector": "959b8c3f",
            "id": 24621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "5774:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24581,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5825:8:7"
            },
            "parameters": {
              "id": 24580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24579,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5800:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24621,
                  "src": "5792:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5792:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5791:18:7"
            },
            "returnParameters": {
              "id": 24582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5834:0:7"
            },
            "scope": 25368,
            "src": "5765:412:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26354
            ],
            "body": {
              "id": 24665,
              "nodeType": "Block",
              "src": "6307:337:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24629,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24624,
                          "src": "6325:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24630,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23404,
                            "src": "6337:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 24631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6337:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6325:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
                        "id": 24633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6351:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        },
                        "value": "ERC777: revoking self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        }
                      ],
                      "id": 24628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6317:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6317:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24635,
                  "nodeType": "ExpressionStatement",
                  "src": "6317:70:7"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 24636,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24283,
                      "src": "6402:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 24638,
                    "indexExpression": {
                      "id": 24637,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24624,
                      "src": "6420:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6402:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24657,
                    "nodeType": "Block",
                    "src": "6517:66:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 24655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6531:41:7",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24649,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24289,
                                "src": "6538:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24652,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24650,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23404,
                                  "src": "6549:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6549:12:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6538:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24654,
                            "indexExpression": {
                              "id": 24653,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24624,
                              "src": "6563:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6538:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24656,
                        "nodeType": "ExpressionStatement",
                        "src": "6531:41:7"
                      }
                    ]
                  },
                  "id": 24658,
                  "nodeType": "IfStatement",
                  "src": "6398:185:7",
                  "trueBody": {
                    "id": 24648,
                    "nodeType": "Block",
                    "src": "6431:80:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 24646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24639,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24295,
                                "src": "6445:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24643,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24640,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23404,
                                  "src": "6470:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6470:12:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6445:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24644,
                            "indexExpression": {
                              "id": 24642,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24624,
                              "src": "6484:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6445:48:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6496:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6445:55:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24647,
                        "nodeType": "ExpressionStatement",
                        "src": "6445:55:7"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24660,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24624,
                        "src": "6614:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24661,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23404,
                          "src": "6624:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6624:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24659,
                      "name": "RevokedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26437,
                      "src": "6598:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6598:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24664,
                  "nodeType": "EmitStatement",
                  "src": "6593:44:7"
                }
              ]
            },
            "documentation": {
              "id": 24622,
              "nodeType": "StructuredDocumentation",
              "src": "6183:53:7",
              "text": " @dev See {IERC777-revokeOperator}."
            },
            "functionSelector": "fad8b32a",
            "id": 24666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "6250:14:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24626,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6298:8:7"
            },
            "parameters": {
              "id": 24625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24624,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6273:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24666,
                  "src": "6265:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6265:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6264:18:7"
            },
            "returnParameters": {
              "id": 24627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6307:0:7"
            },
            "scope": 25368,
            "src": "6241:403:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26361
            ],
            "body": {
              "id": 24676,
              "nodeType": "Block",
              "src": "6794:46:7",
              "statements": [
                {
                  "expression": {
                    "id": 24674,
                    "name": "_defaultOperatorsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24279,
                    "src": "6811:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 24673,
                  "id": 24675,
                  "nodeType": "Return",
                  "src": "6804:29:7"
                }
              ]
            },
            "documentation": {
              "id": 24667,
              "nodeType": "StructuredDocumentation",
              "src": "6650:55:7",
              "text": " @dev See {IERC777-defaultOperators}."
            },
            "functionSelector": "06e48538",
            "id": 24677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "6719:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24669,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6758:8:7"
            },
            "parameters": {
              "id": 24668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6735:2:7"
            },
            "returnParameters": {
              "id": 24673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24677,
                  "src": "6776:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24670,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6776:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24671,
                    "nodeType": "ArrayTypeName",
                    "src": "6776:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6775:18:7"
            },
            "scope": 25368,
            "src": "6710:130:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26375
            ],
            "body": {
              "id": 24710,
              "nodeType": "Block",
              "src": "7148:177:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24694,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23404,
                              "src": "7180:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 24695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7180:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24696,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24680,
                            "src": "7194:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24693,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24576,
                          "src": "7166:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 24697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7166:35:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 24698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7203:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 24692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7158:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7158:92:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24700,
                  "nodeType": "ExpressionStatement",
                  "src": "7158:92:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24702,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24680,
                        "src": "7266:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24703,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24682,
                        "src": "7274:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24704,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24684,
                        "src": "7285:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24705,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24686,
                        "src": "7293:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24706,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24688,
                        "src": "7299:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7313:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24701,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25047,
                      "src": "7260:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7260:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24709,
                  "nodeType": "ExpressionStatement",
                  "src": "7260:58:7"
                }
              ]
            },
            "documentation": {
              "id": 24678,
              "nodeType": "StructuredDocumentation",
              "src": "6846:108:7",
              "text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
            },
            "functionSelector": "62ad1b83",
            "id": 24711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "6968:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24690,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7139:8:7"
            },
            "parameters": {
              "id": 24689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24680,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6998:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24711,
                  "src": "6990:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6990:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24682,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7022:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24711,
                  "src": "7014:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7014:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24684,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7049:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24711,
                  "src": "7041:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7041:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24686,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7078:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24711,
                  "src": "7065:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24685,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7065:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24688,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7105:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24711,
                  "src": "7092:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24687,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7092:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6980:143:7"
            },
            "returnParameters": {
              "id": 24691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7148:0:7"
            },
            "scope": 25368,
            "src": "6959:366:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26387
            ],
            "body": {
              "id": 24740,
              "nodeType": "Block",
              "src": "7609:162:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24726,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23404,
                              "src": "7641:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 24727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7641:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24728,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24714,
                            "src": "7655:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24725,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24576,
                          "src": "7627:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 24729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7627:36:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 24730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7665:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 24724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7619:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7619:93:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24732,
                  "nodeType": "ExpressionStatement",
                  "src": "7619:93:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24734,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24714,
                        "src": "7728:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24735,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24716,
                        "src": "7737:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24736,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24718,
                        "src": "7745:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24737,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24720,
                        "src": "7751:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 24733,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25140,
                      "src": "7722:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7722:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24739,
                  "nodeType": "ExpressionStatement",
                  "src": "7722:42:7"
                }
              ]
            },
            "documentation": {
              "id": 24712,
              "nodeType": "StructuredDocumentation",
              "src": "7331:110:7",
              "text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
            },
            "functionSelector": "fc673c4f",
            "id": 24741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "7455:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24722,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7600:8:7"
            },
            "parameters": {
              "id": 24721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24714,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7485:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24741,
                  "src": "7477:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7477:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24716,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7510:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24741,
                  "src": "7502:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7502:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24718,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7539:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24741,
                  "src": "7526:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24717,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7526:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24720,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7566:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24741,
                  "src": "7553:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24719,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7553:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7467:117:7"
            },
            "returnParameters": {
              "id": 24723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7609:0:7"
            },
            "scope": 25368,
            "src": "7446:325:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22333
            ],
            "body": {
              "id": 24758,
              "nodeType": "Block",
              "src": "8109:52:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24752,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24301,
                        "src": "8126:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24754,
                      "indexExpression": {
                        "id": 24753,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24744,
                        "src": "8138:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8126:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24756,
                    "indexExpression": {
                      "id": 24755,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24746,
                      "src": "8146:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8126:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24751,
                  "id": 24757,
                  "nodeType": "Return",
                  "src": "8119:35:7"
                }
              ]
            },
            "documentation": {
              "id": 24742,
              "nodeType": "StructuredDocumentation",
              "src": "7777:228:7",
              "text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
            },
            "functionSelector": "dd62ed3e",
            "id": 24759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "8019:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8082:8:7"
            },
            "parameters": {
              "id": 24747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24744,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8037:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24759,
                  "src": "8029:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8029:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24746,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8053:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24759,
                  "src": "8045:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8028:33:7"
            },
            "returnParameters": {
              "id": 24751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24759,
                  "src": "8100:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8100:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8099:9:7"
            },
            "scope": 25368,
            "src": "8010:151:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22343
            ],
            "body": {
              "id": 24783,
              "nodeType": "Block",
              "src": "8387:109:7",
              "statements": [
                {
                  "assignments": [
                    24771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24771,
                      "mutability": "mutable",
                      "name": "holder",
                      "nameLocation": "8405:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 24783,
                      "src": "8397:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24770,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8397:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24774,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24772,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23404,
                      "src": "8414:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 24773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8414:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8397:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24776,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24771,
                        "src": "8445:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24777,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24762,
                        "src": "8453:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24778,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24764,
                        "src": "8462:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24775,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25251,
                      "src": "8436:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8436:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24780,
                  "nodeType": "ExpressionStatement",
                  "src": "8436:32:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 24781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8485:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 24769,
                  "id": 24782,
                  "nodeType": "Return",
                  "src": "8478:11:7"
                }
              ]
            },
            "documentation": {
              "id": 24760,
              "nodeType": "StructuredDocumentation",
              "src": "8167:127:7",
              "text": " @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "functionSelector": "095ea7b3",
            "id": 24784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "8308:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24766,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8363:8:7"
            },
            "parameters": {
              "id": 24765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24762,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8324:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24784,
                  "src": "8316:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8316:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24764,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8341:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24784,
                  "src": "8333:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8333:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8315:32:7"
            },
            "returnParameters": {
              "id": 24769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24784,
                  "src": "8381:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24767,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8381:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8380:6:7"
            },
            "scope": 25368,
            "src": "8299:197:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22355
            ],
            "body": {
              "id": 24875,
              "nodeType": "Block",
              "src": "9012:664:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24798,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24789,
                          "src": "9030:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9051:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9043:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24799,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9043:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9043:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9030:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 24804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9055:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 24797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9022:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9022:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24806,
                  "nodeType": "ExpressionStatement",
                  "src": "9022:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24808,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24787,
                          "src": "9112:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9130:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9122:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24809,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9122:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9122:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9112:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 24814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9134:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        },
                        "value": "ERC777: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        }
                      ],
                      "id": 24807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9104:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9104:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24816,
                  "nodeType": "ExpressionStatement",
                  "src": "9104:71:7"
                },
                {
                  "assignments": [
                    24818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24818,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "9194:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 24875,
                      "src": "9186:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24817,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9186:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24821,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24819,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23404,
                      "src": "9204:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 24820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9204:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9186:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24823,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24818,
                        "src": "9245:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24824,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24787,
                        "src": "9254:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24825,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24789,
                        "src": "9262:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24826,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24791,
                        "src": "9273:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9281:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 24828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9285:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 24822,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25296,
                      "src": "9227:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9227:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24830,
                  "nodeType": "ExpressionStatement",
                  "src": "9227:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24832,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24818,
                        "src": "9305:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24833,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24787,
                        "src": "9314:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24834,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24789,
                        "src": "9322:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24835,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24791,
                        "src": "9333:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9341:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 24837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9345:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 24831,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25206,
                      "src": "9299:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9299:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24839,
                  "nodeType": "ExpressionStatement",
                  "src": "9299:49:7"
                },
                {
                  "assignments": [
                    24841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24841,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "9367:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 24875,
                      "src": "9359:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9359:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24847,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24842,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24301,
                        "src": "9386:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24844,
                      "indexExpression": {
                        "id": 24843,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24787,
                        "src": "9398:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9386:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24846,
                    "indexExpression": {
                      "id": 24845,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24818,
                      "src": "9406:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9386:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9359:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24849,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24841,
                          "src": "9432:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 24850,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24791,
                          "src": "9452:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9432:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 24852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9460:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        },
                        "value": "ERC777: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 24848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9424:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9424:80:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24854,
                  "nodeType": "ExpressionStatement",
                  "src": "9424:80:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24856,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24787,
                        "src": "9523:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24857,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24818,
                        "src": "9531:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24858,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24841,
                          "src": "9540:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 24859,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24791,
                          "src": "9559:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9540:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24855,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25251,
                      "src": "9514:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9514:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24862,
                  "nodeType": "ExpressionStatement",
                  "src": "9514:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24864,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24818,
                        "src": "9597:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24865,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24787,
                        "src": "9606:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24866,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24789,
                        "src": "9614:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24867,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24791,
                        "src": "9625:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9633:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 24869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9637:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 24870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9641:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24863,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25354,
                      "src": "9577:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9577:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24872,
                  "nodeType": "ExpressionStatement",
                  "src": "9577:70:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 24873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9665:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 24796,
                  "id": 24874,
                  "nodeType": "Return",
                  "src": "9658:11:7"
                }
              ]
            },
            "documentation": {
              "id": 24785,
              "nodeType": "StructuredDocumentation",
              "src": "8502:363:7",
              "text": " @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
            },
            "functionSelector": "23b872dd",
            "id": 24876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "8879:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24793,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8988:8:7"
            },
            "parameters": {
              "id": 24792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24787,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8909:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24876,
                  "src": "8901:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8901:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24789,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8933:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24876,
                  "src": "8925:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8925:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24791,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8960:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24876,
                  "src": "8952:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8952:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8891:81:7"
            },
            "returnParameters": {
              "id": 24796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24876,
                  "src": "9006:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9006:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9005:6:7"
            },
            "scope": 25368,
            "src": "8870:806:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24896,
              "nodeType": "Block",
              "src": "10399:69:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24889,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24879,
                        "src": "10415:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24890,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24881,
                        "src": "10424:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24891,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24883,
                        "src": "10432:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24892,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24885,
                        "src": "10442:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10456:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24888,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        24897,
                        24977
                      ],
                      "referencedDeclaration": 24977,
                      "src": "10409:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10409:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24895,
                  "nodeType": "ExpressionStatement",
                  "src": "10409:52:7"
                }
              ]
            },
            "documentation": {
              "id": 24877,
              "nodeType": "StructuredDocumentation",
              "src": "9682:559:7",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 24897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10255:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24879,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10278:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24897,
                  "src": "10270:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10270:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24881,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10303:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24897,
                  "src": "10295:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10295:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24883,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "10332:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24897,
                  "src": "10319:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24882,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10319:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24885,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10363:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24897,
                  "src": "10350:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24884,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10350:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10260:121:7"
            },
            "returnParameters": {
              "id": 24887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10399:0:7"
            },
            "scope": 25368,
            "src": "10246:222:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24976,
              "nodeType": "Block",
              "src": "11277:539:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24912,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24900,
                          "src": "11295:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11314:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11306:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24913,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11306:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11306:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11295:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 24918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11318:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        },
                        "value": "ERC777: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        }
                      ],
                      "id": 24911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11287:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11287:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24920,
                  "nodeType": "ExpressionStatement",
                  "src": "11287:66:7"
                },
                {
                  "assignments": [
                    24922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24922,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11372:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 24976,
                      "src": "11364:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24921,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11364:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24925,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24923,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23404,
                      "src": "11383:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 24924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11383:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11364:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24927,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24922,
                        "src": "11427:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 24930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11445:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 24929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11437:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24928,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11437:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11437:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24932,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24900,
                        "src": "11449:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24933,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24902,
                        "src": "11458:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24926,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25367,
                      "src": "11406:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 24934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11406:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24935,
                  "nodeType": "ExpressionStatement",
                  "src": "11406:59:7"
                },
                {
                  "expression": {
                    "id": 24938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24936,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24262,
                      "src": "11510:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 24937,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24902,
                      "src": "11526:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11510:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24939,
                  "nodeType": "ExpressionStatement",
                  "src": "11510:22:7"
                },
                {
                  "expression": {
                    "id": 24944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24940,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24260,
                        "src": "11542:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 24942,
                      "indexExpression": {
                        "id": 24941,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24900,
                        "src": "11552:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11542:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 24943,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24902,
                      "src": "11564:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11542:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24945,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:28:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24947,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24922,
                        "src": "11601:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 24950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11619:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 24949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11611:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24948,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11611:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11611:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24952,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24900,
                        "src": "11623:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24953,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24902,
                        "src": "11632:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24954,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24904,
                        "src": "11640:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24955,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24906,
                        "src": "11650:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24956,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24908,
                        "src": "11664:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24946,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25354,
                      "src": "11581:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11581:103:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24958,
                  "nodeType": "ExpressionStatement",
                  "src": "11581:103:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24960,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24922,
                        "src": "11707:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24961,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24900,
                        "src": "11717:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24962,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24902,
                        "src": "11726:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24963,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24904,
                        "src": "11734:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24964,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24906,
                        "src": "11744:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 24959,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26413,
                      "src": "11700:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11700:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24966,
                  "nodeType": "EmitStatement",
                  "src": "11695:62:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 24970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11789:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 24969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11781:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24968,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11781:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11781:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24972,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24900,
                        "src": "11793:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24973,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24902,
                        "src": "11802:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24967,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22364,
                      "src": "11772:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11772:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24975,
                  "nodeType": "EmitStatement",
                  "src": "11767:42:7"
                }
              ]
            },
            "documentation": {
              "id": 24898,
              "nodeType": "StructuredDocumentation",
              "src": "10474:611:7",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 24977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "11099:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24900,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11122:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24977,
                  "src": "11114:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11114:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24902,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11147:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24977,
                  "src": "11139:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11139:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24904,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "11176:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24977,
                  "src": "11163:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24903,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11163:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24906,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11207:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24977,
                  "src": "11194:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24905,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11194:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24908,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "11234:19:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24977,
                  "src": "11229:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24907,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11229:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11104:155:7"
            },
            "returnParameters": {
              "id": 24910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11277:0:7"
            },
            "scope": 25368,
            "src": "11090:726:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25046,
              "nodeType": "Block",
              "src": "12496:446:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24994,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24980,
                          "src": "12514:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12530:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12522:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24995,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12522:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12522:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12514:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373",
                        "id": 25000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12534:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        },
                        "value": "ERC777: send from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        }
                      ],
                      "id": 24993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12506:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12506:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25002,
                  "nodeType": "ExpressionStatement",
                  "src": "12506:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25004,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24982,
                          "src": "12589:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12603:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12595:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25005,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12595:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12595:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12589:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
                        "id": 25010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12607:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        },
                        "value": "ERC777: send to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        }
                      ],
                      "id": 25003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12581:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12581:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25012,
                  "nodeType": "ExpressionStatement",
                  "src": "12581:61:7"
                },
                {
                  "assignments": [
                    25014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25014,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "12661:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 25046,
                      "src": "12653:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25013,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12653:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25017,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25015,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23404,
                      "src": "12672:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 25016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12672:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12653:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25019,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25014,
                        "src": "12713:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25020,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24980,
                        "src": "12723:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25021,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24982,
                        "src": "12729:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25022,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24984,
                        "src": "12733:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25023,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24986,
                        "src": "12741:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25024,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24988,
                        "src": "12751:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25018,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25296,
                      "src": "12695:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12695:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25026,
                  "nodeType": "ExpressionStatement",
                  "src": "12695:69:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25028,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25014,
                        "src": "12781:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25029,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24980,
                        "src": "12791:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25030,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24982,
                        "src": "12797:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25031,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24984,
                        "src": "12801:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25032,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24986,
                        "src": "12809:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25033,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24988,
                        "src": "12819:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25027,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25206,
                      "src": "12775:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12775:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25035,
                  "nodeType": "ExpressionStatement",
                  "src": "12775:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25037,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25014,
                        "src": "12863:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25038,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24980,
                        "src": "12873:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25039,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24982,
                        "src": "12879:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25040,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24984,
                        "src": "12883:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25041,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24986,
                        "src": "12891:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25042,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24988,
                        "src": "12901:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25043,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24990,
                        "src": "12915:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25036,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25354,
                      "src": "12843:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 25044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12843:92:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25045,
                  "nodeType": "ExpressionStatement",
                  "src": "12843:92:7"
                }
              ]
            },
            "documentation": {
              "id": 24978,
              "nodeType": "StructuredDocumentation",
              "src": "11822:465:7",
              "text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 25047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_send",
            "nameLocation": "12301:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24980,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12324:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25047,
                  "src": "12316:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12316:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24982,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12346:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25047,
                  "src": "12338:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12338:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24984,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12366:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25047,
                  "src": "12358:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12358:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24986,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "12395:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25047,
                  "src": "12382:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24985,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12382:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24988,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12426:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25047,
                  "src": "12413:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24987,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12413:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24990,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "12453:19:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25047,
                  "src": "12448:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24989,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12448:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12306:172:7"
            },
            "returnParameters": {
              "id": 24992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12496:0:7"
            },
            "scope": 25368,
            "src": "12292:650:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25139,
              "nodeType": "Block",
              "src": "13393:665:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25060,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25050,
                          "src": "13411:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13427:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13419:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25061,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13419:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13419:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13411:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 25066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13431:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        },
                        "value": "ERC777: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        }
                      ],
                      "id": 25059,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13403:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13403:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25068,
                  "nodeType": "ExpressionStatement",
                  "src": "13403:65:7"
                },
                {
                  "assignments": [
                    25070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25070,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "13487:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 25139,
                      "src": "13479:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25069,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13479:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25073,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25071,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23404,
                      "src": "13498:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 25072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13498:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13479:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25075,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25070,
                        "src": "13539:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25076,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25050,
                        "src": "13549:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13563:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13555:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13555:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13555:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25081,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25052,
                        "src": "13567:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25082,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25054,
                        "src": "13575:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25083,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25056,
                        "src": "13581:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25074,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25296,
                      "src": "13521:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13521:73:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25085,
                  "nodeType": "ExpressionStatement",
                  "src": "13521:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25087,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25070,
                        "src": "13626:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25088,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25050,
                        "src": "13636:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13650:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13642:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13642:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13642:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25093,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25052,
                        "src": "13654:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25086,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25367,
                      "src": "13605:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 25094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13605:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25095,
                  "nodeType": "ExpressionStatement",
                  "src": "13605:56:7"
                },
                {
                  "assignments": [
                    25097
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25097,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "13714:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 25139,
                      "src": "13706:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25096,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13706:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25101,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25098,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24260,
                      "src": "13728:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25100,
                    "indexExpression": {
                      "id": 25099,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25050,
                      "src": "13738:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13728:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13706:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25103,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25097,
                          "src": "13761:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 25104,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25052,
                          "src": "13776:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13761:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 25106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13784:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        },
                        "value": "ERC777: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        }
                      ],
                      "id": 25102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13753:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13753:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25108,
                  "nodeType": "ExpressionStatement",
                  "src": "13753:69:7"
                },
                {
                  "id": 25117,
                  "nodeType": "UncheckedBlock",
                  "src": "13832:73:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 25115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 25109,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24260,
                            "src": "13856:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 25111,
                          "indexExpression": {
                            "id": 25110,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25050,
                            "src": "13866:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13856:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25112,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25097,
                            "src": "13874:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 25113,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25052,
                            "src": "13888:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13874:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13856:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 25116,
                      "nodeType": "ExpressionStatement",
                      "src": "13856:38:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 25120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25118,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24262,
                      "src": "13914:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 25119,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25052,
                      "src": "13930:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13914:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25121,
                  "nodeType": "ExpressionStatement",
                  "src": "13914:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25123,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25070,
                        "src": "13959:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25124,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25050,
                        "src": "13969:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25125,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25052,
                        "src": "13975:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25126,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25054,
                        "src": "13983:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25127,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25056,
                        "src": "13989:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25122,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26425,
                      "src": "13952:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13952:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25129,
                  "nodeType": "EmitStatement",
                  "src": "13947:55:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25131,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25050,
                        "src": "14026:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14040:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14032:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14032:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14032:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25136,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25052,
                        "src": "14044:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25130,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22364,
                      "src": "14017:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14017:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25138,
                  "nodeType": "EmitStatement",
                  "src": "14012:39:7"
                }
              ]
            },
            "documentation": {
              "id": 25048,
              "nodeType": "StructuredDocumentation",
              "src": "12948:294:7",
              "text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 25140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "13256:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25050,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13279:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25140,
                  "src": "13271:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13271:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25052,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13301:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25140,
                  "src": "13293:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13293:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25054,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13330:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25140,
                  "src": "13317:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25053,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13317:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25056,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "13357:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25140,
                  "src": "13344:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25055,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13344:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13261:114:7"
            },
            "returnParameters": {
              "id": 25058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13393:0:7"
            },
            "scope": 25368,
            "src": "13247:811:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25205,
              "nodeType": "Block",
              "src": "14251:424:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25156,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25142,
                        "src": "14282:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25157,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25144,
                        "src": "14292:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25158,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25146,
                        "src": "14298:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25159,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25148,
                        "src": "14302:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25155,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25367,
                      "src": "14261:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 25160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14261:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25161,
                  "nodeType": "ExpressionStatement",
                  "src": "14261:48:7"
                },
                {
                  "assignments": [
                    25163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25163,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "14328:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 25205,
                      "src": "14320:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14320:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25167,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25164,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24260,
                      "src": "14342:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25166,
                    "indexExpression": {
                      "id": 25165,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25144,
                      "src": "14352:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14342:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14320:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25169,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25163,
                          "src": "14375:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 25170,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25148,
                          "src": "14390:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14375:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 25172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14398:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        },
                        "value": "ERC777: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 25168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14367:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14367:73:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25174,
                  "nodeType": "ExpressionStatement",
                  "src": "14367:73:7"
                },
                {
                  "id": 25183,
                  "nodeType": "UncheckedBlock",
                  "src": "14450:73:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 25181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 25175,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24260,
                            "src": "14474:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 25177,
                          "indexExpression": {
                            "id": 25176,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25144,
                            "src": "14484:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "14474:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25178,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25163,
                            "src": "14492:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 25179,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25148,
                            "src": "14506:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14492:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14474:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 25182,
                      "nodeType": "ExpressionStatement",
                      "src": "14474:38:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 25188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25184,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24260,
                        "src": "14532:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25186,
                      "indexExpression": {
                        "id": 25185,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25146,
                        "src": "14542:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14532:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 25187,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25148,
                      "src": "14549:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14532:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25189,
                  "nodeType": "ExpressionStatement",
                  "src": "14532:23:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25191,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25142,
                        "src": "14576:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25192,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25144,
                        "src": "14586:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25193,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25146,
                        "src": "14592:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25194,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25148,
                        "src": "14596:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25195,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25150,
                        "src": "14604:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25196,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25152,
                        "src": "14614:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25190,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26401,
                      "src": "14571:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14571:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25198,
                  "nodeType": "EmitStatement",
                  "src": "14566:61:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25200,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25144,
                        "src": "14651:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25201,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25146,
                        "src": "14657:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25202,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25148,
                        "src": "14661:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25199,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22364,
                      "src": "14642:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14642:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25204,
                  "nodeType": "EmitStatement",
                  "src": "14637:31:7"
                }
              ]
            },
            "id": 25206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_move",
            "nameLocation": "14073:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25142,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14096:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25206,
                  "src": "14088:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14088:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25144,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14122:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25206,
                  "src": "14114:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14114:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25146,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14144:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25206,
                  "src": "14136:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14136:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25148,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14164:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25206,
                  "src": "14156:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14156:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25150,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "14193:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25206,
                  "src": "14180:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25149,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14180:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25152,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "14224:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25206,
                  "src": "14211:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25151,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14211:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14078:164:7"
            },
            "returnParameters": {
              "id": 25154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14251:0:7"
            },
            "scope": 25368,
            "src": "14064:611:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 25250,
              "nodeType": "Block",
              "src": "14918:260:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25217,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25209,
                          "src": "14936:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14954:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14946:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25218,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14946:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14946:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14936:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 25223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14958:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        },
                        "value": "ERC777: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        }
                      ],
                      "id": 25216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14928:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14928:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25225,
                  "nodeType": "ExpressionStatement",
                  "src": "14928:70:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25227,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25211,
                          "src": "15016:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15035:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15027:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25228,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15027:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15027:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15016:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 25233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15039:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        },
                        "value": "ERC777: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        }
                      ],
                      "id": 25226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15008:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15008:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25235,
                  "nodeType": "ExpressionStatement",
                  "src": "15008:69:7"
                },
                {
                  "expression": {
                    "id": 25242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25236,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24301,
                          "src": "15088:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 25239,
                        "indexExpression": {
                          "id": 25237,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25209,
                          "src": "15100:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15088:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25240,
                      "indexExpression": {
                        "id": 25238,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25211,
                        "src": "15108:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15088:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25241,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25213,
                      "src": "15119:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15088:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25243,
                  "nodeType": "ExpressionStatement",
                  "src": "15088:36:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25245,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25209,
                        "src": "15148:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25246,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25211,
                        "src": "15156:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25247,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25213,
                        "src": "15165:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25244,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22373,
                      "src": "15139:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15139:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25249,
                  "nodeType": "EmitStatement",
                  "src": "15134:37:7"
                }
              ]
            },
            "documentation": {
              "id": 25207,
              "nodeType": "StructuredDocumentation",
              "src": "14681:127:7",
              "text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "id": 25251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "14822:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25209,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "14848:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25251,
                  "src": "14840:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14840:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25211,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14872:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25251,
                  "src": "14864:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14864:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25213,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14897:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25251,
                  "src": "14889:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14889:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14830:78:7"
            },
            "returnParameters": {
              "id": 25215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14918:0:7"
            },
            "scope": 25368,
            "src": "14813:365:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25295,
              "nodeType": "Block",
              "src": "15850:273:7",
              "statements": [
                {
                  "assignments": [
                    25268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25268,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "15868:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 25295,
                      "src": "15860:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25267,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15860:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25274,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25271,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25256,
                        "src": "15924:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25272,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24271,
                        "src": "15930:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25269,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24256,
                        "src": "15882:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26568",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 25270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26517,
                      "src": "15882:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 25273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15882:78:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15860:100:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 25280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25275,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25268,
                      "src": "15974:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 25278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15997:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 25277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15989:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15989:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15989:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15974:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25294,
                  "nodeType": "IfStatement",
                  "src": "15970:147:7",
                  "trueBody": {
                    "id": 25293,
                    "nodeType": "Block",
                    "src": "16001:116:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25285,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25254,
                              "src": "16055:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25286,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25256,
                              "src": "16065:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25287,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25258,
                              "src": "16071:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25288,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25260,
                              "src": "16075:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25289,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25262,
                              "src": "16083:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 25290,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25264,
                              "src": "16093:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 25282,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25268,
                                  "src": "16029:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25281,
                                "name": "IERC777Sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26478,
                                "src": "16015:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Sender_$26478_$",
                                  "typeString": "type(contract IERC777Sender)"
                                }
                              },
                              "id": 25283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16015:26:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Sender_$26478",
                                "typeString": "contract IERC777Sender"
                              }
                            },
                            "id": 25284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensToSend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26477,
                            "src": "16015:39:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 25291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16015:91:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25292,
                        "nodeType": "ExpressionStatement",
                        "src": "16015:91:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 25252,
              "nodeType": "StructuredDocumentation",
              "src": "15184:462:7",
              "text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 25296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nameLocation": "15660:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25254,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15695:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25296,
                  "src": "15687:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15687:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25256,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15721:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25296,
                  "src": "15713:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15713:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25258,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15743:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25296,
                  "src": "15735:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15735:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25260,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15763:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25296,
                  "src": "15755:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15755:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25262,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "15792:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25296,
                  "src": "15779:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25261,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15779:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25264,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "15823:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25296,
                  "src": "15810:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25263,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15810:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15677:164:7"
            },
            "returnParameters": {
              "id": 25266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15850:0:7"
            },
            "scope": 25368,
            "src": "15651:472:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 25353,
              "nodeType": "Block",
              "src": "17047:441:7",
              "statements": [
                {
                  "assignments": [
                    25315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25315,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "17065:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 25353,
                      "src": "17057:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17057:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25321,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25318,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25303,
                        "src": "17121:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25319,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24276,
                        "src": "17125:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25316,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24256,
                        "src": "17079:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26568",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 25317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26517,
                      "src": "17079:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 25320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17079:79:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17057:101:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 25327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25322,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25315,
                      "src": "17172:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 25325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17195:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 25324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17187:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17187:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17187:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17172:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 25341,
                      "name": "requireReceptionAck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25311,
                      "src": "17330:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 25351,
                    "nodeType": "IfStatement",
                    "src": "17326:156:7",
                    "trueBody": {
                      "id": 25350,
                      "nodeType": "Block",
                      "src": "17351:131:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 25346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17373:16:7",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 25343,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25303,
                                      "src": "17374:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 25344,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "isContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 25978,
                                    "src": "17374:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 25345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17374:15:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
                                "id": 25347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17391:79:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                },
                                "value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                }
                              ],
                              "id": 25342,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "17365:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 25348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17365:106:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 25349,
                          "nodeType": "ExpressionStatement",
                          "src": "17365:106:7"
                        }
                      ]
                    }
                  },
                  "id": 25352,
                  "nodeType": "IfStatement",
                  "src": "17168:314:7",
                  "trueBody": {
                    "id": 25340,
                    "nodeType": "Block",
                    "src": "17199:121:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25332,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25299,
                              "src": "17258:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25333,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25301,
                              "src": "17268:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25334,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25303,
                              "src": "17274:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25335,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25305,
                              "src": "17278:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25336,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25307,
                              "src": "17286:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 25337,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25309,
                              "src": "17296:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 25329,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25315,
                                  "src": "17230:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25328,
                                "name": "IERC777Recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26458,
                                "src": "17213:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$26458_$",
                                  "typeString": "type(contract IERC777Recipient)"
                                }
                              },
                              "id": 25330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17213:29:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Recipient_$26458",
                                "typeString": "contract IERC777Recipient"
                              }
                            },
                            "id": 25331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26457,
                            "src": "17213:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 25338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17213:96:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25339,
                        "nodeType": "ExpressionStatement",
                        "src": "17213:96:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 25297,
              "nodeType": "StructuredDocumentation",
              "src": "16129:678:7",
              "text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 25354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensReceived",
            "nameLocation": "16821:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25299,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "16858:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25354,
                  "src": "16850:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16850:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25301,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16884:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25354,
                  "src": "16876:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16876:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25303,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16906:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25354,
                  "src": "16898:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16898:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25305,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16926:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25354,
                  "src": "16918:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16918:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25307,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "16955:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25354,
                  "src": "16942:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25306,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16942:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25309,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "16986:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25354,
                  "src": "16973:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25308,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16973:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25311,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "17013:19:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25354,
                  "src": "17008:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17008:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16840:198:7"
            },
            "returnParameters": {
              "id": 25313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17047:0:7"
            },
            "scope": 25368,
            "src": "16812:676:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 25366,
              "nodeType": "Block",
              "src": "18261:2:7",
              "statements": []
            },
            "documentation": {
              "id": 25355,
              "nodeType": "StructuredDocumentation",
              "src": "17494:617:7",
              "text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 25367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "18125:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25357,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18163:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25367,
                  "src": "18155:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18155:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25359,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18189:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25367,
                  "src": "18181:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18181:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25361,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18211:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25367,
                  "src": "18203:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18203:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25363,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18231:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 25367,
                  "src": "18223:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18223:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18145:98:7"
            },
            "returnParameters": {
              "id": 25365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18261:0:7"
            },
            "scope": 25368,
            "src": "18116:147:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 25369,
        "src": "1014:17251:7",
        "usedErrors": []
      }
    ],
    "src": "33:18233:7"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001d4038038062001d408339810160408190526200003491620003f1565b82516200004990600290602086019062000215565b5081516200005f90600390602085019062000215565b50805162000075906004906020840190620002a4565b5060005b8151811015620000e5576001600560008484815181106200009e576200009e62000508565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000dc816200051e565b91505062000079565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200016057600080fd5b505af115801562000175573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001f357600080fd5b505af115801562000208573d6000803e3d6000fd5b5050505050505062000582565b828054620002239062000546565b90600052602060002090601f01602090048101928262000247576000855562000292565b82601f106200026257805160ff191683800117855562000292565b8280016001018555821562000292579182015b828111156200029257825182559160200191906001019062000275565b50620002a0929150620002fc565b5090565b82805482825590600052602060002090810192821562000292579160200282015b828111156200029257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002c5565b5b80821115620002a05760008155600101620002fd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000354576200035462000313565b604052919050565b600082601f8301126200036e57600080fd5b81516001600160401b038111156200038a576200038a62000313565b6020620003a0601f8301601f1916820162000329565b8281528582848701011115620003b557600080fd5b60005b83811015620003d5578581018301518282018401528201620003b8565b83811115620003e75760008385840101525b5095945050505050565b6000806000606084860312156200040757600080fd5b83516001600160401b03808211156200041f57600080fd5b6200042d878388016200035c565b94506020915081860151818111156200044557600080fd5b62000453888289016200035c565b9450506040860151818111156200046957600080fd5b8601601f810188136200047b57600080fd5b80518281111562000490576200049062000313565b8060051b9250620004a384840162000329565b818152928201840192848101908a851115620004be57600080fd5b928501925b84841015620004f857835192506001600160a01b0383168314620004e75760008081fd5b8282529285019290850190620004c3565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053f57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200055b57607f821691505b6020821081036200057c57634e487b7160e01b600052602260045260246000fd5b50919050565b6117ae80620005926000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111df565b60405180910390f35b610141610312565b6040516101309190611279565b61016161015c3660046112a4565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112d0565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113b4565b61057c565b005b6101756101cf366004611447565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611447565b6105b8565b6101416106d5565b6101bf610213366004611464565b6106e4565b6101616102263660046112a4565b610707565b6101616102393660046114bd565b6107ba565b61017561024c3660046114bd565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611447565b61085c565b6101bf6102983660046114f6565b610977565b6101bf6102ab366004611576565b6109af565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115bd565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115bd565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109ce565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db906115f7565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af5565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c1d565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d8785611651565b6109ce565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d83565b50600195945050505050565b61058633866107ba565b6105a25760405162461bcd60e51b81526004016103db90611668565b6105b185858585856001610f48565b5050505050565b6001600160a01b038116330361061c5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066d573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069c565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115bd565b61070233848484604051806020016040528060008152506001610f48565b505050565b60006001600160a01b03831661072f5760405162461bcd60e51b81526004016103db906115f7565b6000339050610760818286866040518060200160405280600081525060405180602001604052806000815250610af5565b61078c818286866040518060200160405280600081525060405180602001604052806000815250610c1d565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d83565b6000816001600160a01b0316836001600160a01b0316148061082557506001600160a01b03831660009081526005602052604090205460ff16801561082557506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085557506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036108be5760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610912573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561093e565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098133856107ba565b61099d5760405162461bcd60e51b81526004016103db90611668565b6109a98484848461102b565b50505050565b6109ca3383836040518060200160405280600081525061102b565b5050565b6001600160a01b038316610a325760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a945760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a91906116b4565b90506001600160a01b03811615610c1457604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be1908a908a908a908a908a908a906004016116d1565b600060405180830381600087803b158015610bfb57600080fd5b505af1158015610c0f573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c965760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610ccd90849061172b565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d2593929190611743565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7291815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2891906116b4565b90506001600160a01b03811615610ea4576040516223de2960e01b81526001600160a01b038216906223de2990610e6d908b908b908b908b908b908b906004016116d1565b600060405180830381600087803b158015610e8757600080fd5b505af1158015610e9b573d6000803e3d6000fd5b50505050610f3e565b8115610f3e576001600160a01b0386163b15610f3e5760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fa95760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b038516610fff5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b3361100e818888888888610af5565b61101c818888888888610c1d565b610c1481888888888888610d83565b6001600160a01b03841661108c5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b3361109c81866000878787610af5565b6001600160a01b038516600090815260208190526040902054848110156111115760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611140908490611651565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161118e93929190611743565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112205783516001600160a01b0316835292840192918401916001016111fb565b50909695505050505050565b6000815180845260005b8181101561125257602081850181015186830182015201611236565b81811115611264576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610855602083018461122c565b6001600160a01b03811681146112a157600080fd5b50565b600080604083850312156112b757600080fd5b82356112c28161128c565b946020939093013593505050565b6000806000606084860312156112e557600080fd5b83356112f08161128c565b925060208401356113008161128c565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133857600080fd5b813567ffffffffffffffff8082111561135357611353611311565b604051601f8301601f19908116603f0116810190828211818310171561137b5761137b611311565b8160405283815286602085880101111561139457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113cc57600080fd5b85356113d78161128c565b945060208601356113e78161128c565b935060408601359250606086013567ffffffffffffffff8082111561140b57600080fd5b61141789838a01611327565b9350608088013591508082111561142d57600080fd5b5061143a88828901611327565b9150509295509295909350565b60006020828403121561145957600080fd5b81356108558161128c565b60008060006060848603121561147957600080fd5b83356114848161128c565b925060208401359150604084013567ffffffffffffffff8111156114a757600080fd5b6114b386828701611327565b9150509250925092565b600080604083850312156114d057600080fd5b82356114db8161128c565b915060208301356114eb8161128c565b809150509250929050565b6000806000806080858703121561150c57600080fd5b84356115178161128c565b935060208501359250604085013567ffffffffffffffff8082111561153b57600080fd5b61154788838901611327565b9350606087013591508082111561155d57600080fd5b5061156a87828801611327565b91505092959194509250565b6000806040838503121561158957600080fd5b82359150602083013567ffffffffffffffff8111156115a757600080fd5b6115b385828601611327565b9150509250929050565b600181811c908216806115d157607f821691505b6020821081036115f157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156116635761166361163b565b500390565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116c657600080fd5b81516108558161128c565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061170c9083018561122c565b82810360a084015261171e818561122c565b9998505050505050505050565b6000821982111561173e5761173e61163b565b500190565b83815260606020820152600061175c606083018561122c565b828103604084015261176e818561122c565b969550505050505056fea2646970667358221220b225f7bf6788f16ed69de47427d467d248b58444ec4a52d27f282b56d3419e1764736f6c634300080d0033",
  "bytecodeSha1": "966a479fd5d95736f80c1e9d20573a9cb788234d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC777",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "16": {},
      "7": {
        "ERC777._approve": {
          "73": [
            14936,
            14956,
            true
          ],
          "74": [
            15016,
            15037,
            true
          ]
        },
        "ERC777._burn": {
          "81": [
            13411,
            13429,
            true
          ],
          "82": [
            13761,
            13782,
            true
          ]
        },
        "ERC777._callTokensReceived": {
          "77": [
            17172,
            17197,
            false
          ],
          "78": [
            17330,
            17349,
            false
          ]
        },
        "ERC777._callTokensToSend": {
          "75": [
            15974,
            15999,
            false
          ]
        },
        "ERC777._move": {
          "76": [
            14375,
            14396,
            true
          ]
        },
        "ERC777._send": {
          "79": [
            12514,
            12532,
            true
          ],
          "80": [
            12589,
            12605,
            true
          ]
        },
        "ERC777.authorizeOperator": {
          "67": [
            5852,
            5876,
            true
          ],
          "68": [
            5932,
            5959,
            false
          ]
        },
        "ERC777.operatorBurn": {
          "72": [
            7627,
            7663,
            true
          ]
        },
        "ERC777.operatorSend": {
          "66": [
            7166,
            7201,
            true
          ]
        },
        "ERC777.revokeOperator": {
          "70": [
            6325,
            6349,
            true
          ],
          "71": [
            6402,
            6429,
            false
          ]
        },
        "ERC777.transfer": {
          "69": [
            4738,
            4761,
            true
          ]
        },
        "ERC777.transferFrom": {
          "63": [
            9030,
            9053,
            true
          ],
          "64": [
            9112,
            9132,
            true
          ],
          "65": [
            9432,
            9458,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "1": {},
      "10": {},
      "11": {
        "Address.isContract": {
          "50": [
            1073,
            1088
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "7": [
            659,
            676
          ]
        }
      },
      "16": {},
      "7": {
        "ERC777._approve": {
          "38": [
            14928,
            14998
          ],
          "39": [
            15008,
            15077
          ],
          "40": [
            15088,
            15124
          ],
          "41": [
            15134,
            15171
          ]
        },
        "ERC777._burn": {
          "56": [
            13403,
            13468
          ],
          "57": [
            13521,
            13594
          ],
          "58": [
            13753,
            13822
          ],
          "59": [
            13856,
            13894
          ],
          "60": [
            13914,
            13936
          ],
          "61": [
            13947,
            14002
          ],
          "62": [
            14012,
            14051
          ]
        },
        "ERC777._callTokensReceived": {
          "48": [
            17213,
            17309
          ],
          "49": [
            17365,
            17471
          ]
        },
        "ERC777._callTokensToSend": {
          "42": [
            16015,
            16106
          ]
        },
        "ERC777._move": {
          "43": [
            14367,
            14440
          ],
          "44": [
            14474,
            14512
          ],
          "45": [
            14532,
            14555
          ],
          "46": [
            14566,
            14627
          ],
          "47": [
            14637,
            14668
          ]
        },
        "ERC777._send": {
          "51": [
            12506,
            12571
          ],
          "52": [
            12581,
            12642
          ],
          "53": [
            12695,
            12764
          ],
          "54": [
            12775,
            12832
          ],
          "55": [
            12843,
            12935
          ]
        },
        "ERC777.allowance": {
          "4": [
            8119,
            8154
          ]
        },
        "ERC777.approve": {
          "8": [
            8436,
            8468
          ],
          "9": [
            8478,
            8489
          ]
        },
        "ERC777.authorizeOperator": {
          "20": [
            5844,
            5917
          ],
          "21": [
            5975,
            6030
          ],
          "22": [
            6061,
            6102
          ],
          "23": [
            6123,
            6170
          ]
        },
        "ERC777.balanceOf": {
          "3": [
            4038,
            4067
          ]
        },
        "ERC777.burn": {
          "37": [
            5280,
            5317
          ]
        },
        "ERC777.decimals": {
          "1": [
            3414,
            3423
          ]
        },
        "ERC777.defaultOperators": {
          "5": [
            6804,
            6833
          ]
        },
        "ERC777.granularity": {
          "2": [
            3625,
            3633
          ]
        },
        "ERC777.isOperatorFor": {
          "30": [
            5503,
            5691
          ]
        },
        "ERC777.name": {
          "6": [
            2987,
            2999
          ]
        },
        "ERC777.operatorBurn": {
          "35": [
            7619,
            7712
          ],
          "36": [
            7722,
            7764
          ]
        },
        "ERC777.operatorSend": {
          "18": [
            7158,
            7250
          ],
          "19": [
            7260,
            7318
          ]
        },
        "ERC777.revokeOperator": {
          "31": [
            6317,
            6387
          ],
          "32": [
            6445,
            6500
          ],
          "33": [
            6531,
            6572
          ],
          "34": [
            6593,
            6637
          ]
        },
        "ERC777.send": {
          "25": [
            4336,
            4390
          ]
        },
        "ERC777.symbol": {
          "24": [
            3143,
            3157
          ]
        },
        "ERC777.totalSupply": {
          "0": [
            3798,
            3817
          ]
        },
        "ERC777.transfer": {
          "26": [
            4730,
            4802
          ],
          "27": [
            4851,
            4907
          ],
          "28": [
            4918,
            4962
          ],
          "29": [
            4973,
            5038
          ]
        },
        "ERC777.transferFrom": {
          "10": [
            9022,
            9094
          ],
          "11": [
            9104,
            9175
          ],
          "12": [
            9227,
            9288
          ],
          "13": [
            9299,
            9348
          ],
          "14": [
            9424,
            9504
          ],
          "15": [
            9514,
            9566
          ],
          "16": [
            9577,
            9647
          ],
          "17": [
            9658,
            9669
          ]
        }
      },
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1820Registry",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC777",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC777Recipient",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111df565b60405180910390f35b610141610312565b6040516101309190611279565b61016161015c3660046112a4565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112d0565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113b4565b61057c565b005b6101756101cf366004611447565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611447565b6105b8565b6101416106d5565b6101bf610213366004611464565b6106e4565b6101616102263660046112a4565b610707565b6101616102393660046114bd565b6107ba565b61017561024c3660046114bd565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611447565b61085c565b6101bf6102983660046114f6565b610977565b6101bf6102ab366004611576565b6109af565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115bd565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115bd565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109ce565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db906115f7565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af5565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c1d565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d8785611651565b6109ce565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d83565b50600195945050505050565b61058633866107ba565b6105a25760405162461bcd60e51b81526004016103db90611668565b6105b185858585856001610f48565b5050505050565b6001600160a01b038116330361061c5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066d573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069c565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115bd565b61070233848484604051806020016040528060008152506001610f48565b505050565b60006001600160a01b03831661072f5760405162461bcd60e51b81526004016103db906115f7565b6000339050610760818286866040518060200160405280600081525060405180602001604052806000815250610af5565b61078c818286866040518060200160405280600081525060405180602001604052806000815250610c1d565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d83565b6000816001600160a01b0316836001600160a01b0316148061082557506001600160a01b03831660009081526005602052604090205460ff16801561082557506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085557506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036108be5760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610912573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561093e565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098133856107ba565b61099d5760405162461bcd60e51b81526004016103db90611668565b6109a98484848461102b565b50505050565b6109ca3383836040518060200160405280600081525061102b565b5050565b6001600160a01b038316610a325760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a945760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a91906116b4565b90506001600160a01b03811615610c1457604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be1908a908a908a908a908a908a906004016116d1565b600060405180830381600087803b158015610bfb57600080fd5b505af1158015610c0f573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c965760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610ccd90849061172b565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d2593929190611743565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7291815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2891906116b4565b90506001600160a01b03811615610ea4576040516223de2960e01b81526001600160a01b038216906223de2990610e6d908b908b908b908b908b908b906004016116d1565b600060405180830381600087803b158015610e8757600080fd5b505af1158015610e9b573d6000803e3d6000fd5b50505050610f3e565b8115610f3e576001600160a01b0386163b15610f3e5760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fa95760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b038516610fff5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b3361100e818888888888610af5565b61101c818888888888610c1d565b610c1481888888888888610d83565b6001600160a01b03841661108c5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b3361109c81866000878787610af5565b6001600160a01b038516600090815260208190526040902054848110156111115760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611140908490611651565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161118e93929190611743565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112205783516001600160a01b0316835292840192918401916001016111fb565b50909695505050505050565b6000815180845260005b8181101561125257602081850181015186830182015201611236565b81811115611264576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610855602083018461122c565b6001600160a01b03811681146112a157600080fd5b50565b600080604083850312156112b757600080fd5b82356112c28161128c565b946020939093013593505050565b6000806000606084860312156112e557600080fd5b83356112f08161128c565b925060208401356113008161128c565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133857600080fd5b813567ffffffffffffffff8082111561135357611353611311565b604051601f8301601f19908116603f0116810190828211818310171561137b5761137b611311565b8160405283815286602085880101111561139457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113cc57600080fd5b85356113d78161128c565b945060208601356113e78161128c565b935060408601359250606086013567ffffffffffffffff8082111561140b57600080fd5b61141789838a01611327565b9350608088013591508082111561142d57600080fd5b5061143a88828901611327565b9150509295509295909350565b60006020828403121561145957600080fd5b81356108558161128c565b60008060006060848603121561147957600080fd5b83356114848161128c565b925060208401359150604084013567ffffffffffffffff8111156114a757600080fd5b6114b386828701611327565b9150509250925092565b600080604083850312156114d057600080fd5b82356114db8161128c565b915060208301356114eb8161128c565b809150509250929050565b6000806000806080858703121561150c57600080fd5b84356115178161128c565b935060208501359250604085013567ffffffffffffffff8082111561153b57600080fd5b61154788838901611327565b9350606087013591508082111561155d57600080fd5b5061156a87828801611327565b91505092959194509250565b6000806040838503121561158957600080fd5b82359150602083013567ffffffffffffffff8111156115a757600080fd5b6115b385828601611327565b9150509250929050565b600181811c908216806115d157607f821691505b6020821081036115f157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156116635761166361163b565b500390565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116c657600080fd5b81516108558161128c565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061170c9083018561122c565b82810360a084015261171e818561122c565b9998505050505050505050565b6000821982111561173e5761173e61163b565b500190565b83815260606020820152600061175c606083018561122c565b828103604084015261176e818561122c565b969550505050505056fea2646970667358221220b225f7bf6788f16ed69de47427d467d248b58444ec4a52d27f282b56d3419e1764736f6c634300080d0033",
  "deployedSourceMap": "1014:17251:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6710:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2908:98;;;:::i;:::-;;;;;;;:::i;8299:197::-;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:72;;1993:22;1975:41;;1963:2;1948:18;8299:197:7;1835:187:72;3701:123:7;3805:12;;3701:123;;;2173:25:72;;;2161:2;2146:18;3701:123:7;2027:177:72;8870:806:7;;;;;;:::i;:::-;;:::i;3348:82::-;;;3421:2;2812:36:72;;2800:2;2785:18;3348:82:7;2670:184:72;3545:95:7;3632:1;3545:95;;6959:366;;;;;;:::i;:::-;;:::i;:::-;;3924:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4045:22:7;4019:7;4045:22;;;;;;;;;;;;3924:150;5765:412;;;;;;:::i;:::-;;:::i;3062:102::-;;;:::i;4204:193::-;;;;;;:::i;:::-;;:::i;4628:439::-;;;;;;:::i;:::-;;:::i;5387:311::-;;;;;;:::i;:::-;;:::i;8010:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8126:19:7;;;8100:7;8126:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;8010:151;6241:403;;;;;;:::i;:::-;;:::i;7446:325::-;;;;;;:::i;:::-;;:::i;5197:127::-;;;;;;:::i;:::-;;:::i;6710:130::-;6776:16;6811:22;6804:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6804:29:7;;;;;;;;;;;;;;;;;;;;;;;6710:130;:::o;2908:98::-;2962:13;2994:5;2987:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2987:12:7;;2908:98;-1:-1:-1;;;;;2908:98:7:o;8299:197::-;8381:4;666:10:12;8436:32:7;666:10:12;8453:7:7;8462:5;8436:8;:32::i;:::-;-1:-1:-1;8485:4:7;;8299:197;-1:-1:-1;;;8299:197:7:o;8870:806::-;9006:4;-1:-1:-1;;;;;9030:23:7;;9022:72;;;;-1:-1:-1;;;9022:72:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9112:20:7;;9104:71;;;;-1:-1:-1;;;9104:71:7;;7910:2:72;9104:71:7;;;7892:21:72;7949:2;7929:18;;;7922:30;7988:34;7968:18;;;7961:62;-1:-1:-1;;;8039:18:72;;;8032:36;8085:19;;9104:71:7;7708:402:72;9104:71:7;9186:15;666:10:12;9186:30:7;;9227:61;9245:7;9254:6;9262:9;9273:6;9227:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9299:49;9305:7;9314:6;9322:9;9333:6;9299:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9386:19:7;;;9359:24;9386:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9432:26;;;;9424:80;;;;-1:-1:-1;;;9424:80:7;;8317:2:72;9424:80:7;;;8299:21:72;8356:2;8336:18;;;8329:30;8395:34;8375:18;;;8368:62;-1:-1:-1;;;8446:18:72;;;8439:39;8495:19;;9424:80:7;8115:405:72;9424:80:7;9514:52;9523:6;9531:7;9540:25;9559:6;9540:16;:25;:::i;:::-;9514:8;:52::i;:::-;9577:70;9597:7;9606:6;9614:9;9625:6;9577:70;;;;;;;;;;;;;;;;;;;;;;;;9641:5;9577:19;:70::i;:::-;-1:-1:-1;9665:4:7;;8870:806;-1:-1:-1;;;;;8870:806:7:o;6959:366::-;7166:35;666:10:12;7194:6:7;7166:13;:35::i;:::-;7158:92;;;;-1:-1:-1;;;7158:92:7;;;;;;;:::i;:::-;7260:58;7266:6;7274:9;7285:6;7293:4;7299:12;7313:4;7260:5;:58::i;:::-;6959:366;;;;;:::o;5765:412::-;-1:-1:-1;;;;;5852:24:7;;666:10:12;5852:24:7;5844:73;;;;-1:-1:-1;;;5844:73:7;;9402:2:72;5844:73:7;;;9384:21:72;9441:2;9421:18;;;9414:30;9480:34;9460:18;;;9453:62;-1:-1:-1;;;9531:18:72;;;9524:34;9575:19;;5844:73:7;9200:400:72;5844:73:7;-1:-1:-1;;;;;5932:27:7;;;;;;:17;:27;;;;;;;;5928:185;;;666:10:12;5982:38:7;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;5982:48:7;;;;;;;;;5975:55;;-1:-1:-1;;5975:55:7;;;5928:185;;;666:10:12;6061:24:7;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6061:34:7;;;;;;;;;:41;;-1:-1:-1;;6061:41:7;6098:4;6061:41;;;5928:185;6128:42;;666:10:12;;-1:-1:-1;;;;;6128:42:7;;;;;;;;5765:412;:::o;3062:102::-;3118:13;3150:7;3143:14;;;;;:::i;4204:193::-;4336:54;666:10:12;4356:9:7;4367:6;4375:4;4336:54;;;;;;;;;;;;4385:4;4336:5;:54::i;:::-;4204:193;;;:::o;4628:439::-;4714:4;-1:-1:-1;;;;;4738:23:7;;4730:72;;;;-1:-1:-1;;;4730:72:7;;;;;;;:::i;:::-;4813:12;666:10:12;4813:27:7;;4851:56;4869:4;4875;4881:9;4892:6;4851:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4918:44;4924:4;4930;4936:9;4947:6;4918:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;4973:65;4993:4;4999;5005:9;5016:6;4973:65;;;;;;;;;;;;;;;;;;;;;;;;5032:5;4973:19;:65::i;5387:311::-;5487:4;5534:11;-1:-1:-1;;;;;5522:23:7;:8;-1:-1:-1;;;;;5522:23:7;;:120;;;-1:-1:-1;;;;;;5562:27:7;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5594:37:7;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5593:48;5562:79;5522:169;;;-1:-1:-1;;;;;;5658:23:7;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5522:169;5503:188;5387:311;-1:-1:-1;;;5387:311:7:o;6241:403::-;666:10:12;-1:-1:-1;;;;;6325:24:7;;;6317:70;;;;-1:-1:-1;;;6317:70:7;;9807:2:72;6317:70:7;;;9789:21:72;9846:2;9826:18;;;9819:30;9885:34;9865:18;;;9858:62;-1:-1:-1;;;9936:18:72;;;9929:31;9977:19;;6317:70:7;9605:397:72;6317:70:7;-1:-1:-1;;;;;6402:27:7;;;;;;:17;:27;;;;;;;;6398:185;;;666:10:12;6445:38:7;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6445:48:7;;;;;;;;;:55;;-1:-1:-1;;6445:55:7;6496:4;6445:55;;;6398:185;;;666:10:12;6538:24:7;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6538:34:7;;;;;;;;;6531:41;;-1:-1:-1;;6531:41:7;;;6398:185;6598:39;;666:10:12;;-1:-1:-1;;;;;6598:39:7;;;;;;;;6241:403;:::o;7446:325::-;7627:36;666:10:12;7655:7:7;7627:13;:36::i;:::-;7619:93;;;;-1:-1:-1;;;7619:93:7;;;;;;;:::i;:::-;7722:42;7728:7;7737:6;7745:4;7751:12;7722:5;:42::i;:::-;7446:325;;;;:::o;5197:127::-;5280:37;666:10:12;5300:6:7;5308:4;5280:37;;;;;;;;;;;;:5;:37::i;:::-;5197:127;;:::o;14813:365::-;-1:-1:-1;;;;;14936:20:7;;14928:70;;;;-1:-1:-1;;;14928:70:7;;10209:2:72;14928:70:7;;;10191:21:72;10248:2;10228:18;;;10221:30;10287:34;10267:18;;;10260:62;-1:-1:-1;;;10338:18:72;;;10331:35;10383:19;;14928:70:7;10007:401:72;14928:70:7;-1:-1:-1;;;;;15016:21:7;;15008:69;;;;-1:-1:-1;;;15008:69:7;;10615:2:72;15008:69:7;;;10597:21:72;10654:2;10634:18;;;10627:30;10693:34;10673:18;;;10666:62;-1:-1:-1;;;10744:18:72;;;10737:33;10787:19;;15008:69:7;10413:399:72;15008:69:7;-1:-1:-1;;;;;15088:19:7;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15139:32;;2173:25:72;;;15139:32:7;;2146:18:72;15139:32:7;;;;;;;14813:365;;;:::o;15651:472::-;15882:78;;-1:-1:-1;;;15882:78:7;;-1:-1:-1;;;;;11009:32:72;;15882:78:7;;;10991:51:72;1417:31:7;11058:18:72;;;11051:34;15860:19:7;;1168:42;;15882:41;;10964:18:72;;15882:78:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15860:100;-1:-1:-1;;;;;;15974:25:7;;;15970:147;;16015:91;;-1:-1:-1;;;16015:91:7;;-1:-1:-1;;;;;16015:39:7;;;;;:91;;16055:8;;16065:4;;16071:2;;16075:6;;16083:8;;16093:12;;16015:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15970:147;15850:273;15651:472;;;;;;:::o;14064:611::-;-1:-1:-1;;;;;14342:15:7;;14320:19;14342:15;;;;;;;;;;;14375:21;;;;14367:73;;;;-1:-1:-1;;;14367:73:7;;12291:2:72;14367:73:7;;;12273:21:72;12330:2;12310:18;;;12303:30;12369:34;12349:18;;;12342:62;-1:-1:-1;;;12420:18:72;;;12413:37;12467:19;;14367:73:7;12089:403:72;14367:73:7;-1:-1:-1;;;;;14474:15:7;;;:9;:15;;;;;;;;;;;14492:20;;;14474:38;;14532:13;;;;;;;;:23;;14506:6;;14474:9;14532:23;;14506:6;;14532:23;:::i;:::-;;;;;;;;14592:2;-1:-1:-1;;;;;14571:56:7;14586:4;-1:-1:-1;;;;;14571:56:7;14576:8;-1:-1:-1;;;;;14571:56:7;;14596:6;14604:8;14614:12;14571:56;;;;;;;;:::i;:::-;;;;;;;;14657:2;-1:-1:-1;;;;;14642:26:7;14651:4;-1:-1:-1;;;;;14642:26:7;;14661:6;14642:26;;;;2173:25:72;;2161:2;2146:18;;2027:177;14642:26:7;;;;;;;;14251:424;14064:611;;;;;;:::o;16812:676::-;17079:79;;-1:-1:-1;;;17079:79:7;;-1:-1:-1;;;;;11009:32:72;;17079:79:7;;;10991:51:72;1514:34:7;11058:18:72;;;11051:34;17057:19:7;;1168:42;;17079:41;;10964:18:72;;17079:79:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17057:101;-1:-1:-1;;;;;;17172:25:7;;;17168:314;;17213:96;;-1:-1:-1;;;17213:96:7;;-1:-1:-1;;;;;17213:44:7;;;;;:96;;17258:8;;17268:4;;17274:2;;17278:6;;17286:8;;17296:12;;17213:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17168:314;;;17330:19;17326:156;;;-1:-1:-1;;;;;17374:13:7;;1034:20:11;1080:8;17365:106:7;;;;-1:-1:-1;;;17365:106:7;;13287:2:72;17365:106:7;;;13269:21:72;13326:2;13306:18;;;13299:30;13365:34;13345:18;;;13338:62;13436:34;13416:18;;;13409:62;-1:-1:-1;;;13487:19:72;;;13480:44;13541:19;;17365:106:7;13085:481:72;17365:106:7;17047:441;16812:676;;;;;;;:::o;12292:650::-;-1:-1:-1;;;;;12514:18:7;;12506:65;;;;-1:-1:-1;;;12506:65:7;;13773:2:72;12506:65:7;;;13755:21:72;13812:2;13792:18;;;13785:30;13851:34;13831:18;;;13824:62;-1:-1:-1;;;13902:18:72;;;13895:32;13944:19;;12506:65:7;13571:398:72;12506:65:7;-1:-1:-1;;;;;12589:16:7;;12581:61;;;;-1:-1:-1;;;12581:61:7;;14176:2:72;12581:61:7;;;14158:21:72;;;14195:18;;;14188:30;14254:34;14234:18;;;14227:62;14306:18;;12581:61:7;13974:356:72;12581:61:7;666:10:12;12695:69:7;666:10:12;12723:4:7;12729:2;12733:6;12741:8;12751:12;12695:17;:69::i;:::-;12775:57;12781:8;12791:4;12797:2;12801:6;12809:8;12819:12;12775:5;:57::i;:::-;12843:92;12863:8;12873:4;12879:2;12883:6;12891:8;12901:12;12915:19;12843;:92::i;13247:811::-;-1:-1:-1;;;;;13411:18:7;;13403:65;;;;-1:-1:-1;;;13403:65:7;;14537:2:72;13403:65:7;;;14519:21:72;14576:2;14556:18;;;14549:30;14615:34;14595:18;;;14588:62;-1:-1:-1;;;14666:18:72;;;14659:32;14708:19;;13403:65:7;14335:398:72;13403:65:7;666:10:12;13521:73:7;666:10:12;13549:4:7;13479:16;13567:6;13575:4;13581:12;13521:17;:73::i;:::-;-1:-1:-1;;;;;13728:15:7;;13706:19;13728:15;;;;;;;;;;;13761:21;;;;13753:69;;;;-1:-1:-1;;;13753:69:7;;14940:2:72;13753:69:7;;;14922:21:72;14979:2;14959:18;;;14952:30;15018:34;14998:18;;;14991:62;-1:-1:-1;;;15069:18:72;;;15062:33;15112:19;;13753:69:7;14738:399:72;13753:69:7;-1:-1:-1;;;;;13856:15:7;;:9;:15;;;;;;;;;;13874:20;;;13856:38;;13914:12;:22;;13888:6;;13856:9;13914:22;;13888:6;;13914:22;:::i;:::-;;;;;;;;13969:4;-1:-1:-1;;;;;13952:50:7;13959:8;-1:-1:-1;;;;;13952:50:7;;13975:6;13983:4;13989:12;13952:50;;;;;;;;:::i;:::-;;;;;;;;14017:34;;2173:25:72;;;14040:1:7;;-1:-1:-1;;;;;14017:34:7;;;;;2161:2:72;2146:18;14017:34:7;;;;;;;13393:665;;13247:811;;;;:::o;14:658:72:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:72;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:72;;14:658;-1:-1:-1;;;;;;14:658:72:o;677:472::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;999:6;996:1;993:13;990:87;;;1065:1;1058:4;1049:6;1044:3;1040:16;1036:27;1029:38;990:87;-1:-1:-1;1131:2:72;1110:15;-1:-1:-1;;1106:29:72;1097:39;;;;1138:4;1093:50;;677:472;-1:-1:-1;;677:472:72:o;1154:220::-;1303:2;1292:9;1285:21;1266:4;1323:45;1364:2;1353:9;1349:18;1341:6;1323:45;:::i;1379:131::-;-1:-1:-1;;;;;1454:31:72;;1444:42;;1434:70;;1500:1;1497;1490:12;1434:70;1379:131;:::o;1515:315::-;1583:6;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1699:9;1686:23;1718:31;1743:5;1718:31;:::i;:::-;1768:5;1820:2;1805:18;;;;1792:32;;-1:-1:-1;;;1515:315:72:o;2209:456::-;2286:6;2294;2302;2355:2;2343:9;2334:7;2330:23;2326:32;2323:52;;;2371:1;2368;2361:12;2323:52;2410:9;2397:23;2429:31;2454:5;2429:31;:::i;:::-;2479:5;-1:-1:-1;2536:2:72;2521:18;;2508:32;2549:33;2508:32;2549:33;:::i;:::-;2209:456;;2601:7;;-1:-1:-1;;;2655:2:72;2640:18;;;;2627:32;;2209:456::o;2859:127::-;2920:10;2915:3;2911:20;2908:1;2901:31;2951:4;2948:1;2941:15;2975:4;2972:1;2965:15;2991:718;3033:5;3086:3;3079:4;3071:6;3067:17;3063:27;3053:55;;3104:1;3101;3094:12;3053:55;3140:6;3127:20;3166:18;3203:2;3199;3196:10;3193:36;;;3209:18;;:::i;:::-;3284:2;3278:9;3252:2;3338:13;;-1:-1:-1;;3334:22:72;;;3358:2;3330:31;3326:40;3314:53;;;3382:18;;;3402:22;;;3379:46;3376:72;;;3428:18;;:::i;:::-;3468:10;3464:2;3457:22;3503:2;3495:6;3488:18;3549:3;3542:4;3537:2;3529:6;3525:15;3521:26;3518:35;3515:55;;;3566:1;3563;3556:12;3515:55;3630:2;3623:4;3615:6;3611:17;3604:4;3596:6;3592:17;3579:54;3677:1;3670:4;3665:2;3657:6;3653:15;3649:26;3642:37;3697:6;3688:15;;;;;;2991:718;;;;:::o;3714:885::-;3827:6;3835;3843;3851;3859;3912:3;3900:9;3891:7;3887:23;3883:33;3880:53;;;3929:1;3926;3919:12;3880:53;3968:9;3955:23;3987:31;4012:5;3987:31;:::i;:::-;4037:5;-1:-1:-1;4094:2:72;4079:18;;4066:32;4107:33;4066:32;4107:33;:::i;:::-;4159:7;-1:-1:-1;4213:2:72;4198:18;;4185:32;;-1:-1:-1;4268:2:72;4253:18;;4240:32;4291:18;4321:14;;;4318:34;;;4348:1;4345;4338:12;4318:34;4371:49;4412:7;4403:6;4392:9;4388:22;4371:49;:::i;:::-;4361:59;;4473:3;4462:9;4458:19;4445:33;4429:49;;4503:2;4493:8;4490:16;4487:36;;;4519:1;4516;4509:12;4487:36;;4542:51;4585:7;4574:8;4563:9;4559:24;4542:51;:::i;:::-;4532:61;;;3714:885;;;;;;;;:::o;4604:247::-;4663:6;4716:2;4704:9;4695:7;4691:23;4687:32;4684:52;;;4732:1;4729;4722:12;4684:52;4771:9;4758:23;4790:31;4815:5;4790:31;:::i;4856:523::-;4942:6;4950;4958;5011:2;4999:9;4990:7;4986:23;4982:32;4979:52;;;5027:1;5024;5017:12;4979:52;5066:9;5053:23;5085:31;5110:5;5085:31;:::i;:::-;5135:5;-1:-1:-1;5187:2:72;5172:18;;5159:32;;-1:-1:-1;5242:2:72;5227:18;;5214:32;5269:18;5258:30;;5255:50;;;5301:1;5298;5291:12;5255:50;5324:49;5365:7;5356:6;5345:9;5341:22;5324:49;:::i;:::-;5314:59;;;4856:523;;;;;:::o;5384:388::-;5452:6;5460;5513:2;5501:9;5492:7;5488:23;5484:32;5481:52;;;5529:1;5526;5519:12;5481:52;5568:9;5555:23;5587:31;5612:5;5587:31;:::i;:::-;5637:5;-1:-1:-1;5694:2:72;5679:18;;5666:32;5707:33;5666:32;5707:33;:::i;:::-;5759:7;5749:17;;;5384:388;;;;;:::o;5777:743::-;5881:6;5889;5897;5905;5958:3;5946:9;5937:7;5933:23;5929:33;5926:53;;;5975:1;5972;5965:12;5926:53;6014:9;6001:23;6033:31;6058:5;6033:31;:::i;:::-;6083:5;-1:-1:-1;6135:2:72;6120:18;;6107:32;;-1:-1:-1;6190:2:72;6175:18;;6162:32;6213:18;6243:14;;;6240:34;;;6270:1;6267;6260:12;6240:34;6293:49;6334:7;6325:6;6314:9;6310:22;6293:49;:::i;:::-;6283:59;;6395:2;6384:9;6380:18;6367:32;6351:48;;6424:2;6414:8;6411:16;6408:36;;;6440:1;6437;6430:12;6408:36;;6463:51;6506:7;6495:8;6484:9;6480:24;6463:51;:::i;:::-;6453:61;;;5777:743;;;;;;;:::o;6525:388::-;6602:6;6610;6663:2;6651:9;6642:7;6638:23;6634:32;6631:52;;;6679:1;6676;6669:12;6631:52;6715:9;6702:23;6692:33;;6776:2;6765:9;6761:18;6748:32;6803:18;6795:6;6792:30;6789:50;;;6835:1;6832;6825:12;6789:50;6858:49;6899:7;6890:6;6879:9;6875:22;6858:49;:::i;:::-;6848:59;;;6525:388;;;;;:::o;6918:380::-;6997:1;6993:12;;;;7040;;;7061:61;;7115:4;7107:6;7103:17;7093:27;;7061:61;7168:2;7160:6;7157:14;7137:18;7134:38;7131:161;;7214:10;7209:3;7205:20;7202:1;7195:31;7249:4;7246:1;7239:15;7277:4;7274:1;7267:15;7131:161;;6918:380;;;:::o;7303:400::-;7505:2;7487:21;;;7544:2;7524:18;;;7517:30;7583:34;7578:2;7563:18;;7556:62;-1:-1:-1;;;7649:2:72;7634:18;;7627:34;7693:3;7678:19;;7303:400::o;8525:127::-;8586:10;8581:3;8577:20;8574:1;8567:31;8617:4;8614:1;8607:15;8641:4;8638:1;8631:15;8657:125;8697:4;8725:1;8722;8719:8;8716:34;;;8730:18;;:::i;:::-;-1:-1:-1;8767:9:72;;8657:125::o;8787:408::-;8989:2;8971:21;;;9028:2;9008:18;;;9001:30;9067:34;9062:2;9047:18;;9040:62;-1:-1:-1;;;9133:2:72;9118:18;;9111:42;9185:3;9170:19;;8787:408::o;11096:251::-;11166:6;11219:2;11207:9;11198:7;11194:23;11190:32;11187:52;;;11235:1;11232;11225:12;11187:52;11267:9;11261:16;11286:31;11311:5;11286:31;:::i;11352:732::-;-1:-1:-1;;;;;11695:15:72;;;11677:34;;11747:15;;;11742:2;11727:18;;11720:43;11799:15;;11794:2;11779:18;;11772:43;11846:2;11831:18;;11824:34;;;11895:3;11889;11874:19;;11867:32;;;11620:4;;11922:46;;11948:19;;11940:6;11922:46;:::i;:::-;12017:9;12009:6;12005:22;11999:3;11988:9;11984:19;11977:51;12045:33;12071:6;12063;12045:33;:::i;:::-;12037:41;11352:732;-1:-1:-1;;;;;;;;;11352:732:72:o;12497:128::-;12537:3;12568:1;12564:6;12561:1;12558:13;12555:39;;;12574:18;;:::i;:::-;-1:-1:-1;12610:9:72;;12497:128::o;12630:450::-;12851:6;12840:9;12833:25;12894:2;12889;12878:9;12874:18;12867:30;12814:4;12920:45;12961:2;12950:9;12946:18;12938:6;12920:45;:::i;:::-;13013:9;13005:6;13001:22;12996:2;12985:9;12981:18;12974:50;13041:33;13067:6;13059;13041:33;:::i;:::-;13033:41;12630:450;-1:-1:-1;;;;;;12630:450:72:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "constructor": {
        "details": "`defaultOperators` may be an empty array."
      },
      "decimals()": {
        "details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}. This implementation always returns `1`."
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
      }
    },
    "version": 1
  },
  "offset": [
    1014,
    18265
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x15BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x9CE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x47A DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x4A6 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH2 0x542 DUP7 DUP4 PUSH2 0x53D DUP8 DUP6 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x570 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD83 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x586 CALLER DUP7 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x69C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x702 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x760 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x78C DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1D JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x825 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x825 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x855 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x912 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x93E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x981 CALLER DUP6 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x9A9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x102B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9CA CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x102B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBE1 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCCD SWAP1 DUP5 SWAP1 PUSH2 0x172B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD25 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD72 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE6D SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF3E JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF3E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x100E DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x101C DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC1D JUMP JUMPDEST PUSH2 0xC14 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x109C DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1140 SWAP1 DUP5 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x118E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1220 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11FB JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1236 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x855 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12C2 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12F0 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1300 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x137B JUMPI PUSH2 0x137B PUSH2 0x1311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13D7 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13E7 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1417 DUP10 DUP4 DUP11 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x142D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143A DUP9 DUP3 DUP10 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x855 DUP2 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1484 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B3 DUP7 DUP3 DUP8 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14DB DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14EB DUP2 PUSH2 0x128C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x150C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1517 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x153B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1547 DUP9 DUP4 DUP10 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x155D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156A DUP8 DUP3 DUP9 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1663 PUSH2 0x163B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x855 DUP2 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x170C SWAP1 DUP4 ADD DUP6 PUSH2 0x122C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x171E DUP2 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x173E JUMPI PUSH2 0x173E PUSH2 0x163B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x175C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x122C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x176E DUP2 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0x25 0xF7 0xBF PUSH8 0x88F16ED69DE47427 0xD4 PUSH8 0xD248B58444EC4A52 0xD2 PUSH32 0x282B56D3419E1764736F6C634300080D00330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x959B8C3F"
    },
    "38": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD95B6371"
    },
    "49": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD95B6371"
    },
    "60": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22B"
    },
    "64": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23E"
    },
    "75": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFAD8B32A"
    },
    "82": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x277"
    },
    "86": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFC673C4F"
    },
    "93": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28A"
    },
    "97": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFE9D9303"
    },
    "104": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29D"
    },
    "108": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x959B8C3F"
    },
    "120": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EA"
    },
    "124": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "135": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9BD9BBC6"
    },
    "142": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x205"
    },
    "146": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "154": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x218"
    },
    "157": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "158": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "161": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "7"
    },
    "162": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "GT",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x183"
    },
    "184": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x196"
    },
    "195": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x556F0DC7"
    },
    "202": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5"
    },
    "206": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x62AD1B83"
    },
    "213": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "214": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AC"
    },
    "217": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "218": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "219": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "225": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C1"
    },
    "228": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "229": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "232": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "7"
    },
    "233": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "235": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E48538"
    },
    "240": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "246": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x139"
    },
    "255": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "256": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "257": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "263": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14E"
    },
    "266": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "267": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "268": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "7"
    },
    "274": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x171"
    },
    "277": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "278": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "279": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "7"
    },
    "283": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "284": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x123"
    },
    "287": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B0"
    },
    "290": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMP",
      "path": "7"
    },
    "291": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "292": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "294": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "295": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x130"
    },
    "298": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "299": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "300": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11DF"
    },
    "303": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMP",
      "path": "7"
    },
    "304": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "305": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "307": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "308": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "DUP1",
      "path": "7"
    },
    "309": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "310": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SUB",
      "path": "7"
    },
    "311": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "312": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "RETURN",
      "path": "7"
    },
    "313": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "314": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x141"
    },
    "317": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x312"
    },
    "320": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMP",
      "path": "7"
    },
    "321": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "322": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "324": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "325": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x130"
    },
    "328": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "329": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "330": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1279"
    },
    "333": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMP",
      "path": "7"
    },
    "334": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "335": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "338": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15C"
    },
    "341": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "342": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "344": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12A4"
    },
    "347": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMP",
      "path": "7"
    },
    "348": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "349": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39B"
    },
    "352": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMP",
      "path": "7"
    },
    "353": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "354": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x130"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "370": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3805,
        3817
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x1"
    },
    "372": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3805,
        3817
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "373": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "374": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "377": {
      "op": "SWAP1"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "MSTORE"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x130"
    },
    "386": {
      "op": "JUMP"
    },
    "387": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "391": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x191"
    },
    "394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "395": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12D0"
    },
    "400": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMP",
      "path": "7"
    },
    "401": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "402": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B3"
    },
    "405": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMP",
      "path": "7"
    },
    "406": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "407": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "409": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "410": {
      "fn": "ERC777.decimals",
      "offset": [
        3421,
        3423
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x12"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x130"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "ERC777.granularity",
      "offset": [
        3545,
        3640
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "422": {
      "fn": "ERC777.granularity",
      "offset": [
        3632,
        3633
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x1"
    },
    "424": {
      "fn": "ERC777.granularity",
      "offset": [
        3545,
        3640
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "427": {
      "fn": "ERC777.granularity",
      "offset": [
        3545,
        3640
      ],
      "op": "JUMP",
      "path": "7"
    },
    "428": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BF"
    },
    "432": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BA"
    },
    "435": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "436": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13B4"
    },
    "441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMP",
      "path": "7"
    },
    "442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57C"
    },
    "446": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMP",
      "path": "7"
    },
    "447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "STOP",
      "path": "7"
    },
    "449": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "450": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "453": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF"
    },
    "456": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "457": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "459": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1447"
    },
    "462": {
      "fn": "ERC777.balanceOf",
      "jump": "i",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "463": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "AND",
      "path": "7",
      "statement": 3
    },
    "473": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4019,
        4026
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "475": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "476": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "DUP2",
      "path": "7"
    },
    "477": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "478": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "480": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "DUP2",
      "path": "7"
    },
    "481": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "482": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "483": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "486": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "487": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "488": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "489": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "490": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "491": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BF"
    },
    "494": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F8"
    },
    "497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "500": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1447"
    },
    "503": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "504": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "505": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B8"
    },
    "508": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "509": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "510": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x141"
    },
    "513": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D5"
    },
    "516": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3062,
        3164
      ],
      "op": "JUMP",
      "path": "7"
    },
    "517": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "518": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BF"
    },
    "521": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x213"
    },
    "524": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "525": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "527": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1464"
    },
    "530": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMP",
      "path": "7"
    },
    "531": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "532": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E4"
    },
    "535": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMP",
      "path": "7"
    },
    "536": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "537": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "540": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x226"
    },
    "543": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "544": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "546": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12A4"
    },
    "549": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "550": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "551": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x707"
    },
    "554": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "555": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "556": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "559": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x239"
    },
    "562": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "563": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "565": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14BD"
    },
    "568": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMP",
      "path": "7"
    },
    "569": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "570": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7BA"
    },
    "573": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMP",
      "path": "7"
    },
    "574": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "575": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "578": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24C"
    },
    "581": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "582": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "584": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14BD"
    },
    "587": {
      "fn": "ERC777.allowance",
      "jump": "i",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMP",
      "path": "7"
    },
    "588": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 4
    },
    "598": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP3",
      "path": "7"
    },
    "599": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "AND",
      "path": "7"
    },
    "600": {
      "fn": "ERC777.allowance",
      "offset": [
        8100,
        8107
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "603": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP2",
      "path": "7"
    },
    "604": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "605": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "607": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "610": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP2",
      "path": "7"
    },
    "611": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "612": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "614": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP1",
      "path": "7"
    },
    "615": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP4",
      "path": "7"
    },
    "616": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "617": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "618": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "619": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "620": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "AND",
      "path": "7"
    },
    "621": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "DUP3",
      "path": "7"
    },
    "622": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "623": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "624": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "625": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "626": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "627": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "628": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "629": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "630": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMP",
      "path": "7"
    },
    "631": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "632": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BF"
    },
    "635": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x285"
    },
    "638": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "639": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "641": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1447"
    },
    "644": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "645": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "646": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x85C"
    },
    "649": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "650": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "651": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BF"
    },
    "654": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x298"
    },
    "657": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "658": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "660": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F6"
    },
    "663": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMP",
      "path": "7"
    },
    "664": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "665": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x977"
    },
    "668": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMP",
      "path": "7"
    },
    "669": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "670": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BF"
    },
    "673": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AB"
    },
    "676": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "677": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "679": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1576"
    },
    "682": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMP",
      "path": "7"
    },
    "683": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "684": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9AF"
    },
    "687": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMP",
      "path": "7"
    },
    "688": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "689": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6776,
        6792
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6811,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x4"
    },
    "693": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "7"
    },
    "694": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "695": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "7"
    },
    "696": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "698": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MUL",
      "path": "7"
    },
    "699": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "701": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "7"
    },
    "702": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "705": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "706": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "707": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "7"
    },
    "708": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "711": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "7"
    },
    "712": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "713": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "714": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "715": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "716": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "717": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "718": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "720": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "7"
    },
    "721": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP3",
      "path": "7"
    },
    "722": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "7"
    },
    "723": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "724": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "7"
    },
    "725": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "726": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x308"
    },
    "729": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "730": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MUL",
      "path": "7"
    },
    "733": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP3",
      "path": "7"
    },
    "734": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "7"
    },
    "735": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "736": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "737": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "740": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "742": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "744": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "745": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "746": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "747": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "748": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "AND",
      "path": "7"
    },
    "758": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "759": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "760": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "762": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "763": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "764": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "7"
    },
    "765": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "766": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "7"
    },
    "769": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "7"
    },
    "770": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP4",
      "path": "7"
    },
    "771": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "GT",
      "path": "7"
    },
    "772": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EA"
    },
    "775": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "776": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "777": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "7"
    },
    "778": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "7"
    },
    "779": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "7"
    },
    "780": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "7"
    },
    "781": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "7"
    },
    "782": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "783": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "7"
    },
    "784": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "785": {
      "fn": "ERC777.defaultOperators",
      "jump": "o",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMP",
      "path": "7"
    },
    "786": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "787": {
      "fn": "ERC777.name",
      "offset": [
        2962,
        2975
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "789": {
      "fn": "ERC777.name",
      "offset": [
        2994,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x2"
    },
    "791": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "792": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "793": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x321"
    },
    "796": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "797": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15BD"
    },
    "800": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMP",
      "path": "7"
    },
    "801": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "802": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "803": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "805": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "806": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "809": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "810": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DIV",
      "path": "7"
    },
    "811": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MUL",
      "path": "7"
    },
    "812": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "815": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "817": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "818": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "819": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "7"
    },
    "820": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "821": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "824": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "825": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "826": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "827": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "828": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "7"
    },
    "829": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "7"
    },
    "830": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "831": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "833": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "834": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP3",
      "path": "7"
    },
    "835": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "836": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "837": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34D"
    },
    "840": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "841": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15BD"
    },
    "844": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMP",
      "path": "7"
    },
    "845": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "846": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "847": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "848": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x308"
    },
    "851": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "852": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "853": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "855": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "LT",
      "path": "7"
    },
    "856": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36F"
    },
    "859": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "860": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "863": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "864": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP4",
      "path": "7"
    },
    "865": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "866": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DIV",
      "path": "7"
    },
    "867": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MUL",
      "path": "7"
    },
    "868": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP4",
      "path": "7"
    },
    "869": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "870": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "871": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "874": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "875": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x308"
    },
    "878": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMP",
      "path": "7"
    },
    "879": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "880": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP3",
      "path": "7"
    },
    "881": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "882": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "883": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "884": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "887": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "889": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "892": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "893": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "894": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "7"
    },
    "895": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "896": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "7"
    },
    "897": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "898": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "899": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "901": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "902": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "903": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "905": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "7"
    },
    "906": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "7"
    },
    "907": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP4",
      "path": "7"
    },
    "908": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "GT",
      "path": "7"
    },
    "909": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x37D"
    },
    "912": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "915": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "916": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "ERC777.name",
      "jump": "o",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMP",
      "path": "7"
    },
    "923": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "924": {
      "fn": "ERC777.approve",
      "offset": [
        8381,
        8385
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 7
    },
    "927": {
      "fn": "ERC777.approve",
      "offset": [
        8436,
        8468
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 8,
      "value": "0x3A9"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "12"
    },
    "931": {
      "fn": "ERC777.approve",
      "offset": [
        8453,
        8460
      ],
      "op": "DUP6",
      "path": "7"
    },
    "932": {
      "fn": "ERC777.approve",
      "offset": [
        8462,
        8467
      ],
      "op": "DUP6",
      "path": "7"
    },
    "933": {
      "fn": "ERC777.approve",
      "offset": [
        8436,
        8444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9CE"
    },
    "936": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8436,
        8468
      ],
      "op": "JUMP",
      "path": "7"
    },
    "937": {
      "fn": "ERC777.approve",
      "offset": [
        8436,
        8468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "ERC777.approve",
      "offset": [
        8485,
        8489
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0x1"
    },
    "941": {
      "fn": "ERC777.approve",
      "offset": [
        8485,
        8489
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "942": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "ERC777.approve",
      "jump": "o",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMP",
      "path": "7"
    },
    "947": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "948": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9006,
        9010
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9030,
        9053
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 10
    },
    "959": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9030,
        9053
      ],
      "op": "AND",
      "path": "7"
    },
    "960": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E4"
    },
    "963": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "964": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "966": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "975": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "976": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "978": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "ADD",
      "path": "7"
    },
    "979": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "982": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "983": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15F7"
    },
    "986": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMP",
      "path": "7"
    },
    "987": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "988": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "990": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "991": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "992": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "993": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SUB",
      "path": "7"
    },
    "994": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "995": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "996": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9112,
        9132
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 11
    },
    "1006": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9112,
        9132
      ],
      "op": "AND",
      "path": "7"
    },
    "1007": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x449"
    },
    "1010": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1011": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1022": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1025": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1027": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1028": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "ADD",
      "path": "7"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "1096": {
      "op": "JUMP"
    },
    "1097": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1098": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9186,
        9201
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1100": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1101": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9186,
        9216
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1102": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9186,
        9216
      ],
      "op": "POP",
      "path": "7"
    },
    "1103": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x47A"
    },
    "1106": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9252
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1107": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9254,
        9260
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1108": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9262,
        9271
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1109": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9273,
        9279
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1110": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1112": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1113": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1114": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1116": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "ADD",
      "path": "7"
    },
    "1117": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1119": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1120": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1121": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1123": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1124": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1125": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "POP",
      "path": "7"
    },
    "1126": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1128": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1129": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1130": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1132": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "ADD",
      "path": "7"
    },
    "1133": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1135": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1136": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1137": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1139": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1140": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1141": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "POP",
      "path": "7"
    },
    "1142": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9244
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAF5"
    },
    "1145": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9227,
        9288
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1146": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1147": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 13,
      "value": "0x4A6"
    },
    "1150": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9305,
        9312
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1151": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9314,
        9320
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1152": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9322,
        9331
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1153": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9333,
        9339
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1154": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1156": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1157": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1158": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1160": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "ADD",
      "path": "7"
    },
    "1161": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1163": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1164": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1165": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1168": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1169": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "POP",
      "path": "7"
    },
    "1170": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1172": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1173": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1174": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1176": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "ADD",
      "path": "7"
    },
    "1177": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1179": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1180": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1181": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1183": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1184": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1185": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "POP",
      "path": "7"
    },
    "1186": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9304
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1D"
    },
    "1189": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9299,
        9348
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1190": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1197": {
      "op": "SHL"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1200": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1201": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "AND",
      "path": "7"
    },
    "1202": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9359,
        9383
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1204": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1205": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1206": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1207": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1209": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1211": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1212": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1213": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1214": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1216": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1217": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1218": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1219": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1220": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1221": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "AND",
      "path": "7"
    },
    "1222": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1223": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1224": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1225": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1226": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1227": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1228": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1229": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 14
    },
    "1230": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1231": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "LT",
      "path": "7"
    },
    "1232": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1233": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x52E"
    },
    "1236": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1237": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1239": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1248": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1253": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1254": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "ADD",
      "path": "7"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1298": {
      "op": "DUP3"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH9",
      "value": "0x616C6C6F77616E6365"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "1325": {
      "op": "JUMP"
    },
    "1326": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1327": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9514,
        9566
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 15,
      "value": "0x542"
    },
    "1330": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9523,
        9529
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1331": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9531,
        9538
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1332": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9565
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x53D"
    },
    "1335": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9559,
        9565
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1336": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9556
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1337": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9565
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1651"
    },
    "1340": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9540,
        9565
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1341": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9565
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1342": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9514,
        9522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9CE"
    },
    "1345": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9514,
        9566
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1346": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9514,
        9566
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1347": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 16,
      "value": "0x570"
    },
    "1350": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9597,
        9604
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1351": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9606,
        9612
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1352": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9614,
        9623
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1353": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9625,
        9631
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1354": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1356": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1357": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1358": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1360": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "ADD",
      "path": "7"
    },
    "1361": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1363": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1364": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1365": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1367": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1368": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1369": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "POP",
      "path": "7"
    },
    "1370": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1372": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1373": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1374": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1376": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "ADD",
      "path": "7"
    },
    "1377": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1379": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1380": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1381": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1383": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1384": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1385": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "POP",
      "path": "7"
    },
    "1386": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9641,
        9646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9596
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD83"
    },
    "1391": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9577,
        9647
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1392": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9665,
        9669
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x1"
    },
    "1396": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9665,
        9669
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "ERC777.transferFrom",
      "jump": "o",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1404": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1405": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7166,
        7201
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 18,
      "value": "0x586"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1409": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7194,
        7200
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1410": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7166,
        7179
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7BA"
    },
    "1413": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7166,
        7201
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1414": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7166,
        7201
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1415": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5A2"
    },
    "1418": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1419": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1421": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1430": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1431": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1433": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "ADD",
      "path": "7"
    },
    "1434": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "1437": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1668"
    },
    "1441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7158,
        7250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7260,
        7318
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0x5B1"
    },
    "1446": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7266,
        7272
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7274,
        7283
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7285,
        7291
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1449": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7293,
        7297
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1450": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7299,
        7311
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1451": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7313,
        7317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1453": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7260,
        7265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF48"
    },
    "1456": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7260,
        7318
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1457": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7260,
        7318
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1458": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "7"
    },
    "1459": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "7"
    },
    "1460": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "7"
    },
    "1461": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "7"
    },
    "1462": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "7"
    },
    "1463": {
      "fn": "ERC777.operatorSend",
      "jump": "o",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1464": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "op": "SUB"
    },
    "1473": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5852,
        5876
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 20
    },
    "1474": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5852,
        5876
      ],
      "op": "AND",
      "path": "7"
    },
    "1475": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1476": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5852,
        5876
      ],
      "op": "SUB",
      "path": "7"
    },
    "1477": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x61C"
    },
    "1480": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1481": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1483": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1492": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1495": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "ADD",
      "path": "7"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1502": {
      "op": "DUP1"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617574686F72697A696E672073656C66206173206F706572"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1541": {
      "op": "DUP3"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "op": "MSTORE"
    },
    "1544": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1551": {
      "op": "SHL"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1554": {
      "op": "DUP3"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "MSTORE"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "1563": {
      "op": "JUMP"
    },
    "1564": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "op": "SUB"
    },
    "1573": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1574": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "AND",
      "path": "7"
    },
    "1575": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1577": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1578": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1579": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1580": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5949
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1582": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1584": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1585": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1587": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1588": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1589": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1590": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1592": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "AND",
      "path": "7"
    },
    "1593": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1594": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x66D"
    },
    "1597": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1598": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1599": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x0"
    },
    "1601": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1602": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1603": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1604": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1606": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1608": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1609": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1610": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1611": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1613": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1614": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1615": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "SUB"
    },
    "1624": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1625": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "AND",
      "path": "7"
    },
    "1626": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1627": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1628": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1629": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1630": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1631": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1632": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1633": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1634": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1637": {
      "op": "NOT"
    },
    "1638": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "AND",
      "path": "7"
    },
    "1639": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1640": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1641": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x69C"
    },
    "1644": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1645": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1646": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1647": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0x0"
    },
    "1649": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1650": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1651": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1652": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6071
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1654": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1656": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1657": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1658": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1659": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1661": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1662": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1663": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "op": "SUB"
    },
    "1672": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1673": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "AND",
      "path": "7"
    },
    "1674": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1675": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1676": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1677": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1678": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1679": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1680": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1681": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1682": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1685": {
      "op": "NOT"
    },
    "1686": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "AND",
      "path": "7"
    },
    "1687": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6098,
        6102
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1689": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "OR",
      "path": "7"
    },
    "1690": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1691": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1692": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1693": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0x40"
    },
    "1695": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1696": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1697": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1707": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "AND",
      "path": "7"
    },
    "1708": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1709": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
    },
    "1742": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1743": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1745": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1746": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "LOG3",
      "path": "7"
    },
    "1747": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "POP",
      "path": "7"
    },
    "1748": {
      "fn": "ERC777.authorizeOperator",
      "jump": "o",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1749": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1750": {
      "fn": "ERC777.symbol",
      "offset": [
        3118,
        3131
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1752": {
      "fn": "ERC777.symbol",
      "offset": [
        3150,
        3157
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x3"
    },
    "1754": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1755": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1756": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x321"
    },
    "1759": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1760": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15BD"
    },
    "1763": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3143,
        3157
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1764": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1765": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 25,
      "value": "0x702"
    },
    "1768": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1769": {
      "fn": "ERC777.send",
      "offset": [
        4356,
        4365
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1770": {
      "fn": "ERC777.send",
      "offset": [
        4367,
        4373
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1771": {
      "fn": "ERC777.send",
      "offset": [
        4375,
        4379
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1772": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1774": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1775": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1776": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1778": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "ADD",
      "path": "7"
    },
    "1779": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1781": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1782": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1783": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1785": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1786": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1787": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "POP",
      "path": "7"
    },
    "1788": {
      "fn": "ERC777.send",
      "offset": [
        4385,
        4389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1790": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4341
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF48"
    },
    "1793": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4336,
        4390
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1794": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1795": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "POP",
      "path": "7"
    },
    "1796": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "POP",
      "path": "7"
    },
    "1797": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "POP",
      "path": "7"
    },
    "1798": {
      "fn": "ERC777.send",
      "jump": "o",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1799": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1800": {
      "fn": "ERC777.transfer",
      "offset": [
        4714,
        4718
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "SUB"
    },
    "1810": {
      "fn": "ERC777.transfer",
      "offset": [
        4738,
        4761
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 26
    },
    "1811": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4738,
        4761
      ],
      "op": "AND",
      "path": "7"
    },
    "1812": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x72F"
    },
    "1815": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1816": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1818": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1827": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1828": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1830": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "ADD",
      "path": "7"
    },
    "1831": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "1834": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1835": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15F7"
    },
    "1838": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4730,
        4802
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1839": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1840": {
      "fn": "ERC777.transfer",
      "offset": [
        4813,
        4825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1842": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1843": {
      "fn": "ERC777.transfer",
      "offset": [
        4813,
        4840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1844": {
      "fn": "ERC777.transfer",
      "offset": [
        4813,
        4840
      ],
      "op": "POP",
      "path": "7"
    },
    "1845": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 27,
      "value": "0x760"
    },
    "1848": {
      "fn": "ERC777.transfer",
      "offset": [
        4869,
        4873
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1849": {
      "fn": "ERC777.transfer",
      "offset": [
        4875,
        4879
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1850": {
      "fn": "ERC777.transfer",
      "offset": [
        4881,
        4890
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1851": {
      "fn": "ERC777.transfer",
      "offset": [
        4892,
        4898
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1852": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1854": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1855": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1856": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1858": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "ADD",
      "path": "7"
    },
    "1859": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1861": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1862": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1863": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1865": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1866": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1867": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "POP",
      "path": "7"
    },
    "1868": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1870": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1871": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1872": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1874": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "ADD",
      "path": "7"
    },
    "1875": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1877": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1878": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1879": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1881": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1882": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1883": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "POP",
      "path": "7"
    },
    "1884": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4868
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAF5"
    },
    "1887": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4851,
        4907
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1888": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1889": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 28,
      "value": "0x78C"
    },
    "1892": {
      "fn": "ERC777.transfer",
      "offset": [
        4924,
        4928
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1893": {
      "fn": "ERC777.transfer",
      "offset": [
        4930,
        4934
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1894": {
      "fn": "ERC777.transfer",
      "offset": [
        4936,
        4945
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1895": {
      "fn": "ERC777.transfer",
      "offset": [
        4947,
        4953
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1896": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1898": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1899": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1900": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1902": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "ADD",
      "path": "7"
    },
    "1903": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1905": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1906": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1907": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1909": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1910": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1911": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "POP",
      "path": "7"
    },
    "1912": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1914": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1915": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1916": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1918": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "ADD",
      "path": "7"
    },
    "1919": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1921": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1922": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1923": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1925": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1926": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1927": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "POP",
      "path": "7"
    },
    "1928": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4923
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1D"
    },
    "1931": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4918,
        4962
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1932": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1933": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 29,
      "value": "0x3A9"
    },
    "1936": {
      "fn": "ERC777.transfer",
      "offset": [
        4993,
        4997
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1937": {
      "fn": "ERC777.transfer",
      "offset": [
        4999,
        5003
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1938": {
      "fn": "ERC777.transfer",
      "offset": [
        5005,
        5014
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1939": {
      "fn": "ERC777.transfer",
      "offset": [
        5016,
        5022
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1940": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1942": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1943": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1944": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1946": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "ADD",
      "path": "7"
    },
    "1947": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1949": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1950": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1951": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1953": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1954": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1955": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "POP",
      "path": "7"
    },
    "1956": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1958": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1959": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1960": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1962": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "ADD",
      "path": "7"
    },
    "1963": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1965": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1966": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1967": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1969": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1970": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1971": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "POP",
      "path": "7"
    },
    "1972": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1974": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        4992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD83"
    },
    "1977": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1978": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1979": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5487,
        5491
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1981": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5534,
        5545
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 30
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5545
      ],
      "op": "AND",
      "path": "7"
    },
    "1991": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5530
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1998": {
      "op": "SHL"
    },
    "1999": {
      "op": "SUB"
    },
    "2000": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5545
      ],
      "op": "AND",
      "path": "7"
    },
    "2001": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5545
      ],
      "op": "EQ",
      "path": "7"
    },
    "2002": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5642
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2003": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5642
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x825"
    },
    "2006": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5642
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2014": {
      "op": "SHL"
    },
    "2015": {
      "op": "SUB"
    },
    "2016": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2017": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "AND",
      "path": "7"
    },
    "2018": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2020": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2021": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2022": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2023": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5579
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2025": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2027": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2028": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2030": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2031": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2032": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2033": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2035": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "AND",
      "path": "7"
    },
    "2036": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2037": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2038": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x825"
    },
    "2041": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2042": {
      "op": "POP"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2052": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2053": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "AND",
      "path": "7"
    },
    "2054": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2056": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2057": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2058": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2059": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5618
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2061": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2063": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2064": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2065": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2066": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2069": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2070": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2071": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2072": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2073": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "AND",
      "path": "7"
    },
    "2074": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2075": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2076": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2077": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2078": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2079": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2080": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2081": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2083": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "AND",
      "path": "7"
    },
    "2084": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5593,
        5641
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2085": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2086": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2087": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x855"
    },
    "2090": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2098": {
      "op": "SHL"
    },
    "2099": {
      "op": "SUB"
    },
    "2100": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2101": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2102": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "AND",
      "path": "7"
    },
    "2103": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2105": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2106": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2107": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2108": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5668
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2110": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2112": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2113": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2114": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2115": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2117": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2118": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2119": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2120": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2121": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2122": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "AND",
      "path": "7"
    },
    "2123": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2124": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2125": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2126": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2127": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2128": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2129": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2130": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2132": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "AND",
      "path": "7"
    },
    "2133": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2134": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5503,
        5691
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2135": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "fn": "ERC777.isOperatorFor",
      "jump": "o",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2140": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2141": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "SUB"
    },
    "2150": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6325,
        6349
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 31
    },
    "2151": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6325,
        6349
      ],
      "op": "AND",
      "path": "7"
    },
    "2152": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6325,
        6349
      ],
      "op": "SUB",
      "path": "7"
    },
    "2153": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8BE"
    },
    "2156": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2157": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2159": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2168": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2171": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2173": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2174": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "ADD",
      "path": "7"
    },
    "2175": {
      "op": "MSTORE"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2180": {
      "op": "DUP3"
    },
    "2181": {
      "op": "ADD"
    },
    "2182": {
      "op": "MSTORE"
    },
    "2183": {
      "op": "PUSH32",
      "value": "0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2218": {
      "op": "DUP3"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "op": "MSTORE"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2228": {
      "op": "DUP3"
    },
    "2229": {
      "op": "ADD"
    },
    "2230": {
      "op": "MSTORE"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2233": {
      "op": "ADD"
    },
    "2234": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "2237": {
      "op": "JUMP"
    },
    "2238": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "op": "SUB"
    },
    "2247": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2248": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "AND",
      "path": "7"
    },
    "2249": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2251": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2252": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2253": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2254": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2256": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2258": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2259": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2261": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2262": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2263": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2264": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2266": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "AND",
      "path": "7"
    },
    "2267": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2268": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x912"
    },
    "2271": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2272": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2273": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0x0"
    },
    "2275": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2276": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2277": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2278": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6469
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2280": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2282": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2283": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2284": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2285": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2287": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2288": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2289": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2296": {
      "op": "SHL"
    },
    "2297": {
      "op": "SUB"
    },
    "2298": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2299": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "AND",
      "path": "7"
    },
    "2300": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2301": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2302": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2303": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2304": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2305": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2306": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2307": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2308": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2311": {
      "op": "NOT"
    },
    "2312": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "AND",
      "path": "7"
    },
    "2313": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6496,
        6500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2315": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "OR",
      "path": "7"
    },
    "2316": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2317": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2318": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x93E"
    },
    "2321": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2322": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2323": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2324": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x0"
    },
    "2326": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2327": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2328": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2329": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6548
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2331": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2333": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2334": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2335": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2336": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2338": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2339": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2340": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "op": "SUB"
    },
    "2349": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2350": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "AND",
      "path": "7"
    },
    "2351": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2352": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2353": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2354": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2355": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2356": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2357": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2358": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2359": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2362": {
      "op": "NOT"
    },
    "2363": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "AND",
      "path": "7"
    },
    "2364": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2365": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2366": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2367": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 34,
      "value": "0x40"
    },
    "2369": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2370": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2371": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "op": "SUB"
    },
    "2380": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2381": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "AND",
      "path": "7"
    },
    "2382": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2383": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
    },
    "2416": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2417": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2419": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2420": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "LOG3",
      "path": "7"
    },
    "2421": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "POP",
      "path": "7"
    },
    "2422": {
      "fn": "ERC777.revokeOperator",
      "jump": "o",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2423": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2424": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7627,
        7663
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 35,
      "value": "0x981"
    },
    "2427": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2428": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7655,
        7662
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2429": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7627,
        7640
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7BA"
    },
    "2432": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7627,
        7663
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2433": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7627,
        7663
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2434": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x99D"
    },
    "2437": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2438": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2440": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2447": {
      "op": "SHL"
    },
    "2448": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2449": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2450": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2452": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "ADD",
      "path": "7"
    },
    "2453": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "2456": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2457": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1668"
    },
    "2460": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7619,
        7712
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2461": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2462": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7722,
        7764
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 36,
      "value": "0x9A9"
    },
    "2465": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2466": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7737,
        7743
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2467": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7745,
        7749
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2468": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7751,
        7763
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2469": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7722,
        7727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x102B"
    },
    "2472": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7722,
        7764
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2473": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7722,
        7764
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2474": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "7"
    },
    "2475": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "7"
    },
    "2476": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "7"
    },
    "2477": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "7"
    },
    "2478": {
      "fn": "ERC777.operatorBurn",
      "jump": "o",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2479": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2480": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 37,
      "value": "0x9CA"
    },
    "2483": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2484": {
      "fn": "ERC777.burn",
      "offset": [
        5300,
        5306
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2485": {
      "fn": "ERC777.burn",
      "offset": [
        5308,
        5312
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2486": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2488": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2489": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2490": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2492": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "ADD",
      "path": "7"
    },
    "2493": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2495": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2496": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2497": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2499": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2500": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2501": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "POP",
      "path": "7"
    },
    "2502": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x102B"
    },
    "2505": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5280,
        5317
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2506": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2507": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "POP",
      "path": "7"
    },
    "2508": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "POP",
      "path": "7"
    },
    "2509": {
      "fn": "ERC777.burn",
      "jump": "o",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2510": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2517": {
      "op": "SHL"
    },
    "2518": {
      "op": "SUB"
    },
    "2519": {
      "fn": "ERC777._approve",
      "offset": [
        14936,
        14956
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 38
    },
    "2520": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14936,
        14956
      ],
      "op": "AND",
      "path": "7"
    },
    "2521": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA32"
    },
    "2524": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2525": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2527": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2534": {
      "op": "SHL"
    },
    "2535": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2536": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2539": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2541": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2542": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "ADD",
      "path": "7"
    },
    "2543": {
      "op": "MSTORE"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "op": "MSTORE"
    },
    "2589": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2600": {
      "op": "DUP3"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "MSTORE"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "2609": {
      "op": "JUMP"
    },
    "2610": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2617": {
      "op": "SHL"
    },
    "2618": {
      "op": "SUB"
    },
    "2619": {
      "fn": "ERC777._approve",
      "offset": [
        15016,
        15037
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 39
    },
    "2620": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15016,
        15037
      ],
      "op": "AND",
      "path": "7"
    },
    "2621": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA94"
    },
    "2624": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2625": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2627": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2636": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2639": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2641": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2642": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "ADD",
      "path": "7"
    },
    "2643": {
      "op": "MSTORE"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2648": {
      "op": "DUP3"
    },
    "2649": {
      "op": "ADD"
    },
    "2650": {
      "op": "MSTORE"
    },
    "2651": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F766520746F20746865207A65726F2061646472"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2686": {
      "op": "DUP3"
    },
    "2687": {
      "op": "ADD"
    },
    "2688": {
      "op": "MSTORE"
    },
    "2689": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2695": {
      "op": "SHL"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2698": {
      "op": "DUP3"
    },
    "2699": {
      "op": "ADD"
    },
    "2700": {
      "op": "MSTORE"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2703": {
      "op": "ADD"
    },
    "2704": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "2707": {
      "op": "JUMP"
    },
    "2708": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2715": {
      "op": "SHL"
    },
    "2716": {
      "op": "SUB"
    },
    "2717": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 40
    },
    "2718": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2719": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "AND",
      "path": "7"
    },
    "2720": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2722": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2723": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2724": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2725": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15099
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2727": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2729": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2730": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2731": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2732": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2734": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2735": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2736": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2737": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2738": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2739": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "AND",
      "path": "7"
    },
    "2740": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2741": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2742": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2743": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2744": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2745": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2746": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2747": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2748": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2749": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2750": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15124
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2751": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15124
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2752": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15124
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2753": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 41
    },
    "2754": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2755": {
      "op": "DUP5"
    },
    "2756": {
      "op": "DUP2"
    },
    "2757": {
      "op": "MSTORE"
    },
    "2758": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2791": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2795": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2796": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2797": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2798": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SUB",
      "path": "7"
    },
    "2799": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2800": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "LOG3",
      "path": "7"
    },
    "2801": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "POP",
      "path": "7"
    },
    "2802": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "POP",
      "path": "7"
    },
    "2803": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "POP",
      "path": "7"
    },
    "2804": {
      "fn": "ERC777._approve",
      "jump": "o",
      "offset": [
        14813,
        15178
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2805": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2806": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2808": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2809": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2816": {
      "op": "SHL"
    },
    "2817": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2818": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "op": "SUB"
    },
    "2827": {
      "op": "DUP7"
    },
    "2828": {
      "op": "AND"
    },
    "2829": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2831": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2832": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "7"
    },
    "2833": {
      "op": "MSTORE"
    },
    "2834": {
      "offset": [
        1417,
        1448
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2869": {
      "op": "DUP3"
    },
    "2870": {
      "op": "ADD"
    },
    "2871": {
      "op": "MSTORE"
    },
    "2872": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15860,
        15879
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2874": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15860,
        15879
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2875": {
      "offset": [
        1168,
        1210
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "2896": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        1168,
        1210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2897": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15923
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xAABBB8CA"
    },
    "2902": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15923
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2905": {
      "op": "ADD"
    },
    "2906": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2908": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2910": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2911": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2912": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2913": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SUB",
      "path": "7"
    },
    "2914": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2915": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2916": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "GAS",
      "path": "7"
    },
    "2917": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "2918": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2919": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2920": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2921": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB76"
    },
    "2924": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2925": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2926": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2928": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2929": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2930": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2931": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2933": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2934": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2935": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "7"
    },
    "2936": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "7"
    },
    "2937": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "7"
    },
    "2938": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "7"
    },
    "2939": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2941": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2942": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2943": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2945": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "NOT",
      "path": "7"
    },
    "2946": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2948": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2949": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "7"
    },
    "2950": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "AND",
      "path": "7"
    },
    "2951": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2952": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "7"
    },
    "2953": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2954": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2956": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2957": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "7"
    },
    "2958": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2959": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "7"
    },
    "2960": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2961": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB9A"
    },
    "2964": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2965": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2966": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16B4"
    },
    "2969": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2970": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2971": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15860,
        15960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2972": {
      "op": "POP"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15974,
        15999
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2982": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15974,
        15999
      ],
      "op": "AND",
      "path": "7"
    },
    "2983": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15974,
        15999
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2984": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15970,
        16117
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC14"
    },
    "2987": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15970,
        16117
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2988": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 42,
      "value": "0x40"
    },
    "2990": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2991": {
      "op": "PUSH4",
      "value": "0x3AD5CBC1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2998": {
      "op": "SHL"
    },
    "2999": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3000": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "op": "SUB"
    },
    "3009": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3010": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "AND",
      "path": "7"
    },
    "3011": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3012": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x75AB9782"
    },
    "3017": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3018": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBE1"
    },
    "3021": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3022": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16055,
        16063
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3023": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16055,
        16063
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3024": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16065,
        16069
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3025": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16065,
        16069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3026": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16071,
        16073
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3027": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16071,
        16073
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3028": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16075,
        16081
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3029": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16075,
        16081
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3030": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16083,
        16091
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3031": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16083,
        16091
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3032": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16093,
        16105
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3033": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16093,
        16105
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3034": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3036": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ADD",
      "path": "7"
    },
    "3037": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D1"
    },
    "3040": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3041": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3042": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3044": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3046": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3047": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3048": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3049": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "SUB",
      "path": "7"
    },
    "3050": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3051": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3053": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3054": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3055": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "3056": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3057": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3058": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3059": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBFB"
    },
    "3062": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3063": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3065": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3066": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3067": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3068": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "7"
    },
    "3069": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "GAS",
      "path": "7"
    },
    "3070": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "CALL",
      "path": "7"
    },
    "3071": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3072": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3073": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3074": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0F"
    },
    "3077": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3078": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3079": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3081": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3082": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3083": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3084": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3086": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3087": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3088": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "7"
    },
    "3089": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "7"
    },
    "3090": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "7"
    },
    "3091": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "7"
    },
    "3092": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15970,
        16117
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3093": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15850,
        16123
      ],
      "op": "POP",
      "path": "7"
    },
    "3094": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "7"
    },
    "3095": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "7"
    },
    "3096": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "7"
    },
    "3097": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "7"
    },
    "3098": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "7"
    },
    "3099": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "7"
    },
    "3100": {
      "fn": "ERC777._callTokensToSend",
      "jump": "o",
      "offset": [
        15651,
        16123
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3101": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3108": {
      "op": "SHL"
    },
    "3109": {
      "op": "SUB"
    },
    "3110": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3111": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "AND",
      "path": "7"
    },
    "3112": {
      "fn": "ERC777._move",
      "offset": [
        14320,
        14339
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3114": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3115": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3116": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3117": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3119": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3120": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3121": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3122": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3124": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3125": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3126": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3127": {
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 43
    },
    "3128": {
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3129": {
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "LT",
      "path": "7"
    },
    "3130": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3131": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC96"
    },
    "3134": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3135": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3137": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3146": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3149": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3151": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3152": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "ADD",
      "path": "7"
    },
    "3153": {
      "op": "MSTORE"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3158": {
      "op": "DUP3"
    },
    "3159": {
      "op": "ADD"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3196": {
      "op": "DUP3"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3209": {
      "op": "SHL"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3212": {
      "op": "DUP3"
    },
    "3213": {
      "op": "ADD"
    },
    "3214": {
      "op": "MSTORE"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3217": {
      "op": "ADD"
    },
    "3218": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "3221": {
      "op": "JUMP"
    },
    "3222": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3229": {
      "op": "SHL"
    },
    "3230": {
      "op": "SUB"
    },
    "3231": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 44
    },
    "3232": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3233": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "AND",
      "path": "7"
    },
    "3234": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3236": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3237": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3238": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3239": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3241": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3242": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3243": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3244": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3246": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3247": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3248": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3249": {
      "fn": "ERC777._move",
      "offset": [
        14492,
        14512
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3250": {
      "fn": "ERC777._move",
      "offset": [
        14492,
        14512
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3251": {
      "fn": "ERC777._move",
      "offset": [
        14492,
        14512
      ],
      "op": "SUB",
      "path": "7"
    },
    "3252": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3253": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14512
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3254": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 45
    },
    "3255": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3256": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "AND",
      "path": "7"
    },
    "3257": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3258": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3259": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3260": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3261": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3262": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3263": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3264": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3265": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3266": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3267": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCCD"
    },
    "3270": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3271": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3272": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3273": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x172B"
    },
    "3276": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14532,
        14555
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3277": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3278": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3279": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "POP",
      "path": "7"
    },
    "3280": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "POP",
      "path": "7"
    },
    "3281": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3282": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3283": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3284": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "POP",
      "path": "7"
    },
    "3285": {
      "fn": "ERC777._move",
      "offset": [
        14592,
        14594
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 46
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3292": {
      "op": "SHL"
    },
    "3293": {
      "op": "SUB"
    },
    "3294": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "AND",
      "path": "7"
    },
    "3295": {
      "fn": "ERC777._move",
      "offset": [
        14586,
        14590
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3302": {
      "op": "SHL"
    },
    "3303": {
      "op": "SUB"
    },
    "3304": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "AND",
      "path": "7"
    },
    "3305": {
      "fn": "ERC777._move",
      "offset": [
        14576,
        14584
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3312": {
      "op": "SHL"
    },
    "3313": {
      "op": "SUB"
    },
    "3314": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "AND",
      "path": "7"
    },
    "3315": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
    },
    "3348": {
      "fn": "ERC777._move",
      "offset": [
        14596,
        14602
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3349": {
      "fn": "ERC777._move",
      "offset": [
        14604,
        14612
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3350": {
      "fn": "ERC777._move",
      "offset": [
        14614,
        14626
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3351": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3353": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3354": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD25"
    },
    "3357": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3358": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3359": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3360": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3361": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1743"
    },
    "3364": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14571,
        14627
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3365": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3366": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3368": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3369": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3370": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3371": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SUB",
      "path": "7"
    },
    "3372": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3373": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "LOG4",
      "path": "7"
    },
    "3374": {
      "fn": "ERC777._move",
      "offset": [
        14657,
        14659
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 47
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3381": {
      "op": "SHL"
    },
    "3382": {
      "op": "SUB"
    },
    "3383": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "AND",
      "path": "7"
    },
    "3384": {
      "fn": "ERC777._move",
      "offset": [
        14651,
        14655
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3391": {
      "op": "SHL"
    },
    "3392": {
      "op": "SUB"
    },
    "3393": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "AND",
      "path": "7"
    },
    "3394": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3427": {
      "fn": "ERC777._move",
      "offset": [
        14661,
        14667
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3428": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3430": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3431": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD72"
    },
    "3434": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3435": {
      "op": "DUP2"
    },
    "3436": {
      "op": "MSTORE"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3439": {
      "op": "ADD"
    },
    "3440": {
      "op": "SWAP1"
    },
    "3441": {
      "op": "JUMP"
    },
    "3442": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3443": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3445": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3446": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3447": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3448": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SUB",
      "path": "7"
    },
    "3449": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3450": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "LOG3",
      "path": "7"
    },
    "3451": {
      "fn": "ERC777._move",
      "offset": [
        14251,
        14675
      ],
      "op": "POP",
      "path": "7"
    },
    "3452": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "7"
    },
    "3453": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "7"
    },
    "3454": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "7"
    },
    "3455": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "7"
    },
    "3456": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "7"
    },
    "3457": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "7"
    },
    "3458": {
      "fn": "ERC777._move",
      "jump": "o",
      "offset": [
        14064,
        14675
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3459": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3460": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3462": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3463": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3470": {
      "op": "SHL"
    },
    "3471": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3472": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3479": {
      "op": "SHL"
    },
    "3480": {
      "op": "SUB"
    },
    "3481": {
      "op": "DUP7"
    },
    "3482": {
      "op": "AND"
    },
    "3483": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3485": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3486": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "7"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "offset": [
        1514,
        1548
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3523": {
      "op": "DUP3"
    },
    "3524": {
      "op": "ADD"
    },
    "3525": {
      "op": "MSTORE"
    },
    "3526": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17057,
        17076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3528": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17057,
        17076
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3529": {
      "offset": [
        1168,
        1210
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "3550": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        1168,
        1210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3551": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17120
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xAABBB8CA"
    },
    "3556": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17120
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3559": {
      "op": "ADD"
    },
    "3560": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3562": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3564": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3565": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3566": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3567": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SUB",
      "path": "7"
    },
    "3568": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3569": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3570": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "GAS",
      "path": "7"
    },
    "3571": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "3572": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3573": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3574": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3575": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE04"
    },
    "3578": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3579": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3580": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3582": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3583": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3584": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3585": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3587": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3588": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3589": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "7"
    },
    "3590": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "7"
    },
    "3591": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "7"
    },
    "3592": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "7"
    },
    "3593": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3595": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3596": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3597": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3599": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "NOT",
      "path": "7"
    },
    "3600": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3602": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3603": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "7"
    },
    "3604": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "AND",
      "path": "7"
    },
    "3605": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3606": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "7"
    },
    "3607": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3608": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3610": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3611": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "7"
    },
    "3612": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3613": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "7"
    },
    "3614": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3615": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE28"
    },
    "3618": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3619": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3620": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16B4"
    },
    "3623": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3624": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3625": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17057,
        17158
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "SUB"
    },
    "3635": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17172,
        17197
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3636": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17172,
        17197
      ],
      "op": "AND",
      "path": "7"
    },
    "3637": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17172,
        17197
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3638": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA4"
    },
    "3641": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3642": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 48,
      "value": "0x40"
    },
    "3644": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3645": {
      "op": "PUSH3",
      "value": "0x23DE29"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3653": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3660": {
      "op": "SHL"
    },
    "3661": {
      "op": "SUB"
    },
    "3662": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3663": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "AND",
      "path": "7"
    },
    "3664": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3665": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x23DE29"
    },
    "3669": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3670": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE6D"
    },
    "3673": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3674": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17258,
        17266
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3675": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17258,
        17266
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3676": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17268,
        17272
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3677": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17268,
        17272
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3678": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17274,
        17276
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3679": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17274,
        17276
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3680": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17278,
        17284
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3681": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17278,
        17284
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3682": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17286,
        17294
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3683": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17286,
        17294
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3684": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17296,
        17308
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3685": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17296,
        17308
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3686": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3688": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ADD",
      "path": "7"
    },
    "3689": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D1"
    },
    "3692": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3693": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3694": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3696": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3698": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3699": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3700": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3701": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "SUB",
      "path": "7"
    },
    "3702": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3703": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3705": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3706": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3707": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "3708": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3709": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3710": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3711": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE87"
    },
    "3714": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3715": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3717": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3718": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3719": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3720": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "7"
    },
    "3721": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "GAS",
      "path": "7"
    },
    "3722": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "CALL",
      "path": "7"
    },
    "3723": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3724": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3725": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3726": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9B"
    },
    "3729": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3730": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3731": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3733": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3734": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3735": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3736": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3738": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3739": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3740": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "7"
    },
    "3741": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "7"
    },
    "3742": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "7"
    },
    "3743": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "7"
    },
    "3744": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3E"
    },
    "3747": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3748": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3749": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17330,
        17349
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3750": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17326,
        17482
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3751": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17326,
        17482
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3E"
    },
    "3754": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17326,
        17482
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3761": {
      "op": "SHL"
    },
    "3762": {
      "op": "SUB"
    },
    "3763": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17374,
        17387
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 49
    },
    "3764": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17374,
        17387
      ],
      "op": "AND",
      "path": "7"
    },
    "3765": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "3766": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "11",
      "statement": 50
    },
    "3767": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3E"
    },
    "3770": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3771": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3773": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3774": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3780": {
      "op": "SHL"
    },
    "3781": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3782": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3785": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3787": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3788": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "ADD",
      "path": "7"
    },
    "3789": {
      "op": "MSTORE"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3794": {
      "op": "DUP3"
    },
    "3795": {
      "op": "ADD"
    },
    "3796": {
      "op": "MSTORE"
    },
    "3797": {
      "op": "PUSH32",
      "value": "0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3832": {
      "op": "DUP3"
    },
    "3833": {
      "op": "ADD"
    },
    "3834": {
      "op": "MSTORE"
    },
    "3835": {
      "op": "PUSH32",
      "value": "0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3870": {
      "op": "DUP3"
    },
    "3871": {
      "op": "ADD"
    },
    "3872": {
      "op": "MSTORE"
    },
    "3873": {
      "op": "PUSH13",
      "value": "0x1AD95B9CD49958DA5C1A595B9D"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "3901": {
      "op": "JUMP"
    },
    "3902": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3903": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17047,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3904": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3905": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3906": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3907": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3908": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3909": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3910": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "7"
    },
    "3911": {
      "fn": "ERC777._callTokensReceived",
      "jump": "o",
      "offset": [
        16812,
        17488
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3912": {
      "fn": "ERC777._send",
      "offset": [
        12292,
        12942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3919": {
      "op": "SHL"
    },
    "3920": {
      "op": "SUB"
    },
    "3921": {
      "fn": "ERC777._send",
      "offset": [
        12514,
        12532
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 51
    },
    "3922": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12514,
        12532
      ],
      "op": "AND",
      "path": "7"
    },
    "3923": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFA9"
    },
    "3926": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3927": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3929": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3936": {
      "op": "SHL"
    },
    "3937": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3938": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3941": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3943": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3944": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "ADD",
      "path": "7"
    },
    "3945": {
      "op": "MSTORE"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3950": {
      "op": "DUP3"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "MSTORE"
    },
    "3953": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "ADD"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3996": {
      "op": "SHL"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3999": {
      "op": "DUP3"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "4008": {
      "op": "JUMP"
    },
    "4009": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4016": {
      "op": "SHL"
    },
    "4017": {
      "op": "SUB"
    },
    "4018": {
      "fn": "ERC777._send",
      "offset": [
        12589,
        12605
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 52
    },
    "4019": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12589,
        12605
      ],
      "op": "AND",
      "path": "7"
    },
    "4020": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFFF"
    },
    "4023": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4024": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4026": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4033": {
      "op": "SHL"
    },
    "4034": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4035": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4038": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4040": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4041": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "ADD",
      "path": "7"
    },
    "4042": {
      "op": "DUP2"
    },
    "4043": {
      "op": "SWAP1"
    },
    "4044": {
      "op": "MSTORE"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4047": {
      "op": "DUP3"
    },
    "4048": {
      "op": "ADD"
    },
    "4049": {
      "op": "MSTORE"
    },
    "4050": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4085": {
      "op": "DUP3"
    },
    "4086": {
      "op": "ADD"
    },
    "4087": {
      "op": "MSTORE"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4090": {
      "op": "ADD"
    },
    "4091": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "4094": {
      "op": "JUMP"
    },
    "4095": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4096": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4097": {
      "fn": "ERC777._send",
      "offset": [
        12695,
        12764
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 53,
      "value": "0x100E"
    },
    "4100": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4101": {
      "fn": "ERC777._send",
      "offset": [
        12723,
        12727
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4102": {
      "fn": "ERC777._send",
      "offset": [
        12729,
        12731
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4103": {
      "fn": "ERC777._send",
      "offset": [
        12733,
        12739
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4104": {
      "fn": "ERC777._send",
      "offset": [
        12741,
        12749
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4105": {
      "fn": "ERC777._send",
      "offset": [
        12751,
        12763
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4106": {
      "fn": "ERC777._send",
      "offset": [
        12695,
        12712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAF5"
    },
    "4109": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12695,
        12764
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4110": {
      "fn": "ERC777._send",
      "offset": [
        12695,
        12764
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4111": {
      "fn": "ERC777._send",
      "offset": [
        12775,
        12832
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 54,
      "value": "0x101C"
    },
    "4114": {
      "fn": "ERC777._send",
      "offset": [
        12781,
        12789
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4115": {
      "fn": "ERC777._send",
      "offset": [
        12791,
        12795
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4116": {
      "fn": "ERC777._send",
      "offset": [
        12797,
        12799
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4117": {
      "fn": "ERC777._send",
      "offset": [
        12801,
        12807
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4118": {
      "fn": "ERC777._send",
      "offset": [
        12809,
        12817
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4119": {
      "fn": "ERC777._send",
      "offset": [
        12819,
        12831
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4120": {
      "fn": "ERC777._send",
      "offset": [
        12775,
        12780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1D"
    },
    "4123": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12775,
        12832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4124": {
      "fn": "ERC777._send",
      "offset": [
        12775,
        12832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4125": {
      "fn": "ERC777._send",
      "offset": [
        12843,
        12935
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 55,
      "value": "0xC14"
    },
    "4128": {
      "fn": "ERC777._send",
      "offset": [
        12863,
        12871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4129": {
      "fn": "ERC777._send",
      "offset": [
        12873,
        12877
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4130": {
      "fn": "ERC777._send",
      "offset": [
        12879,
        12881
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4131": {
      "fn": "ERC777._send",
      "offset": [
        12883,
        12889
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4132": {
      "fn": "ERC777._send",
      "offset": [
        12891,
        12899
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4133": {
      "fn": "ERC777._send",
      "offset": [
        12901,
        12913
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4134": {
      "fn": "ERC777._send",
      "offset": [
        12915,
        12934
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4135": {
      "fn": "ERC777._send",
      "offset": [
        12843,
        12862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD83"
    },
    "4138": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12843,
        12935
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4139": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4146": {
      "op": "SHL"
    },
    "4147": {
      "op": "SUB"
    },
    "4148": {
      "fn": "ERC777._burn",
      "offset": [
        13411,
        13429
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 56
    },
    "4149": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13411,
        13429
      ],
      "op": "AND",
      "path": "7"
    },
    "4150": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x108C"
    },
    "4153": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4154": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4156": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4157": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4163": {
      "op": "SHL"
    },
    "4164": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4165": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4168": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4170": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4171": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "ADD",
      "path": "7"
    },
    "4172": {
      "op": "MSTORE"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4177": {
      "op": "DUP3"
    },
    "4178": {
      "op": "ADD"
    },
    "4179": {
      "op": "MSTORE"
    },
    "4180": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4215": {
      "op": "DUP3"
    },
    "4216": {
      "op": "ADD"
    },
    "4217": {
      "op": "MSTORE"
    },
    "4218": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4223": {
      "op": "SHL"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4226": {
      "op": "DUP3"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "4235": {
      "op": "JUMP"
    },
    "4236": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4237": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4238": {
      "fn": "ERC777._burn",
      "offset": [
        13521,
        13594
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 57,
      "value": "0x109C"
    },
    "4241": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4242": {
      "fn": "ERC777._burn",
      "offset": [
        13549,
        13553
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4243": {
      "fn": "ERC777._burn",
      "offset": [
        13479,
        13495
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4245": {
      "fn": "ERC777._burn",
      "offset": [
        13567,
        13573
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4246": {
      "fn": "ERC777._burn",
      "offset": [
        13575,
        13579
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4247": {
      "fn": "ERC777._burn",
      "offset": [
        13581,
        13593
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4248": {
      "fn": "ERC777._burn",
      "offset": [
        13521,
        13538
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAF5"
    },
    "4251": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13521,
        13594
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4252": {
      "fn": "ERC777._burn",
      "offset": [
        13521,
        13594
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4259": {
      "op": "SHL"
    },
    "4260": {
      "op": "SUB"
    },
    "4261": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4262": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "AND",
      "path": "7"
    },
    "4263": {
      "fn": "ERC777._burn",
      "offset": [
        13706,
        13725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4265": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4266": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4267": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4268": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4270": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4271": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4272": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4273": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4275": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4276": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4277": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4278": {
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 58
    },
    "4279": {
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4280": {
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "LT",
      "path": "7"
    },
    "4281": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4282": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1111"
    },
    "4285": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4286": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4288": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4295": {
      "op": "SHL"
    },
    "4296": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4297": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4300": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4302": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4303": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "ADD",
      "path": "7"
    },
    "4304": {
      "op": "MSTORE"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4309": {
      "op": "DUP3"
    },
    "4310": {
      "op": "ADD"
    },
    "4311": {
      "op": "MSTORE"
    },
    "4312": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4347": {
      "op": "DUP3"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "PUSH3",
      "value": "0x6E6365"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4356": {
      "op": "SHL"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4359": {
      "op": "DUP3"
    },
    "4360": {
      "op": "ADD"
    },
    "4361": {
      "op": "MSTORE"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4364": {
      "op": "ADD"
    },
    "4365": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DB"
    },
    "4368": {
      "op": "JUMP"
    },
    "4369": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4376": {
      "op": "SHL"
    },
    "4377": {
      "op": "SUB"
    },
    "4378": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 59
    },
    "4379": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "AND",
      "path": "7"
    },
    "4380": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4382": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4383": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4384": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4385": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4387": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4388": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4389": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4390": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4392": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4393": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4394": {
      "fn": "ERC777._burn",
      "offset": [
        13874,
        13894
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4395": {
      "fn": "ERC777._burn",
      "offset": [
        13874,
        13894
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4396": {
      "fn": "ERC777._burn",
      "offset": [
        13874,
        13894
      ],
      "op": "SUB",
      "path": "7"
    },
    "4397": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13894
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4398": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13894
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4399": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13926
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 60,
      "value": "0x1"
    },
    "4401": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4402": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4403": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4404": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4405": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4406": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1140"
    },
    "4409": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4410": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4411": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4412": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1651"
    },
    "4415": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13914,
        13936
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4416": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4417": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4418": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "POP",
      "path": "7"
    },
    "4419": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "POP",
      "path": "7"
    },
    "4420": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4421": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4422": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4423": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "POP",
      "path": "7"
    },
    "4424": {
      "fn": "ERC777._burn",
      "offset": [
        13969,
        13973
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 61
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4431": {
      "op": "SHL"
    },
    "4432": {
      "op": "SUB"
    },
    "4433": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "AND",
      "path": "7"
    },
    "4434": {
      "fn": "ERC777._burn",
      "offset": [
        13959,
        13967
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4441": {
      "op": "SHL"
    },
    "4442": {
      "op": "SUB"
    },
    "4443": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "AND",
      "path": "7"
    },
    "4444": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
    },
    "4477": {
      "fn": "ERC777._burn",
      "offset": [
        13975,
        13981
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4478": {
      "fn": "ERC777._burn",
      "offset": [
        13983,
        13987
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4479": {
      "fn": "ERC777._burn",
      "offset": [
        13989,
        14001
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4480": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4482": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4483": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118E"
    },
    "4486": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4487": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4488": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4489": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4490": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1743"
    },
    "4493": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13952,
        14002
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4494": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4495": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4497": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4498": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4499": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4500": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SUB",
      "path": "7"
    },
    "4501": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4502": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "LOG3",
      "path": "7"
    },
    "4503": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 62,
      "value": "0x40"
    },
    "4505": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4506": {
      "op": "DUP6"
    },
    "4507": {
      "op": "DUP2"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "fn": "ERC777._burn",
      "offset": [
        14040,
        14041
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4511": {
      "fn": "ERC777._burn",
      "offset": [
        14040,
        14041
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4518": {
      "op": "SHL"
    },
    "4519": {
      "op": "SUB"
    },
    "4520": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4521": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "AND",
      "path": "7"
    },
    "4522": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4523": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4556": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4559": {
      "op": "ADD"
    },
    "4560": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4562": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4563": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4564": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4565": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SUB",
      "path": "7"
    },
    "4566": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4567": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "LOG3",
      "path": "7"
    },
    "4568": {
      "fn": "ERC777._burn",
      "offset": [
        13393,
        14058
      ],
      "op": "POP",
      "path": "7"
    },
    "4569": {
      "fn": "ERC777._burn",
      "offset": [
        13393,
        14058
      ],
      "op": "POP",
      "path": "7"
    },
    "4570": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "7"
    },
    "4571": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "7"
    },
    "4572": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "7"
    },
    "4573": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "7"
    },
    "4574": {
      "fn": "ERC777._burn",
      "jump": "o",
      "offset": [
        13247,
        14058
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4575": {
      "op": "JUMPDEST"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4578": {
      "op": "DUP1"
    },
    "4579": {
      "op": "DUP3"
    },
    "4580": {
      "op": "MSTORE"
    },
    "4581": {
      "op": "DUP3"
    },
    "4582": {
      "op": "MLOAD"
    },
    "4583": {
      "op": "DUP3"
    },
    "4584": {
      "op": "DUP3"
    },
    "4585": {
      "op": "ADD"
    },
    "4586": {
      "op": "DUP2"
    },
    "4587": {
      "op": "SWAP1"
    },
    "4588": {
      "op": "MSTORE"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4591": {
      "op": "SWAP2"
    },
    "4592": {
      "op": "SWAP1"
    },
    "4593": {
      "op": "DUP5"
    },
    "4594": {
      "op": "DUP3"
    },
    "4595": {
      "op": "ADD"
    },
    "4596": {
      "op": "SWAP1"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4599": {
      "op": "DUP6"
    },
    "4600": {
      "op": "ADD"
    },
    "4601": {
      "op": "SWAP1"
    },
    "4602": {
      "op": "DUP5"
    },
    "4603": {
      "op": "JUMPDEST"
    },
    "4604": {
      "op": "DUP2"
    },
    "4605": {
      "op": "DUP2"
    },
    "4606": {
      "op": "LT"
    },
    "4607": {
      "op": "ISZERO"
    },
    "4608": {
      "op": "PUSH2",
      "value": "0x1220"
    },
    "4611": {
      "op": "JUMPI"
    },
    "4612": {
      "op": "DUP4"
    },
    "4613": {
      "op": "MLOAD"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4620": {
      "op": "SHL"
    },
    "4621": {
      "op": "SUB"
    },
    "4622": {
      "op": "AND"
    },
    "4623": {
      "op": "DUP4"
    },
    "4624": {
      "op": "MSTORE"
    },
    "4625": {
      "op": "SWAP3"
    },
    "4626": {
      "op": "DUP5"
    },
    "4627": {
      "op": "ADD"
    },
    "4628": {
      "op": "SWAP3"
    },
    "4629": {
      "op": "SWAP2"
    },
    "4630": {
      "op": "DUP5"
    },
    "4631": {
      "op": "ADD"
    },
    "4632": {
      "op": "SWAP2"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "ADD"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x11FB"
    },
    "4639": {
      "op": "JUMP"
    },
    "4640": {
      "op": "JUMPDEST"
    },
    "4641": {
      "op": "POP"
    },
    "4642": {
      "op": "SWAP1"
    },
    "4643": {
      "op": "SWAP7"
    },
    "4644": {
      "op": "SWAP6"
    },
    "4645": {
      "op": "POP"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "jump": "o",
      "op": "JUMP"
    },
    "4652": {
      "op": "JUMPDEST"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4655": {
      "op": "DUP2"
    },
    "4656": {
      "op": "MLOAD"
    },
    "4657": {
      "op": "DUP1"
    },
    "4658": {
      "op": "DUP5"
    },
    "4659": {
      "op": "MSTORE"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4662": {
      "op": "JUMPDEST"
    },
    "4663": {
      "op": "DUP2"
    },
    "4664": {
      "op": "DUP2"
    },
    "4665": {
      "op": "LT"
    },
    "4666": {
      "op": "ISZERO"
    },
    "4667": {
      "op": "PUSH2",
      "value": "0x1252"
    },
    "4670": {
      "op": "JUMPI"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4673": {
      "op": "DUP2"
    },
    "4674": {
      "op": "DUP6"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "DUP2"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "op": "MLOAD"
    },
    "4679": {
      "op": "DUP7"
    },
    "4680": {
      "op": "DUP4"
    },
    "4681": {
      "op": "ADD"
    },
    "4682": {
      "op": "DUP3"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "op": "MSTORE"
    },
    "4685": {
      "op": "ADD"
    },
    "4686": {
      "op": "PUSH2",
      "value": "0x1236"
    },
    "4689": {
      "op": "JUMP"
    },
    "4690": {
      "op": "JUMPDEST"
    },
    "4691": {
      "op": "DUP2"
    },
    "4692": {
      "op": "DUP2"
    },
    "4693": {
      "op": "GT"
    },
    "4694": {
      "op": "ISZERO"
    },
    "4695": {
      "op": "PUSH2",
      "value": "0x1264"
    },
    "4698": {
      "op": "JUMPI"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4703": {
      "op": "DUP4"
    },
    "4704": {
      "op": "DUP8"
    },
    "4705": {
      "op": "ADD"
    },
    "4706": {
      "op": "ADD"
    },
    "4707": {
      "op": "MSTORE"
    },
    "4708": {
      "op": "JUMPDEST"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4712": {
      "op": "ADD"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4715": {
      "op": "NOT"
    },
    "4716": {
      "op": "AND"
    },
    "4717": {
      "op": "SWAP3"
    },
    "4718": {
      "op": "SWAP1"
    },
    "4719": {
      "op": "SWAP3"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4723": {
      "op": "ADD"
    },
    "4724": {
      "op": "SWAP3"
    },
    "4725": {
      "op": "SWAP2"
    },
    "4726": {
      "op": "POP"
    },
    "4727": {
      "op": "POP"
    },
    "4728": {
      "jump": "o",
      "op": "JUMP"
    },
    "4729": {
      "op": "JUMPDEST"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4732": {
      "op": "DUP2"
    },
    "4733": {
      "op": "MSTORE"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4736": {
      "op": "PUSH2",
      "value": "0x855"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4741": {
      "op": "DUP4"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "op": "DUP5"
    },
    "4744": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "4747": {
      "jump": "i",
      "op": "JUMP"
    },
    "4748": {
      "op": "JUMPDEST"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4755": {
      "op": "SHL"
    },
    "4756": {
      "op": "SUB"
    },
    "4757": {
      "op": "DUP2"
    },
    "4758": {
      "op": "AND"
    },
    "4759": {
      "op": "DUP2"
    },
    "4760": {
      "op": "EQ"
    },
    "4761": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4764": {
      "op": "JUMPI"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4767": {
      "op": "DUP1"
    },
    "4768": {
      "op": "REVERT"
    },
    "4769": {
      "op": "JUMPDEST"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "jump": "o",
      "op": "JUMP"
    },
    "4772": {
      "op": "JUMPDEST"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "DUP1"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4778": {
      "op": "DUP4"
    },
    "4779": {
      "op": "DUP6"
    },
    "4780": {
      "op": "SUB"
    },
    "4781": {
      "op": "SLT"
    },
    "4782": {
      "op": "ISZERO"
    },
    "4783": {
      "op": "PUSH2",
      "value": "0x12B7"
    },
    "4786": {
      "op": "JUMPI"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4789": {
      "op": "DUP1"
    },
    "4790": {
      "op": "REVERT"
    },
    "4791": {
      "op": "JUMPDEST"
    },
    "4792": {
      "op": "DUP3"
    },
    "4793": {
      "op": "CALLDATALOAD"
    },
    "4794": {
      "op": "PUSH2",
      "value": "0x12C2"
    },
    "4797": {
      "op": "DUP2"
    },
    "4798": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "4801": {
      "jump": "i",
      "op": "JUMP"
    },
    "4802": {
      "op": "JUMPDEST"
    },
    "4803": {
      "op": "SWAP5"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4806": {
      "op": "SWAP4"
    },
    "4807": {
      "op": "SWAP1"
    },
    "4808": {
      "op": "SWAP4"
    },
    "4809": {
      "op": "ADD"
    },
    "4810": {
      "op": "CALLDATALOAD"
    },
    "4811": {
      "op": "SWAP4"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "POP"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "jump": "o",
      "op": "JUMP"
    },
    "4816": {
      "op": "JUMPDEST"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4819": {
      "op": "DUP1"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4824": {
      "op": "DUP5"
    },
    "4825": {
      "op": "DUP7"
    },
    "4826": {
      "op": "SUB"
    },
    "4827": {
      "op": "SLT"
    },
    "4828": {
      "op": "ISZERO"
    },
    "4829": {
      "op": "PUSH2",
      "value": "0x12E5"
    },
    "4832": {
      "op": "JUMPI"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4835": {
      "op": "DUP1"
    },
    "4836": {
      "op": "REVERT"
    },
    "4837": {
      "op": "JUMPDEST"
    },
    "4838": {
      "op": "DUP4"
    },
    "4839": {
      "op": "CALLDATALOAD"
    },
    "4840": {
      "op": "PUSH2",
      "value": "0x12F0"
    },
    "4843": {
      "op": "DUP2"
    },
    "4844": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "4847": {
      "jump": "i",
      "op": "JUMP"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "SWAP3"
    },
    "4850": {
      "op": "POP"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4853": {
      "op": "DUP5"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "op": "CALLDATALOAD"
    },
    "4856": {
      "op": "PUSH2",
      "value": "0x1300"
    },
    "4859": {
      "op": "DUP2"
    },
    "4860": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "4863": {
      "jump": "i",
      "op": "JUMP"
    },
    "4864": {
      "op": "JUMPDEST"
    },
    "4865": {
      "op": "SWAP3"
    },
    "4866": {
      "op": "SWAP6"
    },
    "4867": {
      "op": "SWAP3"
    },
    "4868": {
      "op": "SWAP5"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "op": "POP"
    },
    "4871": {
      "op": "POP"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4874": {
      "op": "SWAP2"
    },
    "4875": {
      "op": "SWAP1"
    },
    "4876": {
      "op": "SWAP2"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "CALLDATALOAD"
    },
    "4879": {
      "op": "SWAP1"
    },
    "4880": {
      "jump": "o",
      "op": "JUMP"
    },
    "4881": {
      "op": "JUMPDEST"
    },
    "4882": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4889": {
      "op": "SHL"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4892": {
      "op": "MSTORE"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4897": {
      "op": "MSTORE"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4902": {
      "op": "REVERT"
    },
    "4903": {
      "op": "JUMPDEST"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4906": {
      "op": "DUP3"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4909": {
      "op": "DUP4"
    },
    "4910": {
      "op": "ADD"
    },
    "4911": {
      "op": "SLT"
    },
    "4912": {
      "op": "PUSH2",
      "value": "0x1338"
    },
    "4915": {
      "op": "JUMPI"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4918": {
      "op": "DUP1"
    },
    "4919": {
      "op": "REVERT"
    },
    "4920": {
      "op": "JUMPDEST"
    },
    "4921": {
      "op": "DUP2"
    },
    "4922": {
      "op": "CALLDATALOAD"
    },
    "4923": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4932": {
      "op": "DUP1"
    },
    "4933": {
      "op": "DUP3"
    },
    "4934": {
      "op": "GT"
    },
    "4935": {
      "op": "ISZERO"
    },
    "4936": {
      "op": "PUSH2",
      "value": "0x1353"
    },
    "4939": {
      "op": "JUMPI"
    },
    "4940": {
      "op": "PUSH2",
      "value": "0x1353"
    },
    "4943": {
      "op": "PUSH2",
      "value": "0x1311"
    },
    "4946": {
      "jump": "i",
      "op": "JUMP"
    },
    "4947": {
      "op": "JUMPDEST"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4950": {
      "op": "MLOAD"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4953": {
      "op": "DUP4"
    },
    "4954": {
      "op": "ADD"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4957": {
      "op": "NOT"
    },
    "4958": {
      "op": "SWAP1"
    },
    "4959": {
      "op": "DUP2"
    },
    "4960": {
      "op": "AND"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4963": {
      "op": "ADD"
    },
    "4964": {
      "op": "AND"
    },
    "4965": {
      "op": "DUP2"
    },
    "4966": {
      "op": "ADD"
    },
    "4967": {
      "op": "SWAP1"
    },
    "4968": {
      "op": "DUP3"
    },
    "4969": {
      "op": "DUP3"
    },
    "4970": {
      "op": "GT"
    },
    "4971": {
      "op": "DUP2"
    },
    "4972": {
      "op": "DUP4"
    },
    "4973": {
      "op": "LT"
    },
    "4974": {
      "op": "OR"
    },
    "4975": {
      "op": "ISZERO"
    },
    "4976": {
      "op": "PUSH2",
      "value": "0x137B"
    },
    "4979": {
      "op": "JUMPI"
    },
    "4980": {
      "op": "PUSH2",
      "value": "0x137B"
    },
    "4983": {
      "op": "PUSH2",
      "value": "0x1311"
    },
    "4986": {
      "jump": "i",
      "op": "JUMP"
    },
    "4987": {
      "op": "JUMPDEST"
    },
    "4988": {
      "op": "DUP2"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4991": {
      "op": "MSTORE"
    },
    "4992": {
      "op": "DUP4"
    },
    "4993": {
      "op": "DUP2"
    },
    "4994": {
      "op": "MSTORE"
    },
    "4995": {
      "op": "DUP7"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4998": {
      "op": "DUP6"
    },
    "4999": {
      "op": "DUP9"
    },
    "5000": {
      "op": "ADD"
    },
    "5001": {
      "op": "ADD"
    },
    "5002": {
      "op": "GT"
    },
    "5003": {
      "op": "ISZERO"
    },
    "5004": {
      "op": "PUSH2",
      "value": "0x1394"
    },
    "5007": {
      "op": "JUMPI"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5010": {
      "op": "DUP1"
    },
    "5011": {
      "op": "REVERT"
    },
    "5012": {
      "op": "JUMPDEST"
    },
    "5013": {
      "op": "DUP4"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5016": {
      "op": "DUP8"
    },
    "5017": {
      "op": "ADD"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5020": {
      "op": "DUP4"
    },
    "5021": {
      "op": "ADD"
    },
    "5022": {
      "op": "CALLDATACOPY"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5027": {
      "op": "DUP6"
    },
    "5028": {
      "op": "DUP4"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "ADD"
    },
    "5031": {
      "op": "MSTORE"
    },
    "5032": {
      "op": "DUP1"
    },
    "5033": {
      "op": "SWAP5"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "op": "SWAP3"
    },
    "5040": {
      "op": "SWAP2"
    },
    "5041": {
      "op": "POP"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "jump": "o",
      "op": "JUMP"
    },
    "5044": {
      "op": "JUMPDEST"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5047": {
      "op": "DUP1"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5050": {
      "op": "DUP1"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5055": {
      "op": "DUP7"
    },
    "5056": {
      "op": "DUP9"
    },
    "5057": {
      "op": "SUB"
    },
    "5058": {
      "op": "SLT"
    },
    "5059": {
      "op": "ISZERO"
    },
    "5060": {
      "op": "PUSH2",
      "value": "0x13CC"
    },
    "5063": {
      "op": "JUMPI"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5066": {
      "op": "DUP1"
    },
    "5067": {
      "op": "REVERT"
    },
    "5068": {
      "op": "JUMPDEST"
    },
    "5069": {
      "op": "DUP6"
    },
    "5070": {
      "op": "CALLDATALOAD"
    },
    "5071": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5074": {
      "op": "DUP2"
    },
    "5075": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5078": {
      "jump": "i",
      "op": "JUMP"
    },
    "5079": {
      "op": "JUMPDEST"
    },
    "5080": {
      "op": "SWAP5"
    },
    "5081": {
      "op": "POP"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5084": {
      "op": "DUP7"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "op": "CALLDATALOAD"
    },
    "5087": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5090": {
      "op": "DUP2"
    },
    "5091": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5094": {
      "jump": "i",
      "op": "JUMP"
    },
    "5095": {
      "op": "JUMPDEST"
    },
    "5096": {
      "op": "SWAP4"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5100": {
      "op": "DUP7"
    },
    "5101": {
      "op": "ADD"
    },
    "5102": {
      "op": "CALLDATALOAD"
    },
    "5103": {
      "op": "SWAP3"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5107": {
      "op": "DUP7"
    },
    "5108": {
      "op": "ADD"
    },
    "5109": {
      "op": "CALLDATALOAD"
    },
    "5110": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5119": {
      "op": "DUP1"
    },
    "5120": {
      "op": "DUP3"
    },
    "5121": {
      "op": "GT"
    },
    "5122": {
      "op": "ISZERO"
    },
    "5123": {
      "op": "PUSH2",
      "value": "0x140B"
    },
    "5126": {
      "op": "JUMPI"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5129": {
      "op": "DUP1"
    },
    "5130": {
      "op": "REVERT"
    },
    "5131": {
      "op": "JUMPDEST"
    },
    "5132": {
      "op": "PUSH2",
      "value": "0x1417"
    },
    "5135": {
      "op": "DUP10"
    },
    "5136": {
      "op": "DUP4"
    },
    "5137": {
      "op": "DUP11"
    },
    "5138": {
      "op": "ADD"
    },
    "5139": {
      "op": "PUSH2",
      "value": "0x1327"
    },
    "5142": {
      "jump": "i",
      "op": "JUMP"
    },
    "5143": {
      "op": "JUMPDEST"
    },
    "5144": {
      "op": "SWAP4"
    },
    "5145": {
      "op": "POP"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5148": {
      "op": "DUP9"
    },
    "5149": {
      "op": "ADD"
    },
    "5150": {
      "op": "CALLDATALOAD"
    },
    "5151": {
      "op": "SWAP2"
    },
    "5152": {
      "op": "POP"
    },
    "5153": {
      "op": "DUP1"
    },
    "5154": {
      "op": "DUP3"
    },
    "5155": {
      "op": "GT"
    },
    "5156": {
      "op": "ISZERO"
    },
    "5157": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5160": {
      "op": "JUMPI"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5163": {
      "op": "DUP1"
    },
    "5164": {
      "op": "REVERT"
    },
    "5165": {
      "op": "JUMPDEST"
    },
    "5166": {
      "op": "POP"
    },
    "5167": {
      "op": "PUSH2",
      "value": "0x143A"
    },
    "5170": {
      "op": "DUP9"
    },
    "5171": {
      "op": "DUP3"
    },
    "5172": {
      "op": "DUP10"
    },
    "5173": {
      "op": "ADD"
    },
    "5174": {
      "op": "PUSH2",
      "value": "0x1327"
    },
    "5177": {
      "jump": "i",
      "op": "JUMP"
    },
    "5178": {
      "op": "JUMPDEST"
    },
    "5179": {
      "op": "SWAP2"
    },
    "5180": {
      "op": "POP"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "op": "SWAP3"
    },
    "5183": {
      "op": "SWAP6"
    },
    "5184": {
      "op": "POP"
    },
    "5185": {
      "op": "SWAP3"
    },
    "5186": {
      "op": "SWAP6"
    },
    "5187": {
      "op": "SWAP1"
    },
    "5188": {
      "op": "SWAP4"
    },
    "5189": {
      "op": "POP"
    },
    "5190": {
      "jump": "o",
      "op": "JUMP"
    },
    "5191": {
      "op": "JUMPDEST"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5196": {
      "op": "DUP3"
    },
    "5197": {
      "op": "DUP5"
    },
    "5198": {
      "op": "SUB"
    },
    "5199": {
      "op": "SLT"
    },
    "5200": {
      "op": "ISZERO"
    },
    "5201": {
      "op": "PUSH2",
      "value": "0x1459"
    },
    "5204": {
      "op": "JUMPI"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5207": {
      "op": "DUP1"
    },
    "5208": {
      "op": "REVERT"
    },
    "5209": {
      "op": "JUMPDEST"
    },
    "5210": {
      "op": "DUP2"
    },
    "5211": {
      "op": "CALLDATALOAD"
    },
    "5212": {
      "op": "PUSH2",
      "value": "0x855"
    },
    "5215": {
      "op": "DUP2"
    },
    "5216": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5219": {
      "jump": "i",
      "op": "JUMP"
    },
    "5220": {
      "op": "JUMPDEST"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5223": {
      "op": "DUP1"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5228": {
      "op": "DUP5"
    },
    "5229": {
      "op": "DUP7"
    },
    "5230": {
      "op": "SUB"
    },
    "5231": {
      "op": "SLT"
    },
    "5232": {
      "op": "ISZERO"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x1479"
    },
    "5236": {
      "op": "JUMPI"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5239": {
      "op": "DUP1"
    },
    "5240": {
      "op": "REVERT"
    },
    "5241": {
      "op": "JUMPDEST"
    },
    "5242": {
      "op": "DUP4"
    },
    "5243": {
      "op": "CALLDATALOAD"
    },
    "5244": {
      "op": "PUSH2",
      "value": "0x1484"
    },
    "5247": {
      "op": "DUP2"
    },
    "5248": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5251": {
      "jump": "i",
      "op": "JUMP"
    },
    "5252": {
      "op": "JUMPDEST"
    },
    "5253": {
      "op": "SWAP3"
    },
    "5254": {
      "op": "POP"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5257": {
      "op": "DUP5"
    },
    "5258": {
      "op": "ADD"
    },
    "5259": {
      "op": "CALLDATALOAD"
    },
    "5260": {
      "op": "SWAP2"
    },
    "5261": {
      "op": "POP"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5264": {
      "op": "DUP5"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "CALLDATALOAD"
    },
    "5267": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5276": {
      "op": "DUP2"
    },
    "5277": {
      "op": "GT"
    },
    "5278": {
      "op": "ISZERO"
    },
    "5279": {
      "op": "PUSH2",
      "value": "0x14A7"
    },
    "5282": {
      "op": "JUMPI"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5285": {
      "op": "DUP1"
    },
    "5286": {
      "op": "REVERT"
    },
    "5287": {
      "op": "JUMPDEST"
    },
    "5288": {
      "op": "PUSH2",
      "value": "0x14B3"
    },
    "5291": {
      "op": "DUP7"
    },
    "5292": {
      "op": "DUP3"
    },
    "5293": {
      "op": "DUP8"
    },
    "5294": {
      "op": "ADD"
    },
    "5295": {
      "op": "PUSH2",
      "value": "0x1327"
    },
    "5298": {
      "jump": "i",
      "op": "JUMP"
    },
    "5299": {
      "op": "JUMPDEST"
    },
    "5300": {
      "op": "SWAP2"
    },
    "5301": {
      "op": "POP"
    },
    "5302": {
      "op": "POP"
    },
    "5303": {
      "op": "SWAP3"
    },
    "5304": {
      "op": "POP"
    },
    "5305": {
      "op": "SWAP3"
    },
    "5306": {
      "op": "POP"
    },
    "5307": {
      "op": "SWAP3"
    },
    "5308": {
      "jump": "o",
      "op": "JUMP"
    },
    "5309": {
      "op": "JUMPDEST"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5312": {
      "op": "DUP1"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5315": {
      "op": "DUP4"
    },
    "5316": {
      "op": "DUP6"
    },
    "5317": {
      "op": "SUB"
    },
    "5318": {
      "op": "SLT"
    },
    "5319": {
      "op": "ISZERO"
    },
    "5320": {
      "op": "PUSH2",
      "value": "0x14D0"
    },
    "5323": {
      "op": "JUMPI"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5326": {
      "op": "DUP1"
    },
    "5327": {
      "op": "REVERT"
    },
    "5328": {
      "op": "JUMPDEST"
    },
    "5329": {
      "op": "DUP3"
    },
    "5330": {
      "op": "CALLDATALOAD"
    },
    "5331": {
      "op": "PUSH2",
      "value": "0x14DB"
    },
    "5334": {
      "op": "DUP2"
    },
    "5335": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5338": {
      "jump": "i",
      "op": "JUMP"
    },
    "5339": {
      "op": "JUMPDEST"
    },
    "5340": {
      "op": "SWAP2"
    },
    "5341": {
      "op": "POP"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5344": {
      "op": "DUP4"
    },
    "5345": {
      "op": "ADD"
    },
    "5346": {
      "op": "CALLDATALOAD"
    },
    "5347": {
      "op": "PUSH2",
      "value": "0x14EB"
    },
    "5350": {
      "op": "DUP2"
    },
    "5351": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5354": {
      "jump": "i",
      "op": "JUMP"
    },
    "5355": {
      "op": "JUMPDEST"
    },
    "5356": {
      "op": "DUP1"
    },
    "5357": {
      "op": "SWAP2"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "op": "POP"
    },
    "5360": {
      "op": "SWAP3"
    },
    "5361": {
      "op": "POP"
    },
    "5362": {
      "op": "SWAP3"
    },
    "5363": {
      "op": "SWAP1"
    },
    "5364": {
      "op": "POP"
    },
    "5365": {
      "jump": "o",
      "op": "JUMP"
    },
    "5366": {
      "op": "JUMPDEST"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5369": {
      "op": "DUP1"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5372": {
      "op": "DUP1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5375": {
      "op": "DUP6"
    },
    "5376": {
      "op": "DUP8"
    },
    "5377": {
      "op": "SUB"
    },
    "5378": {
      "op": "SLT"
    },
    "5379": {
      "op": "ISZERO"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x150C"
    },
    "5383": {
      "op": "JUMPI"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5386": {
      "op": "DUP1"
    },
    "5387": {
      "op": "REVERT"
    },
    "5388": {
      "op": "JUMPDEST"
    },
    "5389": {
      "op": "DUP5"
    },
    "5390": {
      "op": "CALLDATALOAD"
    },
    "5391": {
      "op": "PUSH2",
      "value": "0x1517"
    },
    "5394": {
      "op": "DUP2"
    },
    "5395": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5398": {
      "jump": "i",
      "op": "JUMP"
    },
    "5399": {
      "op": "JUMPDEST"
    },
    "5400": {
      "op": "SWAP4"
    },
    "5401": {
      "op": "POP"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5404": {
      "op": "DUP6"
    },
    "5405": {
      "op": "ADD"
    },
    "5406": {
      "op": "CALLDATALOAD"
    },
    "5407": {
      "op": "SWAP3"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5411": {
      "op": "DUP6"
    },
    "5412": {
      "op": "ADD"
    },
    "5413": {
      "op": "CALLDATALOAD"
    },
    "5414": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5423": {
      "op": "DUP1"
    },
    "5424": {
      "op": "DUP3"
    },
    "5425": {
      "op": "GT"
    },
    "5426": {
      "op": "ISZERO"
    },
    "5427": {
      "op": "PUSH2",
      "value": "0x153B"
    },
    "5430": {
      "op": "JUMPI"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5433": {
      "op": "DUP1"
    },
    "5434": {
      "op": "REVERT"
    },
    "5435": {
      "op": "JUMPDEST"
    },
    "5436": {
      "op": "PUSH2",
      "value": "0x1547"
    },
    "5439": {
      "op": "DUP9"
    },
    "5440": {
      "op": "DUP4"
    },
    "5441": {
      "op": "DUP10"
    },
    "5442": {
      "op": "ADD"
    },
    "5443": {
      "op": "PUSH2",
      "value": "0x1327"
    },
    "5446": {
      "jump": "i",
      "op": "JUMP"
    },
    "5447": {
      "op": "JUMPDEST"
    },
    "5448": {
      "op": "SWAP4"
    },
    "5449": {
      "op": "POP"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5452": {
      "op": "DUP8"
    },
    "5453": {
      "op": "ADD"
    },
    "5454": {
      "op": "CALLDATALOAD"
    },
    "5455": {
      "op": "SWAP2"
    },
    "5456": {
      "op": "POP"
    },
    "5457": {
      "op": "DUP1"
    },
    "5458": {
      "op": "DUP3"
    },
    "5459": {
      "op": "GT"
    },
    "5460": {
      "op": "ISZERO"
    },
    "5461": {
      "op": "PUSH2",
      "value": "0x155D"
    },
    "5464": {
      "op": "JUMPI"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5467": {
      "op": "DUP1"
    },
    "5468": {
      "op": "REVERT"
    },
    "5469": {
      "op": "JUMPDEST"
    },
    "5470": {
      "op": "POP"
    },
    "5471": {
      "op": "PUSH2",
      "value": "0x156A"
    },
    "5474": {
      "op": "DUP8"
    },
    "5475": {
      "op": "DUP3"
    },
    "5476": {
      "op": "DUP9"
    },
    "5477": {
      "op": "ADD"
    },
    "5478": {
      "op": "PUSH2",
      "value": "0x1327"
    },
    "5481": {
      "jump": "i",
      "op": "JUMP"
    },
    "5482": {
      "op": "JUMPDEST"
    },
    "5483": {
      "op": "SWAP2"
    },
    "5484": {
      "op": "POP"
    },
    "5485": {
      "op": "POP"
    },
    "5486": {
      "op": "SWAP3"
    },
    "5487": {
      "op": "SWAP6"
    },
    "5488": {
      "op": "SWAP2"
    },
    "5489": {
      "op": "SWAP5"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "op": "SWAP3"
    },
    "5492": {
      "op": "POP"
    },
    "5493": {
      "jump": "o",
      "op": "JUMP"
    },
    "5494": {
      "op": "JUMPDEST"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5497": {
      "op": "DUP1"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5500": {
      "op": "DUP4"
    },
    "5501": {
      "op": "DUP6"
    },
    "5502": {
      "op": "SUB"
    },
    "5503": {
      "op": "SLT"
    },
    "5504": {
      "op": "ISZERO"
    },
    "5505": {
      "op": "PUSH2",
      "value": "0x1589"
    },
    "5508": {
      "op": "JUMPI"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5511": {
      "op": "DUP1"
    },
    "5512": {
      "op": "REVERT"
    },
    "5513": {
      "op": "JUMPDEST"
    },
    "5514": {
      "op": "DUP3"
    },
    "5515": {
      "op": "CALLDATALOAD"
    },
    "5516": {
      "op": "SWAP2"
    },
    "5517": {
      "op": "POP"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5520": {
      "op": "DUP4"
    },
    "5521": {
      "op": "ADD"
    },
    "5522": {
      "op": "CALLDATALOAD"
    },
    "5523": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5532": {
      "op": "DUP2"
    },
    "5533": {
      "op": "GT"
    },
    "5534": {
      "op": "ISZERO"
    },
    "5535": {
      "op": "PUSH2",
      "value": "0x15A7"
    },
    "5538": {
      "op": "JUMPI"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "DUP1"
    },
    "5542": {
      "op": "REVERT"
    },
    "5543": {
      "op": "JUMPDEST"
    },
    "5544": {
      "op": "PUSH2",
      "value": "0x15B3"
    },
    "5547": {
      "op": "DUP6"
    },
    "5548": {
      "op": "DUP3"
    },
    "5549": {
      "op": "DUP7"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "PUSH2",
      "value": "0x1327"
    },
    "5554": {
      "jump": "i",
      "op": "JUMP"
    },
    "5555": {
      "op": "JUMPDEST"
    },
    "5556": {
      "op": "SWAP2"
    },
    "5557": {
      "op": "POP"
    },
    "5558": {
      "op": "POP"
    },
    "5559": {
      "op": "SWAP3"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "op": "SWAP3"
    },
    "5562": {
      "op": "SWAP1"
    },
    "5563": {
      "op": "POP"
    },
    "5564": {
      "jump": "o",
      "op": "JUMP"
    },
    "5565": {
      "op": "JUMPDEST"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5568": {
      "op": "DUP2"
    },
    "5569": {
      "op": "DUP2"
    },
    "5570": {
      "op": "SHR"
    },
    "5571": {
      "op": "SWAP1"
    },
    "5572": {
      "op": "DUP3"
    },
    "5573": {
      "op": "AND"
    },
    "5574": {
      "op": "DUP1"
    },
    "5575": {
      "op": "PUSH2",
      "value": "0x15D1"
    },
    "5578": {
      "op": "JUMPI"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5581": {
      "op": "DUP3"
    },
    "5582": {
      "op": "AND"
    },
    "5583": {
      "op": "SWAP2"
    },
    "5584": {
      "op": "POP"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5588": {
      "op": "DUP3"
    },
    "5589": {
      "op": "LT"
    },
    "5590": {
      "op": "DUP2"
    },
    "5591": {
      "op": "SUB"
    },
    "5592": {
      "op": "PUSH2",
      "value": "0x15F1"
    },
    "5595": {
      "op": "JUMPI"
    },
    "5596": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5603": {
      "op": "SHL"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5606": {
      "op": "MSTORE"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5611": {
      "op": "MSTORE"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5616": {
      "op": "REVERT"
    },
    "5617": {
      "op": "JUMPDEST"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "op": "SWAP2"
    },
    "5620": {
      "op": "SWAP1"
    },
    "5621": {
      "op": "POP"
    },
    "5622": {
      "jump": "o",
      "op": "JUMP"
    },
    "5623": {
      "op": "JUMPDEST"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5626": {
      "op": "DUP1"
    },
    "5627": {
      "op": "DUP3"
    },
    "5628": {
      "op": "MSTORE"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5631": {
      "op": "SWAP1"
    },
    "5632": {
      "op": "DUP3"
    },
    "5633": {
      "op": "ADD"
    },
    "5634": {
      "op": "MSTORE"
    },
    "5635": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5670": {
      "op": "DUP3"
    },
    "5671": {
      "op": "ADD"
    },
    "5672": {
      "op": "MSTORE"
    },
    "5673": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5680": {
      "op": "SHL"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5683": {
      "op": "DUP3"
    },
    "5684": {
      "op": "ADD"
    },
    "5685": {
      "op": "MSTORE"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5688": {
      "op": "ADD"
    },
    "5689": {
      "op": "SWAP1"
    },
    "5690": {
      "jump": "o",
      "op": "JUMP"
    },
    "5691": {
      "op": "JUMPDEST"
    },
    "5692": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5699": {
      "op": "SHL"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5702": {
      "op": "MSTORE"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5707": {
      "op": "MSTORE"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5712": {
      "op": "REVERT"
    },
    "5713": {
      "op": "JUMPDEST"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5716": {
      "op": "DUP3"
    },
    "5717": {
      "op": "DUP3"
    },
    "5718": {
      "op": "LT"
    },
    "5719": {
      "op": "ISZERO"
    },
    "5720": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5723": {
      "op": "JUMPI"
    },
    "5724": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x163B"
    },
    "5730": {
      "jump": "i",
      "op": "JUMP"
    },
    "5731": {
      "op": "JUMPDEST"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "op": "SUB"
    },
    "5734": {
      "op": "SWAP1"
    },
    "5735": {
      "jump": "o",
      "op": "JUMP"
    },
    "5736": {
      "op": "JUMPDEST"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5739": {
      "op": "DUP1"
    },
    "5740": {
      "op": "DUP3"
    },
    "5741": {
      "op": "MSTORE"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5744": {
      "op": "SWAP1"
    },
    "5745": {
      "op": "DUP3"
    },
    "5746": {
      "op": "ADD"
    },
    "5747": {
      "op": "MSTORE"
    },
    "5748": {
      "op": "PUSH32",
      "value": "0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5783": {
      "op": "DUP3"
    },
    "5784": {
      "op": "ADD"
    },
    "5785": {
      "op": "MSTORE"
    },
    "5786": {
      "op": "PUSH12",
      "value": "0x39103337B9103437B63232B9"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5804": {
      "op": "DUP3"
    },
    "5805": {
      "op": "ADD"
    },
    "5806": {
      "op": "MSTORE"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5809": {
      "op": "ADD"
    },
    "5810": {
      "op": "SWAP1"
    },
    "5811": {
      "jump": "o",
      "op": "JUMP"
    },
    "5812": {
      "op": "JUMPDEST"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5817": {
      "op": "DUP3"
    },
    "5818": {
      "op": "DUP5"
    },
    "5819": {
      "op": "SUB"
    },
    "5820": {
      "op": "SLT"
    },
    "5821": {
      "op": "ISZERO"
    },
    "5822": {
      "op": "PUSH2",
      "value": "0x16C6"
    },
    "5825": {
      "op": "JUMPI"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5828": {
      "op": "DUP1"
    },
    "5829": {
      "op": "REVERT"
    },
    "5830": {
      "op": "JUMPDEST"
    },
    "5831": {
      "op": "DUP2"
    },
    "5832": {
      "op": "MLOAD"
    },
    "5833": {
      "op": "PUSH2",
      "value": "0x855"
    },
    "5836": {
      "op": "DUP2"
    },
    "5837": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "5840": {
      "jump": "i",
      "op": "JUMP"
    },
    "5841": {
      "op": "JUMPDEST"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5848": {
      "op": "SHL"
    },
    "5849": {
      "op": "SUB"
    },
    "5850": {
      "op": "DUP8"
    },
    "5851": {
      "op": "DUP2"
    },
    "5852": {
      "op": "AND"
    },
    "5853": {
      "op": "DUP3"
    },
    "5854": {
      "op": "MSTORE"
    },
    "5855": {
      "op": "DUP7"
    },
    "5856": {
      "op": "DUP2"
    },
    "5857": {
      "op": "AND"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5860": {
      "op": "DUP4"
    },
    "5861": {
      "op": "ADD"
    },
    "5862": {
      "op": "MSTORE"
    },
    "5863": {
      "op": "DUP6"
    },
    "5864": {
      "op": "AND"
    },
    "5865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5867": {
      "op": "DUP3"
    },
    "5868": {
      "op": "ADD"
    },
    "5869": {
      "op": "MSTORE"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5872": {
      "op": "DUP2"
    },
    "5873": {
      "op": "ADD"
    },
    "5874": {
      "op": "DUP5"
    },
    "5875": {
      "op": "SWAP1"
    },
    "5876": {
      "op": "MSTORE"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5881": {
      "op": "DUP3"
    },
    "5882": {
      "op": "ADD"
    },
    "5883": {
      "op": "DUP2"
    },
    "5884": {
      "op": "SWAP1"
    },
    "5885": {
      "op": "MSTORE"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5888": {
      "op": "SWAP1"
    },
    "5889": {
      "op": "PUSH2",
      "value": "0x170C"
    },
    "5892": {
      "op": "SWAP1"
    },
    "5893": {
      "op": "DUP4"
    },
    "5894": {
      "op": "ADD"
    },
    "5895": {
      "op": "DUP6"
    },
    "5896": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "5899": {
      "jump": "i",
      "op": "JUMP"
    },
    "5900": {
      "op": "JUMPDEST"
    },
    "5901": {
      "op": "DUP3"
    },
    "5902": {
      "op": "DUP2"
    },
    "5903": {
      "op": "SUB"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5906": {
      "op": "DUP5"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "MSTORE"
    },
    "5909": {
      "op": "PUSH2",
      "value": "0x171E"
    },
    "5912": {
      "op": "DUP2"
    },
    "5913": {
      "op": "DUP6"
    },
    "5914": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "5917": {
      "jump": "i",
      "op": "JUMP"
    },
    "5918": {
      "op": "JUMPDEST"
    },
    "5919": {
      "op": "SWAP10"
    },
    "5920": {
      "op": "SWAP9"
    },
    "5921": {
      "op": "POP"
    },
    "5922": {
      "op": "POP"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "op": "POP"
    },
    "5927": {
      "op": "POP"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "jump": "o",
      "op": "JUMP"
    },
    "5931": {
      "op": "JUMPDEST"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5934": {
      "op": "DUP3"
    },
    "5935": {
      "op": "NOT"
    },
    "5936": {
      "op": "DUP3"
    },
    "5937": {
      "op": "GT"
    },
    "5938": {
      "op": "ISZERO"
    },
    "5939": {
      "op": "PUSH2",
      "value": "0x173E"
    },
    "5942": {
      "op": "JUMPI"
    },
    "5943": {
      "op": "PUSH2",
      "value": "0x173E"
    },
    "5946": {
      "op": "PUSH2",
      "value": "0x163B"
    },
    "5949": {
      "jump": "i",
      "op": "JUMP"
    },
    "5950": {
      "op": "JUMPDEST"
    },
    "5951": {
      "op": "POP"
    },
    "5952": {
      "op": "ADD"
    },
    "5953": {
      "op": "SWAP1"
    },
    "5954": {
      "jump": "o",
      "op": "JUMP"
    },
    "5955": {
      "op": "JUMPDEST"
    },
    "5956": {
      "op": "DUP4"
    },
    "5957": {
      "op": "DUP2"
    },
    "5958": {
      "op": "MSTORE"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5963": {
      "op": "DUP3"
    },
    "5964": {
      "op": "ADD"
    },
    "5965": {
      "op": "MSTORE"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5968": {
      "op": "PUSH2",
      "value": "0x175C"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5973": {
      "op": "DUP4"
    },
    "5974": {
      "op": "ADD"
    },
    "5975": {
      "op": "DUP6"
    },
    "5976": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "5979": {
      "jump": "i",
      "op": "JUMP"
    },
    "5980": {
      "op": "JUMPDEST"
    },
    "5981": {
      "op": "DUP3"
    },
    "5982": {
      "op": "DUP2"
    },
    "5983": {
      "op": "SUB"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5986": {
      "op": "DUP5"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "op": "MSTORE"
    },
    "5989": {
      "op": "PUSH2",
      "value": "0x176E"
    },
    "5992": {
      "op": "DUP2"
    },
    "5993": {
      "op": "DUP6"
    },
    "5994": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "5997": {
      "jump": "i",
      "op": "JUMP"
    },
    "5998": {
      "op": "JUMPDEST"
    },
    "5999": {
      "op": "SWAP7"
    },
    "6000": {
      "op": "SWAP6"
    },
    "6001": {
      "op": "POP"
    },
    "6002": {
      "op": "POP"
    },
    "6003": {
      "op": "POP"
    },
    "6004": {
      "op": "POP"
    },
    "6005": {
      "op": "POP"
    },
    "6006": {
      "op": "POP"
    },
    "6007": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d49f640a9f0fac7b31bfb1c835551a72e71806bf",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return\n            operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators cannot\n     * call `transferFrom` (unless they have allowance), and accounts with\n     * allowance cannot call `operatorSend` (unless they are operators).\n     *\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n     */\n    function transferFrom(\n        address holder,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) internal virtual {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) internal virtual {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(\n        address holder,\n        address spender,\n        uint256 value\n    ) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1014:17251:7:-:0;;;2242:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2374:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2397:17:7;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2425:42:7;;;;:22;;:42;;;;;:::i;:::-;;2482:9;2477:126;2501:17;:24;2497:1;:28;2477:126;;;2588:4;2546:17;:39;2564:17;2582:1;2564:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2546:39:7;;;;;;;;;;;-1:-1:-1;2546:39:7;:46;;-1:-1:-1;;2546:46:7;;;;;;;;;;2527:3;;;;:::i;:::-;;;;2477:126;;;-1:-1:-1;2644:97:7;;-1:-1:-1;;;2644:97:7;;2694:4;2644:97;;;3268:34:72;;;2701:24:7;3318:18:72;;;3311:34;3361:18;;;3354:43;1168:42:7;;2644:41;;3203:18:72;;2644:97:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2751:96:7;;-1:-1:-1;;;2751:96:7;;2801:4;2751:96;;;3268:34:72;;;2808:23:7;3318:18:72;;;3311:34;3361:18;;;3354:43;1168:42:7;;-1:-1:-1;2751:41:7;;-1:-1:-1;3203:18:72;;2751:96:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:612;;;1014:17251;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1014:17251:7;;;-1:-1:-1;1014:17251:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1014:17251:7;-1:-1:-1;;;;;1014:17251:7;;;;;;;;;;;-1:-1:-1;1014:17251:7;;;;;;;;;;;;;;;;;;;;;14:127:72;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:72;247:40;;-1:-1:-1;;;;;302:34:72;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:72:o;426:695::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:72;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:72;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;1018:2;1015:1;1012:9;1009:81;;;1078:1;1073:2;1068;1059:7;1055:16;1051:25;1044:36;1009:81;-1:-1:-1;1108:7:72;426:695;-1:-1:-1;;;;;426:695:72:o;1126:1528::-;1259:6;1267;1275;1328:2;1316:9;1307:7;1303:23;1299:32;1296:52;;;1344:1;1341;1334:12;1296:52;1371:16;;-1:-1:-1;;;;;1436:14:72;;;1433:34;;;1463:1;1460;1453:12;1433:34;1486:61;1539:7;1530:6;1519:9;1515:22;1486:61;:::i;:::-;1476:71;;1566:2;1556:12;;1614:2;1603:9;1599:18;1593:25;1643:2;1633:8;1630:16;1627:36;;;1659:1;1656;1649:12;1627:36;1682:63;1737:7;1726:8;1715:9;1711:24;1682:63;:::i;:::-;1672:73;;;1791:2;1780:9;1776:18;1770:25;1820:2;1810:8;1807:16;1804:36;;;1836:1;1833;1826:12;1804:36;1859:24;;1914:4;1906:13;;1902:27;-1:-1:-1;1892:55:72;;1943:1;1940;1933:12;1892:55;1972:2;1966:9;1994:2;1990;1987:10;1984:36;;;2000:18;;:::i;:::-;2046:2;2043:1;2039:10;2029:20;;2069:28;2093:2;2089;2085:11;2069:28;:::i;:::-;2131:15;;;2201:11;;;2197:20;;;2162:12;;;;2229:19;;;2226:39;;;2261:1;2258;2251:12;2226:39;2285:11;;;;2305:319;2321:6;2316:3;2313:15;2305:319;;;2388:10;;;-1:-1:-1;;;;;;2431:31:72;;2421:42;;2411:140;;2505:1;2534:2;2530;2523:14;2411:140;2564:18;;;2338:12;;;;2602;;;;2305:319;;;2643:5;2633:15;;;;;;;;1126:1528;;;;;:::o;2659:127::-;2720:10;2715:3;2711:20;2708:1;2701:31;2751:4;2748:1;2741:15;2775:4;2772:1;2765:15;2791:232;2830:3;2851:17;;;2848:140;;2910:10;2905:3;2901:20;2898:1;2891:31;2945:4;2942:1;2935:15;2973:4;2970:1;2963:15;2848:140;-1:-1:-1;3015:1:72;3004:13;;2791:232::o;3408:380::-;3487:1;3483:12;;;;3530;;;3551:61;;3605:4;3597:6;3593:17;3583:27;;3551:61;3658:2;3650:6;3647:14;3627:18;3624:38;3621:161;;3704:10;3699:3;3695:20;3692:1;3685:31;3739:4;3736:1;3729:15;3767:4;3764:1;3757:15;3621:161;;3408:380;;;:::o;:::-;1014:17251:7;;;;;;",
  "sourcePath": "/Users/benjamin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC777/ERC777.sol",
  "type": "contract"
}